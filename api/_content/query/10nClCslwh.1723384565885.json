{"_path":"/2020/08/09/digital-ocean-docker-swarm-django-traefik-nginx","_dir":"09","_draft":false,"_partial":false,"_locale":"","title":"Deploying Django applications with docker swarm on DigitalOcean using GitLab CI, Traefik, NGINX and REX-Ray","description":"A guide to deploying Django applications with docker using popular open-source tools","layout":"post","date":"2020-08-09T00:00:00.000Z","comments":true,"image":"/static/shark.jpg","tags":["django","docker","digital-ocean","vue","gitlab","rex-ray","traefik","nginx","swarm"],"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I recently wrote two articles about deploying Django applications to AWS serverless environments: one on "},{"type":"element","tag":"a","props":{"href":"https://briancaffey.github.io/2020/06/02/django-postgres-vue-gitlab-ecs.html","rel":["nofollow"]},"children":[{"type":"text","value":"AWS Fargate"}]},{"type":"text","value":" (CloudFront, ALB and ECS Fargate containers) and one on "},{"type":"element","tag":"a","props":{"href":"https://briancaffey.github.io/2020/08/01/django-and-lambda-with-cdk-and-api-gateway.html","rel":["nofollow"]},"children":[{"type":"text","value":"AWS Lambda"}]},{"type":"text","value":" (Lambda + API Gateway, without using Zappa or Serverless Framework). Both projects focused on automating as much of the setup and operation as possible using DevOps patterns: Infrastructure as Code, GitOps, CI/CD and docker containers. I used AWS resources exclusively (with the exception of GitLab) with the help of "},{"type":"element","tag":"a","props":{"href":"https://aws.amazon.com/cdk/","rel":["nofollow"]},"children":[{"type":"text","value":"AWS Cloud Development Kit (CDK)"}]},{"type":"text","value":", an awesome tool that I have really come to like. In general I really like AWS, and the more I use it I start to think about what I would do without it. Also, a lot of the feedback I got on these projects recommended to \"just use a VPS\" instead of bothering with AWS because it is complicated, expensive, overkill, etc. This got me thinking about how far I could get in deploying a Django application on a server with little or no external services that AWS has spoiled me with. After a little bit of discomfort and confusion, I was able to check off most of what I was hoping to and came away with a few questions as well. If you are interested to know how I got things setup and and hear some of my thoughts on running Django applications in production, continue reading!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this article, I'm going to go over my approach to deploying and running Django applications using DigitalOcean Droplets (Linux-based virtual machine that runs on top of virtualized hardware) and block storage volumes (network-based block devices that provide additional data storage for Droplets)."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I'll also touch on trade-offs between DigitalOcean and AWS and emphasize aspects of the project that confuse/d me with these block quotes."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here's a link to my project that I'll be referencing: "},{"type":"element","tag":"a","props":{"href":"https://gitlab.com/briancaffey/digital-ocean-docker-swarm-django-traefik","rel":["nofollow"]},"children":[{"type":"text","value":"https://gitlab.com/briancaffey/digital-ocean-docker-swarm-django-traefik"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The project setup is a combination of some of the best practices I have picked up along the way as well as some very helpful guides, repositories and blog posts that I'll do my best to reference throughout this article."}]},{"type":"element","tag":"h2","props":{"id":"overview"},"children":[{"type":"text","value":"Overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here are some of the key parts of the project that I'll go over:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"DigitalOcean and GitLab setup"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Creating an A Record that points to our Droplet IP"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Using a prebuilt VM image that ships with docker and docker-compose"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Setting up the REX-Ray storage driver to automatically provision Digital Ocean block storage volumes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Setting up a docker swarm cluster"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Setting up a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".gitlab-ci.yml"}]},{"type":"text","value":" file to build images and push them to a private GitLab CI project registry"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Writing a docker-compose file to configure the services (containers) that will support the application"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Deploying a stack to the docker swarm cluster on DigitalOcean from our GitLab CI environment over SSH"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Django project settings and management commands for our Postgres database and static files"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Monitoring, logging and debugging"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Destroying the environment + cleanup"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before I dig into all of this, I recommend that you check out "},{"type":"element","tag":"a","props":{"href":"https://mattsegal.dev/django-prod-architectures.html","rel":["nofollow"]},"children":[{"type":"text","value":"this article about Django production architectures by Matt Segal"}]},{"type":"text","value":". This is a great primer for a lot of what I'll be talking about and it includes some great visualizations. "},{"type":"element","tag":"a","props":{"href":"https://mattsegal.dev","rel":["nofollow"]},"children":[{"type":"text","value":"mattsegal.dev"}]},{"type":"text","value":" has lots of good content related to Django, I also recommend checking out "},{"type":"element","tag":"a","props":{"href":"https://mattsegal.dev/nginx-django-reverse-proxy-config.html","rel":["nofollow"]},"children":[{"type":"text","value":"this article about how NGINX is used with Django"}]},{"type":"text","value":". Thanks for the great resources, Matt!"}]},{"type":"element","tag":"h2","props":{"id":"digitalocean-setup"},"children":[{"type":"text","value":"DigitalOcean setup"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sign up for a new DigitalOcean account if you don't already have one"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create a DigitalOcean project "},{"type":"element","tag":"a","props":{"href":"https://cloud.digitalocean.com/projects/new","rel":["nofollow"]},"children":[{"type":"text","value":"https://cloud.digitalocean.com/projects/new"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create a personal access token (we will use this to configure a docker addon that will provision block storage volumes automatically) "},{"type":"element","tag":"a","props":{"href":"https://cloud.digitalocean.com/account/api/tokens","rel":["nofollow"]},"children":[{"type":"text","value":"https://cloud.digitalocean.com/account/api/tokens"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create and add an SSH key to your account. This is a pretty simple step, but DigitalOcean still has really thorough documentation on how to do this (see "},{"type":"element","tag":"a","props":{"href":"https://www.digitalocean.com/docs/droplets/how-to/add-ssh-keys/","rel":["nofollow"]},"children":[{"type":"text","value":"this article"}]},{"type":"text","value":" for more information)"}]}]},{"type":"element","tag":"h2","props":{"id":"prebuilt-docker-vm-image"},"children":[{"type":"text","value":"Prebuilt Docker VM image"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"From the "},{"type":"element","tag":"a","props":{"href":"https://cloud.digitalocean.com/droplets/new","rel":["nofollow"]},"children":[{"type":"text","value":"Create Droplets"}]},{"type":"text","value":" page, select "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Marketplace"}]},{"type":"text","value":" and search for "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker"}]},{"type":"text","value":". Select the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Docker 5:19.03.1~3 18.04"}]},{"type":"text","value":" image. Note that this VM is Ubuntun 18.04 with Docker Community Edition and docker-compose pre-installed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Select the basic plan, and then scroll to the left to choose the $5.00/month option. Select a datacenter region. Most of these regions should be OK, but you should verify that the region you have selected supports volumes (they may all support volumes, but there are some DO features that are not supported accross all regiongs, similar to AWS). Do not select a VPC or any of the additional options."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For Authentication, select the SSH key that you created earlier."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Take note of the Droplet's IP address; we will use this in the next step."}]},{"type":"element","tag":"h2","props":{"id":"gitlab-setup"},"children":[{"type":"text","value":"GitLab setup"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create a new GitLab project and clone it locally. You can also clone or fork my project and use that as a starting point. Go to "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Settings > CI/CD > Variables"}]},{"type":"text","value":" in your GitLab project and add the following environment variables:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"SSH_PRIVATE_KEY"}]},{"type":"text","value":": the value should start with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"-----BEGIN RSA PRIVATE KEY-----"}]},{"type":"text","value":" and end with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"-----END RSA PRIVATE KEY-----"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DROPLET_IP"}]},{"type":"text","value":": the IP address of the droplet you just created"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"POSTGRES_PASSWORD"}]},{"type":"text","value":": a secure password that we will use for our Postgres database (we will share this with our Django application later on)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"SECRET_KEY"}]},{"type":"text","value":": a random secret key to use for our Django application."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DEBUG"}]},{"type":"text","value":": the number "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"0"}]}]}]},{"type":"element","tag":"h2","props":{"id":"a-record"},"children":[{"type":"text","value":"A Record"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By the end of this project you will be able to deploy your Django application to a live domain name provided that you have one. All you need to do is create an A Record that points to the Droplet IP. There are no DNS configuration changes to make inside of DigitalOcean. I'm using a domain that I purchased through Route53. You can get a free "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".tk"}]},{"type":"text","value":" domain from "},{"type":"element","tag":"a","props":{"href":"https://www.freenom.com/en/freeandpaiddomains.html","rel":["nofollow"]},"children":[{"type":"text","value":"freenom"}]},{"type":"text","value":". I have used this before and it is a great option for testing things out."}]},{"type":"element","tag":"h2","props":{"id":"ssh-into-your-digitalocean-droplet"},"children":[{"type":"text","value":"SSH into your DigitalOcean Droplet"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can do this with the following command:"}]},{"type":"element","tag":"pre","props":{"code":"ssh -i ~/.ssh/a1_rsa root@123.45.578.91\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"ssh -i ~/.ssh/a1_rsa root@123.45.578.91\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"a1_rsa"}]},{"type":"text","value":" is the private key I added to GitHub. You can logout for now, but keep this command handy, because we will be coming back to our Droplet via SSH shortly."}]},{"type":"element","tag":"h2","props":{"id":"add-the-rex-ray-docker-plugin"},"children":[{"type":"text","value":"Add the REX-Ray docker plugin"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This step is very simple, you can follow along with this short guide: "},{"type":"element","tag":"a","props":{"href":"https://www.digitalocean.com/community/questions/how-to-attach-digitalocean-block-storage-to-docker-container","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.digitalocean.com/community/questions/how-to-attach-digitalocean-block-storage-to-docker-container"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There is basically one command to run:"}]},{"type":"element","tag":"pre","props":{"code":"docker plugin install rexray/dobs DOBS_TOKEN=YOUR_DIGITALOCEAN_TOKEN DOBS_REGION=nyc1 LINUX_VOLUME_FILEMODE=0775\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"docker plugin install rexray/dobs DOBS_TOKEN=YOUR_DIGITALOCEAN_TOKEN DOBS_REGION=nyc1 LINUX_VOLUME_FILEMODE=0775\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You will need to make sure that you replace "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"YOUR_DIGITALOCEAN_TOKEN"}]},{"type":"text","value":" with the personal access token you added earlier. Also, "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DOBS_REGION"}]},{"type":"text","value":" should be the region you selected for your Droplet earlier."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Check that the plugin was installed correctly with:"}]},{"type":"element","tag":"pre","props":{"code":"docker plugin ls\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"docker plugin ls\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here's a quick intro to REX-Ray from "},{"type":"element","tag":"a","props":{"href":"https://rexray.readthedocs.io/en/stable/","rel":["nofollow"]},"children":[{"type":"text","value":"rexray.readthedocs.io"}]},{"type":"text","value":":"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"REX-Ray is an open source, storage management solution designed to support container runtimes such as Docker and Mesos. REX-Ray enables stateful applications, such as databases, to persist and maintain its data after the life cycle of the container has ended. Built-in high availability enables orchestrators such as Docker Swarm, Kubernetes, and Mesos Frameworks like Marathon to automatically orchestrate storage tasks between hosts in a cluster."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the context of this project, REX-Ray will automate the creation of DigitalOcean Block Storage Volumes. We will talk about volumes and how they are used later on in this article."}]},{"type":"element","tag":"h2","props":{"id":"gitlab-ciyml"},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".gitlab-ci.yml"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".gitlab-ci.yml"}]},{"type":"text","value":" is a file that configures pipelines when code is pushed to GitLab, similar to how GitHub Actions work with GitHub. This single file is a huge topic, if you are unfamiliar with GitLab CI, you might want to have a look over "},{"type":"element","tag":"a","props":{"href":"https://docs.gitlab.com/ee/ci/yaml/","rel":["nofollow"]},"children":[{"type":"text","value":"this page from the GitLab documentation"}]},{"type":"text","value":" which goes over all of the configuration options with many examples. Also, "},{"type":"element","tag":"a","props":{"href":"https://docs.gitlab.com/ee/ci/variables/predefined_variables.html","rel":["nofollow"]},"children":[{"type":"text","value":"this documentation page"}]},{"type":"text","value":" covers the predefined environment variables that are made available to GitLab CI pipelines. I'm using these in a few different places as we will see shortly."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"CI/CD pipelines that I define with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".gitlab-ci.yml"}]},{"type":"text","value":" typically contain three stages: "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"test"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"build"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"deploy"}]},{"type":"text","value":". We will focus on the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"build"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"deploy"}]},{"type":"text","value":" stages for now (reference the article on my Fargate project linked above for reference on setting up unit tests with pytest)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"build-backend"}]},{"type":"text","value":" is the name of a GitLab CI job that builds and tags a docker image from the source code in the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":" directory of this project and pushes the tagged container image to a private image registry on gitlab.com that we will use later."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here's the YAML code for "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"build-backend"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"build-backend:\n  stage: build\n  image: docker:19.03.1\n  services:\n    - docker:19.03.5-dind\n  before_script:\n    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY\n  script:\n    - |\n      docker build \\\n        -t $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA \\\n        -f backend/docker/Dockerfile.prod \\\n        ./backend/\n    - docker push $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA\n","language":"yml","meta":"","className":"language-yml shiki shiki-themes github-light github-dark monokai","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"build-backend"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  stage"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"build\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  image"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"docker:19.03.1\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  services"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"docker:19.03.5-dind\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  before_script"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  script"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"|\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"      docker build \\\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"        -t $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA \\\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"        -f backend/docker/Dockerfile.prod \\\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"        ./backend/\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"docker push $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"build-nginx"}]},{"type":"text","value":" is almost identical, but the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker build"}]},{"type":"text","value":" arguments are slightly different. There are three arguments for the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker build"}]},{"type":"text","value":" command that I'm using here:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"-t"}]},{"type":"text","value":": the tag to tag the built image with"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"-f"}]},{"type":"text","value":": the Dockerfile to be used for building the image"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"context"}]},{"type":"text","value":" that is sent to the docker daemon when we build the image"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"-t"}]},{"type":"text","value":" makes use of two predefined GitLab CI variables: "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CI_REGISTRY_IMAGE"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CI_COMMIT_SHORT_SHA"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"$CI_REGISTRY_IMAGE"}]},{"type":"text","value":" is the URL for the private image registry on gitlab.com that we push our images to that is specific to our project: "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"registry.gitlab.com/<gitlab_username>/<project_name>"}]},{"type":"text","value":", and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CI_COMMIT_SHORT_SHA"}]},{"type":"text","value":" is an character alphanumeric value that contains the truncated name of the commit hash, this is known as the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"tag"}]},{"type":"text","value":", even though we pass in more than just this value. We combine these two values with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/"}]},{"type":"text","value":" and the name of the image we are building, such as "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":", so the full value being passed to "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"-t"}]},{"type":"text","value":" is:"}]},{"type":"element","tag":"pre","props":{"code":"registry.gitlab.com/gitlab-username/my-project/backend:abcd1234\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"registry.gitlab.com/gitlab-username/my-project/backend:abcd1234\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"-f"}]},{"type":"text","value":" is the path to the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Dockerfile"}]},{"type":"text","value":" we are using relative to the directory where we are running the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker build"}]},{"type":"text","value":" command, which is the root directory of the project."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The final argument defines the context that we are using to build the image, and this is an important part for understanding how Docker works. This argument defines the directory that is zipped up and sent to the docker daemon via the docker API. When we build an image with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker build"}]},{"type":"text","value":", we are essentially using the docker CLI to make a POST request to our docker daemon (server) where the POST data contains all of the files that we will have access to in the steps of the Dockerfile (such as "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ADD"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"COPY"}]},{"type":"text","value":" -- we will get to these soon). There's a key difference between the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nginx"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker build"}]},{"type":"text","value":" commands: the context for "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":" is "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":", but the context for "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nginx"}]},{"type":"text","value":" is "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"."}]},{"type":"text","value":" (the root of the project). This is because we may want access to another top level directory in our project that contains, for example, a Vue.js or React application, that we will build into our NGINX container. In order to be able to access both files in the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nginx"}]},{"type":"text","value":" and the folder containing our frontend app, we need to send a context that contains both of these directories. Sending too many files to to the docker daemon when you run docker build will usually cause the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker build"}]},{"type":"text","value":" command to hang. The first line of output from a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker build"}]},{"type":"text","value":" command should be something like this:"}]},{"type":"element","tag":"pre","props":{"code":"Sending build context to Docker daemon  24.58kB\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Sending build context to Docker daemon  24.58kB\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If this number is too high, you should use a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".dockerignore"}]},{"type":"text","value":" file that ignores any files or directories you don't want to send to the docker daemon (similar to how "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".gitignore"}]},{"type":"text","value":" works with git)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To be able to pull and push (read and write) images to our private project container image registry, we need login with our docker client using the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker login"}]},{"type":"text","value":" command in the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"before_script"}]},{"type":"text","value":" as well two other predefined GitLab CI variables: "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CI_JOB_TOKEN"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CI_REGISTRY"}]},{"type":"text","value":". This all happens using a special service called "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker-in-docker"}]},{"type":"text","value":" which I won't go into too much detail here, but it is a common practice when working with containers in a CI/CD environment that itself which is also based on containers, such as GitLab CI (each job runs in a container -- the key "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"image"}]},{"type":"text","value":" -- and can define additional containers -- the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"services"}]},{"type":"text","value":" key -- to help with the CI job). Once the two images for "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nginx"}]},{"type":"text","value":" have been built and pushed, our GitLab CI pipeline moves on to the next stage: "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"deploy"}]},{"type":"text","value":". In the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"deploy"}]},{"type":"text","value":" stage, we will start these and other containers on our DigitalOcean droplet, so we are getting close, but there is a lot more to explain. Before we deploy our containers, we need to do some one-time setup:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"initialize a single-node docker swarm cluster on our Droplet and"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"create a docker network that our cluster's services (containers) will use"}]}]},{"type":"element","tag":"h2","props":{"id":"setup-a-docker-swarm-cluster"},"children":[{"type":"text","value":"Setup a docker swarm cluster"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To setup a docker swarm cluster, SSH into the Droplet with the command we introduced above ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ssh -i ~/.ssh/a1_rsa root@123.45.578.91"}]},{"type":"text","value":" where "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"a1_rsa"}]},{"type":"text","value":" is the name of the private key file -- you can ignore the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"-i ~/.ssh/a1_rsa"}]},{"type":"text","value":" part if you are using an SSH key called "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"id_rsa"}]},{"type":"text","value":"), and run the following command:"}]},{"type":"element","tag":"pre","props":{"code":"docker swarm init --advertise-addr DROPLET_IP\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"docker swarm init --advertise-addr DROPLET_IP\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Replace "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DROPLET_IP"}]},{"type":"text","value":" with your Droplet's IP address (e.g. "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"123.45.578.91"}]},{"type":"text","value":"). Check out "},{"type":"element","tag":"a","props":{"href":"https://www.digitalocean.com/community/tutorials/how-to-create-a-cluster-of-docker-containers-with-docker-swarm-and-digitalocean-on-ubuntu-16-04","rel":["nofollow"]},"children":[{"type":"text","value":"this article"}]},{"type":"text","value":" for some additional information about using docker swarm on GitLab. It is a little bit outdated, but the main ideas should still hold up. Docker swarm is designed to orchestrate containers running on a group (or swarm) of multiple machines. However, it is perfectly fine to run a single-node cluster as we are doing here."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Docker swarm uses docker-compose files, but using docker swarm is very different from running "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker-compose up"}]},{"type":"text","value":", a command which you might see people running both locally and in production and which also uses docker-compose files. As a best practice, you should not be using "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker-compose"}]},{"type":"text","value":" (the command) in production. Many people do this, and several official tutorials will often end with \"now just run "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker-compose up"}]},{"type":"text","value":" and you are done\". The first time I ran containers in the cloud I pulled my git repo into a VM, installed docker and docker-compose and ran "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker-compose up"}]},{"type":"text","value":". It is pretty easy and it works very similarly in both local and production environments, but this guide will be using "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker-compose"}]},{"type":"text","value":" in production. There is more I could say here, but the main point is that docker swarm is a simplified version of something like Kubernetes, but it comes built-in to docker and is very simple to use."}]},{"type":"element","tag":"h2","props":{"id":"defining-an-overlay-network"},"children":[{"type":"text","value":"Defining an overlay network"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"SSH into your droplet and run the following command:"}]},{"type":"element","tag":"pre","props":{"code":"docker network create --driver=overlay traefik-public\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"docker network create --driver=overlay traefik-public\n"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usually we define networks in our docker-compose file, but this network needs to be defined first and then referenced in our docker-compose file. Here's a thread on SO that goes into a little bit more on why this is necessary, but I still don't have a very clear idea of why this is the case. With another configuration or perhaps docker-compose version, this may not be needed. I'll update this part of the article if I figure anything out."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let's go over one more docker concept that will helpful in the next few steps. When you run "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker ps"}]},{"type":"text","value":" on your local machine, the docker CLI first looks to see if the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DOCKER_HOST"}]},{"type":"text","value":" environment variable is set. If it is not, then docker defaults to "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"unix:///var/run/docker.sock"}]},{"type":"text","value":", a UNIX socket. Check out "},{"type":"element","tag":"a","props":{"href":"https://stackoverflow.com/questions/35110146/can-anyone-explain-docker-sock","rel":["nofollow"]},"children":[{"type":"text","value":"this SO post"}]},{"type":"text","value":" titled \"Can anyone explain docker.sock?\""}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We change the docker host that our local docker CLI is talking to by setting this environment variable, and one nice way to set this environment variables uses an SSH connection:"}]},{"type":"element","tag":"pre","props":{"code":"DOCKER_HOST=ssh://root@$DOCKER_IP\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"DOCKER_HOST=ssh://root@$DOCKER_IP\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See this article for a more in-depth discussion: "},{"type":"element","tag":"a","props":{"href":"https://www.digitalocean.com/community/tutorials/how-to-use-a-remote-docker-server-to-speed-up-your-workflow","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.digitalocean.com/community/tutorials/how-to-use-a-remote-docker-server-to-speed-up-your-workflow"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can try this out locally. Run a container locally, check it with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker ps"}]},{"type":"text","value":", then export the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DOCKER_HOST"}]},{"type":"text","value":" environment variable with the following command:"}]},{"type":"element","tag":"pre","props":{"code":"export DOCKER_HOST=ssh://root@123.45.678.91\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export DOCKER_HOST=ssh://root@123.45.678.91\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Replacing "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"123.45.678.91"}]},{"type":"text","value":" with your Droplet IP. Run "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker ps"}]},{"type":"text","value":" again and you should see nothing (or any other containers that you started on your Droplet). Finally, run:"}]},{"type":"element","tag":"pre","props":{"code":"unset DOCKER_HOST\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"unset DOCKER_HOST\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Running "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker ps"}]},{"type":"text","value":" again you should see the containers on your machine. We will be using this idea in the next step when we look at the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker stack deploy"}]},{"type":"text","value":" command."}]},{"type":"element","tag":"h2","props":{"id":"docker-stack-deploy"},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker stack deploy"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now that we have done our one-time-setup steps, let's look at the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"deploy"}]},{"type":"text","value":" stage of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".gitlab-ci.yml"}]},{"type":"text","value":", the GitLab CI job that will get our containers running on our Droplet. First, let's break down the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"deploy-digital-ocean"}]},{"type":"text","value":" command:"}]},{"type":"element","tag":"pre","props":{"code":"deploy-digital-ocean:\n  stage: deploy\n  image: docker:19.03.1\n  services:\n    - docker:19.03.5-dind\n  variables:\n    DOCKER_HOST: 'ssh://root@$DROPLET_IP'\n  before_script:\n    - apk update && apk add openssh-client bash\n    - mkdir -p ~/.ssh\n    - echo \"$SSH_PRIVATE_KEY\" > ~/.ssh/id_rsa\n    - chmod 600 ~/.ssh/id_rsa\n    - eval \"$(ssh-agent -s)\"\n    - ssh-add ~/.ssh/id_rsa\n    - ssh-keyscan -H $DROPLET_IP >> ~/.ssh/known_hosts\n    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY\n  script:\n    - docker stack deploy -c stack.yml my-stack --with-registry-auth\n","language":"yml","meta":"","className":"language-yml shiki shiki-themes github-light github-dark monokai","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"deploy-digital-ocean"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  stage"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"deploy\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  image"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"docker:19.03.1\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  services"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"docker:19.03.5-dind\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  variables"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"    DOCKER_HOST"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'ssh://root@$DROPLET_IP'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  before_script"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"apk update && apk add openssh-client bash\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"mkdir -p ~/.ssh\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"echo \"$SSH_PRIVATE_KEY\" > ~/.ssh/id_rsa\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"chmod 600 ~/.ssh/id_rsa\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"eval \"$(ssh-agent -s)\"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"ssh-add ~/.ssh/id_rsa\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"ssh-keyscan -H $DROPLET_IP >> ~/.ssh/known_hosts\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":16},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":17},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  script"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":18},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"docker stack deploy -c stack.yml my-stack --with-registry-auth\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This job uses the same "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"image"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"services"}]},{"type":"text","value":" that our "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"build"}]},{"type":"text","value":" stage jobs used. Notice that we set "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DOCKER_HOST"}]},{"type":"text","value":" to "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"\"ssh://root@$DROPLET_IP\""}]},{"type":"text","value":", this means that any docker CLI commands in this job will be communicating with the docker daemon on our Droplet. The "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"before_script"}]},{"type":"text","value":" has a lot going on, but all we are doing is preparing to use the SSH private key that we previously added to our GitLab project's CI/CD environment variables. The base image for this job, "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker:19.03.1"}]},{"type":"text","value":" is based on Alpine Linus. This version of Linux is super light weight and doesn't come with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"openssh-client"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"bash"}]},{"type":"text","value":", so our first step is to install these with the Alpine package manager, "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"apk"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"apk update && apk add openssh-client bash\n","language":"sh","meta":"","className":"language-sh shiki shiki-themes github-light github-dark monokai","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E"},"children":[{"type":"text","value":"apk"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":" update"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" && "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E"},"children":[{"type":"text","value":"apk"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":" add"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":" openssh-client"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":" bash\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Next, we add the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"SSH_PRIVATE_KEY"}]},{"type":"text","value":" environment variable into the body of the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"id_rsa"}]},{"type":"text","value":" private key file, change the permission of this file and then add the key to our SSH agent. Here's an excerpt from "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"man ssh-agent"}]},{"type":"text","value":" that provides a little bit more context into why we need to run "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"eval \"$(ssh-agent -s)\""}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ssh-add ~/.ssh/id_rsa"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"DESCRIPTION\n     ssh-agent is a program to hold private keys used for public key authentication (RSA, DSA, ECDSA, Ed25519)ssh-agent is usually started in the beginning of an X-session or a login session, and all other windows or programs are started as clients to the ssh-agent program.  Through use of environment variables the agent can be located and automatically used for authentication when logging in to other machines using ssh(1).\n\n     The agent initially does not have any private keys.  Keys are added using ssh(1) (see AddKeysToAgent in ssh_config(5) for details) or ssh-add(1).  Multiple identities may be stored in ssh-agent concurrently and ssh(1) will automatically use them if present.  ssh-add(1) is also used to remove keys from ssh-agent and to query the keys that are held in one.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"DESCRIPTION\n     ssh-agent is a program to hold private keys used for public key authentication (RSA, DSA, ECDSA, Ed25519)ssh-agent is usually started in the beginning of an X-session or a login session, and all other windows or programs are started as clients to the ssh-agent program.  Through use of environment variables the agent can be located and automatically used for authentication when logging in to other machines using ssh(1).\n\n     The agent initially does not have any private keys.  Keys are added using ssh(1) (see AddKeysToAgent in ssh_config(5) for details) or ssh-add(1).  Multiple identities may be stored in ssh-agent concurrently and ssh(1) will automatically use them if present.  ssh-add(1) is also used to remove keys from ssh-agent and to query the keys that are held in one.\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Next, "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ssh-keyscan -H $DROPLET_IP >> ~/.ssh/known_hosts"}]},{"type":"text","value":" tells our SSH agent about our Droplet so that it doesn't prompt us with a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Do you want to add this server to known hosts? (yes/no)"}]},{"type":"text","value":", or whatever the equivalent of that is for the docker CLI when it attempts to connect to a remote docker daemon over SSH."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, we login to our our GitLab private registry using the same command from before when we built and pushed images to our private registry on gitlab.com:"}]},{"type":"element","tag":"pre","props":{"code":"docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This essentially gives our DigitalOcean Droplet access to the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nginx"}]},{"type":"text","value":" images in our private GitLab CI image registry, even tho we are running this command in a contain, in a container that is probably running in Kubernetes on GCP. Next, we are actually going to use these images."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The last command in the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"deploy-digital-ocean"}]},{"type":"text","value":" job is:"}]},{"type":"element","tag":"pre","props":{"code":"docker stack deploy -c stack.yml my-stack --with-registry-auth\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"docker stack deploy -c stack.yml my-stack --with-registry-auth\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Check out this link from the docker docs on docker stacks "},{"type":"element","tag":"a","props":{"href":"https://docs.docker.com/engine/swarm/stack-deploy/","rel":["nofollow"]},"children":[{"type":"text","value":"https://docs.docker.com/engine/swarm/stack-deploy/"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"--with-registry-auth"}]},{"type":"text","value":" is important, our command will complete if this is not included, but our application won't start."}]},{"type":"element","tag":"h2","props":{"id":"stackyml"},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"stack.yml"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now we are ready to tackle the last big file in our repo: "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"stack.yml"}]},{"type":"text","value":". This is a the docker-compose file that we use to deploy our project. The only reason we needed to run "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker login"}]},{"type":"text","value":" above is because "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"stack.yml"}]},{"type":"text","value":" references the two images we built and pushed to our GitLab private repo. There's a lot going on in this file, let's start with the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":" service:"}]},{"type":"element","tag":"h3","props":{"id":"backend"},"children":[{"type":"text","value":"backend"}]},{"type":"element","tag":"pre","props":{"code":"version: '3.4'\nservices:\n  backend:\n  image: ${CI_REGISTRY_IMAGE}/backend:${CI_COMMIT_SHORT_SHA}\n  networks:\n    - main\n  environment:\n    - POSTGRES_PASSWORD\n    - SECRET_KEY\n    - DEBUG\n  volumes:\n    - backendassets:/code/assets\n  depends_on:\n    - postgres\n    - redis\n    - web\n","language":"yml","meta":"","className":"language-yml shiki shiki-themes github-light github-dark monokai","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"version"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'3.4'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"services"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  backend"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  image"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"${CI_REGISTRY_IMAGE}/backend:${CI_COMMIT_SHORT_SHA}\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  networks"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"main\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  environment"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"POSTGRES_PASSWORD\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"SECRET_KEY\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"DEBUG\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  volumes"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"backendassets:/code/assets\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  depends_on"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"postgres\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"redis\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":16},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"web\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"image"}]},{"type":"text","value":" is essentially what we defined in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".gitlab-ci.yml"}]},{"type":"text","value":", but the syntax is slightly different:"}]},{"type":"element","tag":"pre","props":{"code":"${CI_REGISTRY_IMAGE}/backend:${CI_COMMIT_SHORT_SHA}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"${CI_REGISTRY_IMAGE}/backend:${CI_COMMIT_SHORT_SHA}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We pass environment variables that we defined in GitLab CI via the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"environment"}]},{"type":"text","value":" key."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The volume "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backendassets"}]},{"type":"text","value":" is used for storing static assets (CSS, JS, etc.) as well as media assets (images, videos, any other file type). We mount this directory at "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/code/assets"}]},{"type":"text","value":" and then define our "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"STATIC_ROOT"}]},{"type":"text","value":" in Django's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"settings.py"}]},{"type":"text","value":" to be:"}]},{"type":"element","tag":"pre","props":{"code":"os.path.join(BASE_DIR, \"assets\", \"static\")\n","language":"py","meta":"","className":"language-py shiki shiki-themes github-light github-dark monokai","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"os.path.join("}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF"},"children":[{"type":"text","value":"BASE_DIR"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"\"assets\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"\"static\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":")\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Later, when we run "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"collectstatic"}]},{"type":"text","value":", files are copied to this location in our container, and since this is the location of the volume, the files are actually copied to the volume and will be persisted if we destroy the backend container and restart it. When the container restarts, the volume is mounted again and the static files will still be available to our application."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"network"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"depends_on"}]},{"type":"text","value":" related to to the other services that this application will communicate with. "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"main"}]},{"type":"text","value":" is a network defined in the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"networks"}]},{"type":"text","value":" part of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"stack.yml"}]},{"type":"text","value":", notice that we reference the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"traefik-public"}]},{"type":"text","value":" network here that we created earlier, as well."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Depends on helps with service startup order, but it is a better practice to use "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"./wait-for-it.sh"}]},{"type":"text","value":". However, I have never had any issues related to startup order. I'll try adding this later to make things more robust."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"postgres"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"redis"}]},{"type":"text","value":" will start before "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":". Our Django application will communicate to these services by their hostnames: "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"postgres"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"redis"}]},{"type":"text","value":". The fact that "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"postgres"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"redis"}]},{"type":"text","value":" are all on the same network ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"main"}]},{"type":"text","value":") means that they can resolve each other by these names. For example, the connection string to redis will look like: "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"redis://redis:6379"}]},{"type":"text","value":". Let's look at the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DATABASES"}]},{"type":"text","value":" configuration in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"settings.py"}]},{"type":"text","value":" to see how we connect to Postgres:"}]},{"type":"element","tag":"pre","props":{"code":"DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql_psycopg2\",\n        \"NAME\": os.environ.get(\"POSTGRES_NAME\", \"postgres\"),\n        \"USER\": os.environ.get(\"POSTGRES_USERNAME\", \"postgres\"),\n        \"PASSWORD\": os.environ.get(\"POSTGRES_PASSWORD\", \"postgres\"),\n        \"HOST\": os.environ.get(\"POSTGRES_SERVICE_HOST\", \"postgres\"),\n        \"PORT\": os.environ.get(\"POSTGRES_SERVICE_PORT\", 5432),\n    }\n}\n","language":"py","meta":"","className":"language-py shiki shiki-themes github-light github-dark monokai","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF"},"children":[{"type":"text","value":"DATABASES"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672"},"children":[{"type":"text","value":" ="}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" {\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"    \"default\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": {\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"        \"ENGINE\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"\"django.db.backends.postgresql_psycopg2\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":",\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"        \"NAME\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": os.environ.get("}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"\"POSTGRES_NAME\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"\"postgres\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"),\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"        \"USER\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": os.environ.get("}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"\"POSTGRES_USERNAME\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"\"postgres\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"),\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"        \"PASSWORD\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": os.environ.get("}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"\"POSTGRES_PASSWORD\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"\"postgres\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"),\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"        \"HOST\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": os.environ.get("}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"\"POSTGRES_SERVICE_HOST\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"\"postgres\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"),\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"        \"PORT\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": os.environ.get("}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"\"POSTGRES_SERVICE_PORT\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF"},"children":[{"type":"text","value":"5432"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"),\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    }\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"}\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I have defined the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"HOST"}]},{"type":"text","value":" to be based on the environment variable "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"POSTGRES_HOST"}]},{"type":"text","value":", but I have not defined this environment variable, so why didn't I just say "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"\"HOST\": \"postgres\""}]},{"type":"text","value":"? I could have, but if I want to change the database in the future, the only change will be adding an environment variable; I won't have to worry about hardcoded values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I'm choosing to run Postgres in a container and not use a managed database (which DigitalOcean does offer) in order to save on costs and also to get more practice managing my own database. I use RDS with AWS and it handles a lot of things that I don't have to worry about, such as backups, and it allows me to quickly restore from a snapshot. I'm interested in learning more about how I can do these tasks with a database that I run myself."}]},{"type":"element","tag":"h3","props":{"id":"nginx"},"children":[{"type":"text","value":"NGINX"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The next service we should go over is "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"web"}]},{"type":"text","value":", the service that runs the NGINX container that we pushed to our private GitLab image registry. This service has a couple of functions that I'll walk through:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reverse proxy"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Serve static files for Django"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Serve a frontend Javascript application"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here's the definition of this service in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"stack.yml"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"code":"services:\n  web:\n    image: ${CI_REGISTRY_IMAGE}/nginx:${CI_COMMIT_SHORT_SHA}\n    networks:\n      - traefik-public\n      - main\n    volumes:\n      - backendassets:/usr/src/app/assets\n    deploy:\n      labels:\n        - 'traefik.enable=true'\n        - 'traefik.http.routers.nginx-web.rule=Host(`mysite.com`)'\n        - 'traefik.http.routers.nginx-web.entrypoints=websecure'\n        - 'traefik.http.routers.nginx-web.tls.certresolver=letsencryptresolver'\n        - 'traefik.http.services.nginx-web.loadbalancer.server.port=80'\n","language":"yml","meta":"","className":"language-yml shiki shiki-themes github-light github-dark monokai","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"services"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  web"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"    image"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"${CI_REGISTRY_IMAGE}/nginx:${CI_COMMIT_SHORT_SHA}\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"    networks"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"traefik-public\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"main\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"    volumes"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"backendassets:/usr/src/app/assets\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"    deploy"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"      labels"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"        - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'traefik.enable=true'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"        - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'traefik.http.routers.nginx-web.rule=Host(`mysite.com`)'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"        - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'traefik.http.routers.nginx-web.entrypoints=websecure'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"        - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'traefik.http.routers.nginx-web.tls.certresolver=letsencryptresolver'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"        - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'traefik.http.services.nginx-web.loadbalancer.server.port=80'\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For now, ignore the contents under the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"deploy"}]},{"type":"text","value":" key; we will cover this next when we go over the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"traefik"}]},{"type":"text","value":" service."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"NGINX acts as a reverse proxy when it sends request starting with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/api"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/admin"}]},{"type":"text","value":" to the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":" container. Two blocks in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"prod.conf"}]},{"type":"text","value":" enable this behavior:"}]},{"type":"element","tag":"pre","props":{"code":"  upstream backend {\n    server backend:8000;\n  }\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  upstream backend {\n    server backend:8000;\n  }\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This hostname "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":" is defined as "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend:8000"}]},{"type":"text","value":". "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend:8000"}]},{"type":"text","value":" can be resolved by the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"web"}]},{"type":"text","value":" service because it is on the same "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"main"}]},{"type":"text","value":" network that "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":" is on. If either of the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"web"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":" wasn't on the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"main"}]},{"type":"text","value":" network, NGINX would not be able to make sense of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backend:8000"}]},{"type":"text","value":"."}]},{"type":"element","tag":"pre","props":{"code":"    # backend urls\n    location ~ ^/(admin|api) {\n      proxy_redirect off;\n      proxy_pass http://backend;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header Host $http_host;\n    }\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    # backend urls\n    location ~ ^/(admin|api) {\n      proxy_redirect off;\n      proxy_pass http://backend;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header Host $http_host;\n    }\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This block does that actual request forwarding. "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"http://backend"}]},{"type":"text","value":" references the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"upstream backend {}"}]},{"type":"text","value":" block defined above."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The volume "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backendassets"}]},{"type":"text","value":" is referenced here and mounts to "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/usr/src/app/assets"}]},{"type":"text","value":". This path is then referenced in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"prod.conf"}]},{"type":"text","value":", the NGINX configuration file that is used in our custom NGINX-based image:"}]},{"type":"element","tag":"pre","props":{"code":"    # static files\n    location /static {\n      autoindex on;\n      alias /usr/src/app/assets/static;\n    }\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    # static files\n    location /static {\n      autoindex on;\n      alias /usr/src/app/assets/static;\n    }\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this block of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"prod.conf"}]},{"type":"text","value":", we tell NGINX to serve files from "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/usr/src/app/assets/static"}]},{"type":"text","value":" for requests that start with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/static"}]},{"type":"text","value":". A request made to "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"https://mysite.com/static/base.css"}]},{"type":"text","value":" would return a file located at "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/usr/src/app/assets/static"}]},{"type":"text","value":" if that file existed. Remember, when we run the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"collecstatic"}]},{"type":"text","value":" management command in our Django container, it will collect our static files to "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backendassets"}]},{"type":"text","value":". Since "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"backendassets"}]},{"type":"text","value":" is mounted to the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"web"}]},{"type":"text","value":" service at "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/usr/src/app/assets"}]},{"type":"text","value":", NGINX will have access to these files by way of the volume mount and they will persist across restarts of the web service and its NGINX container."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, NGINX can serve a Javascript SPA or similar if we choose to use one in our project. To understand how this is done, we need to understand multistage Dockerfiles. Here's the Dockerfile used for the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nginx"}]},{"type":"text","value":" container:"}]},{"type":"element","tag":"pre","props":{"code":"# # build stage\n# FROM node:10-alpine as build-stage\n# WORKDIR /app/\n# COPY frontend/package.json /app/\n# RUN npm cache verify\n# RUN npm install\n# COPY frontend /app/\n# RUN npm run build\n\n# production stage\n# FROM nginx:1.19.1-alpine as production-stage\nFROM nginx:1.19.1-alpine\nCOPY nginx/prod/prod.conf /etc/nginx/nginx.conf\nCOPY nginx/prod/index.html /dist/\n# COPY --from=build-stage /app/dist /dist/\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n","language":"Dockerfile","meta":"","className":"language-Dockerfile shiki shiki-themes github-light github-dark monokai","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# # build stage\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# FROM node:10-alpine as build-stage\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# WORKDIR /app/\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# COPY frontend/package.json /app/\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# RUN npm cache verify\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# RUN npm install\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# COPY frontend /app/\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# RUN npm run build\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# production stage\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# FROM nginx:1.19.1-alpine as production-stage\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"FROM nginx:1.19.1-alpine\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"COPY nginx/prod/prod.conf /etc/nginx/nginx.conf\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"COPY nginx/prod/index.html /dist/\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# COPY --from=build-stage /app/dist /dist/\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":16},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"EXPOSE 80\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":17},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"CMD [\"nginx\", \"-g\", \"daemon off;\"]\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Currently I don't have a SPA setup, but this is how we could setup one using Vue.js. The important part is this line:"}]},{"type":"element","tag":"pre","props":{"code":"COPY --from=build-stage /app/dist /dist/\n","language":"Dockerfile","meta":"","className":"language-Dockerfile shiki shiki-themes github-light github-dark monokai","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"COPY --from=build-stage /app/dist /dist/\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This would copy the build files for our Javascript application into the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/dist/"}]},{"type":"text","value":" folder of our NGINX container. Another few declarations and blocks in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"prod.conf"}]},{"type":"text","value":" allow all other requests to be served by the contents of this folder:"}]},{"type":"element","tag":"pre","props":{"code":"    root /dist/;\n    index index.html;\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    root /dist/;\n    index index.html;\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This sets the root and the index document for our NGINX webserver."}]},{"type":"element","tag":"pre","props":{"code":"    # frontend\n    location / {\n      try_files $uri $uri/ @rewrites;\n    }\n\n    location @rewrites {\n      rewrite ^(.+)$ /index.html last;\n    }\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    # frontend\n    location / {\n      try_files $uri $uri/ @rewrites;\n    }\n\n    location @rewrites {\n      rewrite ^(.+)$ /index.html last;\n    }\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"These two blocks route all other requests to the frontend Javascript app's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"index.html"}]},{"type":"text","value":" file location in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/dist/"}]},{"type":"text","value":" (any request that doesn't start with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/static"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/api"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/admin"}]},{"type":"text","value":"). We may wish to change this behavior if you want Django to serve most of your requests and possibly serve a single page application on another path."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Lastly, the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"web"}]},{"type":"text","value":" service's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"deployment"}]},{"type":"text","value":" key has some "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"labels"}]},{"type":"text","value":" defined for Traefik. Let's come back to these after having a look at the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"traefik"}]},{"type":"text","value":" service."}]},{"type":"element","tag":"h3","props":{"id":"traefik"},"children":[{"type":"text","value":"Traefik"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"png","src":"https://docs.traefik.io/assets/img/traefik-architecture.png"},"children":[]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Traefik is an open-source Edge Router that makes publishing your services a fun and easy experience. It receives requests on behalf of your system and finds out which components are responsible for handling them. -- "},{"type":"element","tag":"a","props":{"href":"https://docs.traefik.io/","rel":["nofollow"]},"children":[{"type":"text","value":"https://docs.traefik.io/"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Traefik has three main functions in my application:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Request TLS certificates from Let's Encrypt that allow us to encrypt our web traffic with HTTPS"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Do TLS termination"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Route all requests to NGINX"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The one thing that Traefik cannot do is serve static files; it is not a webserver, unlike NGINX which is a webserver. NGINX is also capable of requesting TLS certs from Let's Encrypt, so we don't technically need Traefik, but it is indeed \"fun and easy\", especially when it comes to requesting certificates."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I have tried setting up Certbot with NGINX a long time ago but I never go it to work, and I didn't like the idea about how to run a chron job to refresh old certs."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are two main ways to set up Traefik:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"write a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"traefik.toml"}]},{"type":"text","value":" file and build this into your own custom image (similar to what we do with NGINX and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"prod.conf"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"use a base image and specify all configure options through command line arguments."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I started out with the first approach, and I did get it to work, but I have decided that the second way is better. It requires one less image to build in our deployment process and it is easy to parametrize the command line arguments in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"stack.yml"}]},{"type":"text","value":" (for now all the values I'm using in the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"traefik"}]},{"type":"text","value":" service are hard-coded, this is one more item for my ToDo list on this project)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I had a hard time finding good examples of how to use Traefik version 2 with Docker Swarm in the Traefik docs. Their official example for using docker uses "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker-compose up"}]},{"type":"text","value":". There is a Swarm example, but it is for an older version of Traefik (1.7). This article titled "},{"type":"element","tag":"a","props":{"href":"https://blog.creekorful.com/2019/10/how-to-install-traefik-2-docker-swarm/","rel":["nofollow"]},"children":[{"type":"text","value":"How to install Traefik 2.x on a Docker Swarm"}]},{"type":"text","value":" helped me a lot in figuring out how to get everything working. Thank you for the great article, "},{"type":"element","tag":"a","props":{"href":"https://github.com/creekorful","rel":["nofollow"]},"children":[{"type":"text","value":"Aloïs"}]},{"type":"text","value":"!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here's the code that sets up the traefik service:"}]},{"type":"element","tag":"pre","props":{"code":"services:\n  traefik:\n    image: traefik:v2.0.2\n    ports:\n      - '80:80'\n      - '443:443'\n    command:\n      - '--providers.docker.endpoint=unix:///var/run/docker.sock'\n      - '--providers.docker.swarmMode=true'\n      - '--providers.docker.exposedbydefault=false'\n      - '--providers.docker.network=traefik-public'\n      - '--entrypoints.web.address=:80'\n      - '--entrypoints.websecure.address=:443'\n      - '--certificatesresolvers.letsencryptresolver.acme.httpchallenge=true'\n      - '--certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web'\n      - '--certificatesresolvers.letsencryptresolver.acme.email=brian@email.com'\n      - '--certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/acme.json'\n    volumes:\n      - letsencrypt:/letsencrypt\n      - /var/run/docker.sock:/var/run/docker.sock\n    networks:\n      - traefik-public\n    deploy:\n      placement:\n        constraints:\n          - node.role == manager\n","language":"yml","meta":"","className":"language-yml shiki shiki-themes github-light github-dark monokai","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"services"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  traefik"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"    image"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"traefik:v2.0.2\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"    ports"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'80:80'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'443:443'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"    command"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'--providers.docker.endpoint=unix:///var/run/docker.sock'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'--providers.docker.swarmMode=true'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'--providers.docker.exposedbydefault=false'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'--providers.docker.network=traefik-public'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'--entrypoints.web.address=:80'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'--entrypoints.websecure.address=:443'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'--certificatesresolvers.letsencryptresolver.acme.httpchallenge=true'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'--certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":16},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'--certificatesresolvers.letsencryptresolver.acme.email=brian@email.com'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":17},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'--certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/acme.json'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":18},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"    volumes"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":19},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"letsencrypt:/letsencrypt\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":20},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"/var/run/docker.sock:/var/run/docker.sock\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":21},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"    networks"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":22},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"      - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"traefik-public\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":23},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"    deploy"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":24},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"      placement"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":25},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"        constraints"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":26},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"          - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"node.role == manager\n"}]}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The one thing I don't like about this setup is that it uses a 1GB volume to store one small JSON file. I think that 1GB is the smallest block storage volume I can request using REX-Ray. This only adds $0.10/month to our project costs which is not that bad."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"web"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"websecure"}]},{"type":"text","value":" refer to values declared on the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"web"}]},{"type":"text","value":" service. Let's take a look at those values:"}]},{"type":"element","tag":"pre","props":{"code":"deploy:\n  labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.nginx-web.rule=Host(`mysite.com`)'\n    - 'traefik.http.routers.nginx-web.entrypoints=websecure'\n    - 'traefik.http.routers.nginx-web.tls.certresolver=letsencryptresolver'\n    - 'traefik.http.services.nginx-web.loadbalancer.server.port=80'\n","language":"yaml","meta":"","className":"language-yaml shiki shiki-themes github-light github-dark monokai","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"deploy"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  labels"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'traefik.enable=true'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'traefik.http.routers.nginx-web.rule=Host(`mysite.com`)'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'traefik.http.routers.nginx-web.entrypoints=websecure'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'traefik.http.routers.nginx-web.tls.certresolver=letsencryptresolver'\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'traefik.http.services.nginx-web.loadbalancer.server.port=80'\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I still need to setup HTTP -> HTTPS redirecting, so for now only "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"websecure"}]},{"type":"text","value":" is defined, but Aloïs explains this clearly in his article."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For me this is the most complicated part of the setup. I'm still not familiar with exactly how Traefik and Let's Encrypt work. Hopefully I can run through this process a few more times with some variations to better understand the rough edges. Otherwise for this simple way to get TLS certificates. AWS makes this very easy with Amazon Certificate Manager (ACM) which makes the requesting of certificates very simple, especially within CDK."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"That wraps up our overview of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"stack.yml"}]},{"type":"text","value":", we left off with the following command:"}]},{"type":"element","tag":"pre","props":{"code":"docker stack deploy -c stack.yml my-stack --with-registry-auth\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"docker stack deploy -c stack.yml my-stack --with-registry-auth\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We can check out the status of our docker stack deployment by running a few different docker CLI commands. You can either SSH into your Droplet or configure the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DOCKER_HOST"}]},{"type":"text","value":" environment variable that I showed you earlier and run these commands from your local terminal:"}]},{"type":"element","tag":"pre","props":{"code":"docker stack ps my-stack --no-trunc\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"docker stack ps my-stack --no-trunc\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"--no-trunc"}]},{"type":"text","value":" is important because important error messages tend to be cut off. This option will show the full version of each column returned by "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker stack ps"}]},{"type":"text","value":"."}]},{"type":"element","tag":"pre","props":{"code":"docker service ls\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"docker service ls\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This command shows some the active services on our Droplet."}]},{"type":"element","tag":"pre","props":{"code":"docker ps\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"docker ps\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This command is useful for shelling into a container to run commands and poke around for debugging."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can get the Container ID of a running container and access it with the following command:"}]},{"type":"element","tag":"pre","props":{"code":"docker exec -it 0da8370ab283 bash\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"docker exec -it 0da8370ab283 bash\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This assumes that "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"bash"}]},{"type":"text","value":" is installed on the container with ID "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"0da8370ab283"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"management-commands"},"children":[{"type":"text","value":"Management commands"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once the site is deployed we stil need to run a few commands to set up our Djnago application:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"collectstatic"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"migrate"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"createsuperuser"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"One other ToDo is to figure out how to run these commands through manual GitLab CI jobs."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"That's most of what I wanted to cover on a first pass. This should be a good starting point for working with a Django application in Docker Swarm on DigitalOcean."}]},{"type":"element","tag":"h2","props":{"id":"next-steps"},"children":[{"type":"text","value":"Next steps"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here are some ideas about the next steps I could take on this project."}]},{"type":"element","tag":"h3","props":{"id":"local-environment"},"children":[{"type":"text","value":"Local environment"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I'll probably need to create another docker-compose file to bring up everything locally. It might be a good way to experiment with different Traefik settings."}]},{"type":"element","tag":"h3","props":{"id":"infrastructure-as-code-setup"},"children":[{"type":"text","value":"Infrastructure as Code setup"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There might be a good opportunity to learn more about Terreform or Ansible here. There are a number of manual, one time setup steps. Some of these can't be automated, but some of them would probably fit very neatly into one of these tools. Pulumi would also be a good option to explore as it is more analagous to CDK."}]},{"type":"element","tag":"h3","props":{"id":"scaling-out-docker-swarm-services-across-multiple-machines"},"children":[{"type":"text","value":"Scaling out docker swarm services across multiple machines"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I have only scratched the surface of what docker swarm can do. There are lots of other settings that would be helpful to setup for learning purposes, especially around resource limits for services. For simplicity I haven't touch on any of these options yet. I'm curious to know how many containers I can fit onto one small Droplet, and if resource limits could help with compute and memory-intensive workloads."}]},{"type":"element","tag":"h3","props":{"id":"kubernetes-on-digitalocean"},"children":[{"type":"text","value":"Kubernetes on DigitalOcean"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"DigitalOcean now offers simplified Kubernetes solutions. It would be interesting to try this out once I get better with docker swarm. I have used Kubernetes a with minikube and to a limited extent with GCP."}]},{"type":"element","tag":"h3","props":{"id":"deploying-locally-without-using-gitlab-ci"},"children":[{"type":"text","value":"Deploying locally, without using GitLab CI"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"CDK makes deploying locally very easy, especially with the Lambda project I put together. This project as it stands might be a little bit more difficult to deploy locally. It assumes that the images we want to deploy are private. It might be possible, but for now I am fine with deploying through GitLab CI since the pipeline only takes a few minutes to complete for the build and deploy stages."}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"overview","depth":2,"text":"Overview"},{"id":"digitalocean-setup","depth":2,"text":"DigitalOcean setup"},{"id":"prebuilt-docker-vm-image","depth":2,"text":"Prebuilt Docker VM image"},{"id":"gitlab-setup","depth":2,"text":"GitLab setup"},{"id":"a-record","depth":2,"text":"A Record"},{"id":"ssh-into-your-digitalocean-droplet","depth":2,"text":"SSH into your DigitalOcean Droplet"},{"id":"add-the-rex-ray-docker-plugin","depth":2,"text":"Add the REX-Ray docker plugin"},{"id":"gitlab-ciyml","depth":2,"text":".gitlab-ci.yml"},{"id":"setup-a-docker-swarm-cluster","depth":2,"text":"Setup a docker swarm cluster"},{"id":"defining-an-overlay-network","depth":2,"text":"Defining an overlay network"},{"id":"docker-stack-deploy","depth":2,"text":"docker stack deploy"},{"id":"stackyml","depth":2,"text":"stack.yml","children":[{"id":"backend","depth":3,"text":"backend"},{"id":"nginx","depth":3,"text":"NGINX"},{"id":"traefik","depth":3,"text":"Traefik"}]},{"id":"management-commands","depth":2,"text":"Management commands"},{"id":"next-steps","depth":2,"text":"Next steps","children":[{"id":"local-environment","depth":3,"text":"Local environment"},{"id":"infrastructure-as-code-setup","depth":3,"text":"Infrastructure as Code setup"},{"id":"scaling-out-docker-swarm-services-across-multiple-machines","depth":3,"text":"Scaling out docker swarm services across multiple machines"},{"id":"kubernetes-on-digitalocean","depth":3,"text":"Kubernetes on DigitalOcean"},{"id":"deploying-locally-without-using-gitlab-ci","depth":3,"text":"Deploying locally, without using GitLab CI"}]}]}},"_type":"markdown","_id":"content:2020:08:09:digital-ocean-docker-swarm-django-traefik-nginx.md","_source":"content","_file":"2020/08/09/digital-ocean-docker-swarm-django-traefik-nginx.md","_stem":"2020/08/09/digital-ocean-docker-swarm-django-traefik-nginx","_extension":"md"}