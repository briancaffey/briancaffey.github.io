[{"data":1,"prerenderedAt":4551},["ShallowReactive",2],{"on-demand-dedicated-serverless-valheim-server-with-cdk-discrod-interactions":3},{"id":4,"title":5,"body":6,"comments":4534,"date":4535,"description":4536,"draft":4534,"extension":4537,"external":4538,"image":4539,"meta":4540,"navigation":330,"path":4541,"seo":4542,"stem":4543,"tags":4544,"__hash__":4550},"blog/2021/03/18/on-demand-dedicated-serverless-valheim-server-with-cdk-discrod-interactions.md","On-demand, serverless Valheim server setup with AWS CDK, Discord Interactions and GitLab CI",{"type":7,"value":8,"toc":4512},"minimark",[9,22,25,28,31,40,53,61,67,80,84,99,117,155,158,165,168,172,179,198,208,211,225,231,236,247,252,259,268,274,288,292,298,789,795,801,804,810,813,819,829,832,838,853,857,868,1197,1207,1211,1218,1224,1231,1237,1241,1248,1317,1330,1758,1764,1770,1777,1783,1787,1794,1926,1940,1943,1949,1956,1998,2009,2013,2019,2220,2223,2229,2232,2235,2239,2260,2266,2272,2278,2297,2302,3325,3343,3347,3359,3880,3886,3889,3898,3902,3905,4021,4044,4047,4051,4054,4060,4072,4078,4087,4350,4353,4361,4370,4374,4377,4381,4475,4479,4482,4505,4508],[10,11,12],"blockquote",{},[13,14,15,16],"p",{},"Here's a link to the GitLab repo I'll be referencing in this article: ",[17,18,19],"a",{"href":19,"rel":20},"https://gitlab.com/briancaffey/valheim-cdk-discord-interactions",[21],"nofollow",[13,23,24],{},"This is an in-depth technical article about running an on-demand, dedicated server for Valheim using Amazon Web Services controlled with Discord Slash Commands, a new part their Interactions API that is currently in beta. Valheim is an open-world online multiplayer survival game loosely based on Norse mythology that has blown up recently.",[13,26,27],{},"My main goal with this project was to find an inexpensive way of running a server given how my friends and I play the game, which is typically a few times a week in the evenings. Some combination of 4 of us will start playing, and we drop in and out between walking dogs, cooking, etc. When playing, we all jump on a dedicated voice channel on our group's Discord.",[13,29,30],{},"Before setting up a dedicated server, our game's world state was stored on files that lived on one of our computers, and that computer needed to be running the game server in order for anyone to connect. Sending files around would be possible, but would quickly become tedious. There are lots of services that offer dedicated servers for Valheim, as well as many technical guides and channels on the official Valheim Discord server to support the use of dedicated servers. I wanted to see if I could set up a server myself on AWS using CDK, or Cloud Development Kit. CDK is an Infrastructure as Code (IaC) tool that allows you to define, deploy and update AWS infrastructure with popular programming languages such as Python, Typescript, Java, etc.",[32,33,35,39],"h2",{"id":34},"cdk-valheim-construct-on-github",[36,37,38],"code",{},"cdk-valheim"," construct on GitHub",[13,41,42,43,47,48,52],{},"The best part of CDK is that it enables the creation high-level, reusable constructs that can be published to software registries like npm and PyPI. Developers can import and use these constructs in their own CDK code. A quick google search for \"cdk valheim\" turned up a few results. ",[17,44,38],{"href":45,"rel":46},"https://github.com/gotodeploy/cdk-valheim",[21]," seems like the best option for what I was looking for. This project uses ECS, a container orchestration tool from AWS that I have experience using with web applications and EFS for persistent file storage. Although it is written in Typescript, I can still use the construct in my preferred programming language (Python) without any extra effort or configuration. This is thanks to the jsii. From ",[17,49,50],{"href":50,"rel":51},"https://github.com/aws/jsii",[21],":",[10,54,55],{},[13,56,57,60],{},[36,58,59],{},"jsii"," allows code in any language to naturally interact with JavaScript classes. It is the technology that enables the AWS Cloud Development Kit to deliver polyglot libraries from a single codebase!",[13,62,63,64,66],{},"Here's an overview of the ",[36,65,38],{}," construct:",[68,69,70,74,77],"ul",{},[71,72,73],"li",{},"Scheduled scaling of an ECS service using AWS Fargate (a serverless compute engine for containers)",[71,75,76],{},"Elastic File System (EFS) file system mounted into the Fargate Task container of our ECS service",[71,78,79],{},"Optional automated backups of the EFS file system using AWS Backup",[32,81,83],{"id":82},"discord-interactions-and-slash-commands","Discord Interactions and Slash Commands",[13,85,86,87,90,91,94,95,98],{},"Scheduled ECS scaling is nice, but we don't always know when we will be able to play together, so it is not the best way to minimize infrastructure costs. My plan was to set the ECS service to an initial task count of zero and then let any of us set the number of tasks to either zero or one through a Discord Slash Command. A Slash Command allows you to interact with a discord bot by typing ",[36,88,89],{},"/"," and then tabbing through to the option we want, such as ",[36,92,93],{},"/valheim server start"," or ",[36,96,97],{},"/valheim server status",".",[13,100,101,102,105,106,94,109,112,113,116],{},"Invoking a Slash Command from Discord sends a ",[36,103,104],{},"POST"," request from Discord to a webhook URL that we have to provide. To handle the webhook, one simple and inexpensive approach is to use API Gateway and a Lambda function that serves a Flask app. The Flask app can then use boto3 (which is included in the Lambda execution environment) to call ",[36,107,108],{},"update_service",[36,110,111],{},"describe_services"," to scaled the ECS task's ",[36,114,115],{},"desiredCount"," based on the slash command options and sub options.",[13,118,119,120,122,123,126,127,130,131,134,135,138,139,94,142,145,146,148,149,94,152,98],{},"The function that handles the webhook ",[36,121,104],{}," request when the sub-command is ",[36,124,125],{},"status"," queries AWS for the number of ECS tasks in our service that are ",[36,128,129],{},"desired",", ",[36,132,133],{},"running"," and ",[36,136,137],{},"pending"," and then sends back a message that will be displayed to the user who sent the command. When the sub-command is ",[36,140,141],{},"start",[36,143,144],{},"stop",", the ",[36,147,115],{}," is either set to ",[36,150,151],{},"1",[36,153,154],{},"0",[13,156,157],{},"Here's an overview of the server setup and how Discord Slash Commands can be used to control the server:",[13,159,160],{},[161,162],"img",{"alt":163,"src":164},"png","/static/valheim/diagram.png",[13,166,167],{},"I'll cover each of the steps labelled in this diagram at the end of the article. The rest of the article will provide detailed instructions for how to set everything up. I won't be going over AWS account setup or Discord server setup.",[32,169,171],{"id":170},"how-to-set-up-the-discord-developer-application-and-interaction","How to set up the Discord developer application and Interaction",[13,173,174,175,178],{},"First, you need to be the admin of a Discord server. Once you create the server, go to ",[36,176,177],{},"Server Settings > Widget"," and take note of the Server ID. This is also known as the Guild ID.",[13,180,181,182,186,187,190,191,194,195,52],{},"Then go to ",[17,183,184],{"href":184,"rel":185},"https://discord.com/developers/applications",[21]," and create an application. Under ",[36,188,189],{},"General Information",", make note of the public key (the application ID). Put these values in a file that will be ",[36,192,193],{},".gitignored"," called ",[36,196,197],{},".env",[199,200,205],"pre",{"className":201,"code":203,"language":204},[202],"language-text","export GUILD_ID=123456789\nexport APPLICATION_ID=abc123\n","text",[36,206,203],{"__ignoreMap":207},"",[13,209,210],{},"We will use this file later when registering the Interaction.",[13,212,213,214,217,218,134,221,224],{},"Next go to the ",[36,215,216],{},"OAuth2"," tab and select the ",[36,219,220],{},"bot",[36,222,223],{},"applications.commands"," permissions. This will generated an OAuth2 authorization link. Copy the link and open it in a browser. We will see an error:",[199,226,229],{"className":227,"code":228,"language":204},[202],"OAuth2 application does not have a bot\n",[36,230,228],{"__ignoreMap":207},[232,233,235],"h3",{"id":234},"configure-a-bot-for-our-discord-application","Configure a bot for our Discord application",[13,237,238,239,242,243,246],{},"Next, got to the ",[36,240,241],{},"Bot"," tab and click the ",[36,244,245],{},"Add Bot"," button.",[10,248,249],{},[13,250,251],{},"Adding a bot user gives your app visible life in Discord. However, this action is irrevocable! Choose wisely.",[13,253,254,255,258],{},"Turn off the ",[36,256,257],{},"Public Bot"," option and save changes.",[13,260,261,262,265,266,52],{},"Get the bot token by clicking on ",[36,263,264],{},"Click to Reveal Token",", and add this to ",[36,267,197],{},[199,269,272],{"className":270,"code":271,"language":204},[202],"export BOT_TOKEN=abc.xyz.123\n",[36,273,271],{"__ignoreMap":207},[13,275,276,277,217,279,134,281,283,284,287],{},"Now go back to the ",[36,278,216],{},[36,280,220],{},[36,282,223],{}," permissions again, copy the link and open it. Select the server that you want to add this application to. You should see a captcha, and then a message that says ",[36,285,286],{},"Authorized",". You should also see a message from your discord server that the bot has joined the server.",[232,289,291],{"id":290},"create-the-interaction","Create the Interaction",[13,293,294,295,297],{},"Now we will set up the Interaction. Currently the only way to set up the interaction is through an HTTP ",[36,296,104],{}," request. This Python script sets up our Interaction:",[199,299,303],{"className":300,"code":301,"language":302,"meta":207,"style":207},"language-py shiki shiki-themes github-light github-dark monokai","\"\"\"\nhttps://discord.com/developers/docs/interactions/slash-commands#registering-a-command\n\"\"\"\n\nimport os\n\nimport requests\n\nAPPLICATION_ID = os.environ.get(\"APPLICATION_ID\")\nGUILD_ID = os.environ.get(\"GUILD_ID\")\nBOT_TOKEN = os.environ.get(\"BOT_TOKEN\")\n\nurl = f\"https://discord.com/api/v8/applications/{APPLICATION_ID}/guilds/{GUILD_ID}/commands\"\n\njson = {\n    \"name\": \"vh\",\n    \"description\": \"Start, stop or get the status of the Valheim server\",\n    \"options\": [\n        {\n            \"name\": \"valheim_server_controls\",\n            \"description\": \"What do you want to do?\",\n            \"type\": 3,\n            \"required\": True,\n            \"choices\": [\n                {\n                    \"name\": \"status\",\n                    \"value\": \"status\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"value\": \"start\"\n                },\n                {\n                    \"name\": \"stop\",\n                    \"value\": \"stop\"\n                }\n            ]\n        },\n    ]\n}\n\nheaders = {\n    \"Authorization\": f\"Bot {BOT_TOKEN}\"\n}\n\nif __name__ == \"__main__\":\n    r = requests.post(url, headers=headers, json=json)\n    print(r.content)\n","py",[36,304,305,314,320,325,332,343,348,356,361,380,395,410,415,443,448,459,474,487,496,502,515,528,541,554,562,568,581,592,598,603,615,625,630,635,647,657,663,669,675,681,687,692,702,722,727,732,751,779],{"__ignoreMap":207},[306,307,310],"span",{"class":308,"line":309},"line",1,[306,311,313],{"class":312},"sstjo","\"\"\"\n",[306,315,317],{"class":308,"line":316},2,[306,318,319],{"class":312},"https://discord.com/developers/docs/interactions/slash-commands#registering-a-command\n",[306,321,323],{"class":308,"line":322},3,[306,324,313],{"class":312},[306,326,328],{"class":308,"line":327},4,[306,329,331],{"emptyLinePlaceholder":330},true,"\n",[306,333,335,339],{"class":308,"line":334},5,[306,336,338],{"class":337},"sC2Qs","import",[306,340,342],{"class":341},"sMOD_"," os\n",[306,344,346],{"class":308,"line":345},6,[306,347,331],{"emptyLinePlaceholder":330},[306,349,351,353],{"class":308,"line":350},7,[306,352,338],{"class":337},[306,354,355],{"class":341}," requests\n",[306,357,359],{"class":308,"line":358},8,[306,360,331],{"emptyLinePlaceholder":330},[306,362,364,368,371,374,377],{"class":308,"line":363},9,[306,365,367],{"class":366},"s7F3e","APPLICATION_ID",[306,369,370],{"class":337}," =",[306,372,373],{"class":341}," os.environ.get(",[306,375,376],{"class":312},"\"APPLICATION_ID\"",[306,378,379],{"class":341},")\n",[306,381,383,386,388,390,393],{"class":308,"line":382},10,[306,384,385],{"class":366},"GUILD_ID",[306,387,370],{"class":337},[306,389,373],{"class":341},[306,391,392],{"class":312},"\"GUILD_ID\"",[306,394,379],{"class":341},[306,396,398,401,403,405,408],{"class":308,"line":397},11,[306,399,400],{"class":366},"BOT_TOKEN",[306,402,370],{"class":337},[306,404,373],{"class":341},[306,406,407],{"class":312},"\"BOT_TOKEN\"",[306,409,379],{"class":341},[306,411,413],{"class":308,"line":412},12,[306,414,331],{"emptyLinePlaceholder":330},[306,416,418,421,424,428,431,434,437,440],{"class":308,"line":417},13,[306,419,420],{"class":341},"url ",[306,422,423],{"class":337},"=",[306,425,427],{"class":426},"sq6CD"," f",[306,429,430],{"class":312},"\"https://discord.com/api/v8/applications/",[306,432,433],{"class":366},"{APPLICATION_ID}",[306,435,436],{"class":312},"/guilds/",[306,438,439],{"class":366},"{GUILD_ID}",[306,441,442],{"class":312},"/commands\"\n",[306,444,446],{"class":308,"line":445},14,[306,447,331],{"emptyLinePlaceholder":330},[306,449,451,454,456],{"class":308,"line":450},15,[306,452,453],{"class":341},"json ",[306,455,423],{"class":337},[306,457,458],{"class":341}," {\n",[306,460,462,465,468,471],{"class":308,"line":461},16,[306,463,464],{"class":312},"    \"name\"",[306,466,467],{"class":341},": ",[306,469,470],{"class":312},"\"vh\"",[306,472,473],{"class":341},",\n",[306,475,477,480,482,485],{"class":308,"line":476},17,[306,478,479],{"class":312},"    \"description\"",[306,481,467],{"class":341},[306,483,484],{"class":312},"\"Start, stop or get the status of the Valheim server\"",[306,486,473],{"class":341},[306,488,490,493],{"class":308,"line":489},18,[306,491,492],{"class":312},"    \"options\"",[306,494,495],{"class":341},": [\n",[306,497,499],{"class":308,"line":498},19,[306,500,501],{"class":341},"        {\n",[306,503,505,508,510,513],{"class":308,"line":504},20,[306,506,507],{"class":312},"            \"name\"",[306,509,467],{"class":341},[306,511,512],{"class":312},"\"valheim_server_controls\"",[306,514,473],{"class":341},[306,516,518,521,523,526],{"class":308,"line":517},21,[306,519,520],{"class":312},"            \"description\"",[306,522,467],{"class":341},[306,524,525],{"class":312},"\"What do you want to do?\"",[306,527,473],{"class":341},[306,529,531,534,536,539],{"class":308,"line":530},22,[306,532,533],{"class":312},"            \"type\"",[306,535,467],{"class":341},[306,537,538],{"class":366},"3",[306,540,473],{"class":341},[306,542,544,547,549,552],{"class":308,"line":543},23,[306,545,546],{"class":312},"            \"required\"",[306,548,467],{"class":341},[306,550,551],{"class":366},"True",[306,553,473],{"class":341},[306,555,557,560],{"class":308,"line":556},24,[306,558,559],{"class":312},"            \"choices\"",[306,561,495],{"class":341},[306,563,565],{"class":308,"line":564},25,[306,566,567],{"class":341},"                {\n",[306,569,571,574,576,579],{"class":308,"line":570},26,[306,572,573],{"class":312},"                    \"name\"",[306,575,467],{"class":341},[306,577,578],{"class":312},"\"status\"",[306,580,473],{"class":341},[306,582,584,587,589],{"class":308,"line":583},27,[306,585,586],{"class":312},"                    \"value\"",[306,588,467],{"class":341},[306,590,591],{"class":312},"\"status\"\n",[306,593,595],{"class":308,"line":594},28,[306,596,597],{"class":341},"                },\n",[306,599,601],{"class":308,"line":600},29,[306,602,567],{"class":341},[306,604,606,608,610,613],{"class":308,"line":605},30,[306,607,573],{"class":312},[306,609,467],{"class":341},[306,611,612],{"class":312},"\"start\"",[306,614,473],{"class":341},[306,616,618,620,622],{"class":308,"line":617},31,[306,619,586],{"class":312},[306,621,467],{"class":341},[306,623,624],{"class":312},"\"start\"\n",[306,626,628],{"class":308,"line":627},32,[306,629,597],{"class":341},[306,631,633],{"class":308,"line":632},33,[306,634,567],{"class":341},[306,636,638,640,642,645],{"class":308,"line":637},34,[306,639,573],{"class":312},[306,641,467],{"class":341},[306,643,644],{"class":312},"\"stop\"",[306,646,473],{"class":341},[306,648,650,652,654],{"class":308,"line":649},35,[306,651,586],{"class":312},[306,653,467],{"class":341},[306,655,656],{"class":312},"\"stop\"\n",[306,658,660],{"class":308,"line":659},36,[306,661,662],{"class":341},"                }\n",[306,664,666],{"class":308,"line":665},37,[306,667,668],{"class":341},"            ]\n",[306,670,672],{"class":308,"line":671},38,[306,673,674],{"class":341},"        },\n",[306,676,678],{"class":308,"line":677},39,[306,679,680],{"class":341},"    ]\n",[306,682,684],{"class":308,"line":683},40,[306,685,686],{"class":341},"}\n",[306,688,690],{"class":308,"line":689},41,[306,691,331],{"emptyLinePlaceholder":330},[306,693,695,698,700],{"class":308,"line":694},42,[306,696,697],{"class":341},"headers ",[306,699,423],{"class":337},[306,701,458],{"class":341},[306,703,705,708,710,713,716,719],{"class":308,"line":704},43,[306,706,707],{"class":312},"    \"Authorization\"",[306,709,467],{"class":341},[306,711,712],{"class":426},"f",[306,714,715],{"class":312},"\"Bot ",[306,717,718],{"class":366},"{BOT_TOKEN}",[306,720,721],{"class":312},"\"\n",[306,723,725],{"class":308,"line":724},44,[306,726,686],{"class":341},[306,728,730],{"class":308,"line":729},45,[306,731,331],{"emptyLinePlaceholder":330},[306,733,735,738,742,745,748],{"class":308,"line":734},46,[306,736,737],{"class":337},"if",[306,739,741],{"class":740},"sXSQT"," __name__",[306,743,744],{"class":337}," ==",[306,746,747],{"class":312}," \"__main__\"",[306,749,750],{"class":341},":\n",[306,752,754,757,759,762,766,768,771,774,776],{"class":308,"line":753},47,[306,755,756],{"class":341},"    r ",[306,758,423],{"class":337},[306,760,761],{"class":341}," requests.post(url, ",[306,763,765],{"class":764},"sTHNf","headers",[306,767,423],{"class":337},[306,769,770],{"class":341},"headers, ",[306,772,773],{"class":764},"json",[306,775,423],{"class":337},[306,777,778],{"class":341},"json)\n",[306,780,782,786],{"class":308,"line":781},48,[306,783,785],{"class":784},"sTrkL","    print",[306,787,788],{"class":341},"(r.content)\n",[13,790,791,792,794],{},"Before running this command, source the ",[36,793,197],{}," file:",[199,796,799],{"className":797,"code":798,"language":204},[202],"source .env\n",[36,800,798],{"__ignoreMap":207},[13,802,803],{},"Then run the script:",[199,805,808],{"className":806,"code":807,"language":204},[202],"python3 register_bot.py\n",[36,809,807],{"__ignoreMap":207},[13,811,812],{},"You should see this response:",[199,814,817],{"className":815,"code":816,"language":204},[202],"b'{\"id\": \"XXXXXXXXXXXXXX\", \"application_id\": \"XXXXXXXXXXXXXX\", \"name\": \"vh\", \"description\": \"Start, stop or get the status of the Valheim server\", \"version\": \"XXXXXXXXXXXXXX\", \"default_permission\": true, \"guild_id\": \"XXXXXXXXXXXXXX\", \"options\": [{\"type\": 3, \"name\": \"valheim_server_controls\", \"description\": \"What do you want to do?\", \"required\": true, \"choices\": [{\"name\": \"status\", \"value\": \"status\"}, {\"name\": \"start\", \"value\": \"start\"}, {\"name\": \"stop\", \"value\": \"stop\"}]}]}'\n",[36,818,816],{"__ignoreMap":207},[13,820,821,822,824,825,828],{},"Now, when you type ",[36,823,89],{}," in any channel on the Discord server that you authenticated the bot, you should see the ",[36,826,827],{},"vh"," command at the top of the list of autocomplete options.",[13,830,831],{},"If we run any of these commands, we should see a response saying:",[199,833,836],{"className":834,"code":835,"language":204},[202],"This interaction failed\n",[36,837,835],{"__ignoreMap":207},[13,839,840,841,844,845,847,848,852],{},"This is because we have not configured an ",[36,842,843],{},"Interactions Endpoint URL"," under the ",[36,846,189],{}," section of our Discord Application's admin page (",[17,849,850],{"href":850,"rel":851},"https://discord.com/developers/applications/",[21],").",[32,854,856],{"id":855},"setting-up-the-interactions-endpoint-url-for-our-slash-command","Setting up the Interactions Endpoint URL for our Slash Command",[13,858,859,860,862,863,52],{},"In order for our Slash Command to do anything, we need to set up URL that Discord will ",[36,861,104],{}," the Interaction event data to, including information such as who sent the Interaction, what channel it was sent on, what options were used, etc. You can see an example of the event payload ",[17,864,867],{"href":865,"rel":866},"https://discord.com/developers/docs/interactions/slash-commands#receiving-an-interaction",[21],"here on the Discord developer documentation",[199,869,872],{"className":870,"code":871,"language":773,"meta":207,"style":207},"language-json shiki shiki-themes github-light github-dark monokai","{\n    \"type\": 2,\n    \"token\": \"A_UNIQUE_TOKEN\",\n    \"member\": {\n        \"user\": {\n            \"id\": 53908232506183680,\n            \"username\": \"Mason\",\n            \"avatar\": \"a_d5efa99b3eeaa7dd43acca82f5692432\",\n            \"discriminator\": \"1337\",\n            \"public_flags\": 131141\n        },\n        \"roles\": [\"539082325061836999\"],\n        \"premium_since\": null,\n        \"permissions\": \"2147483647\",\n        \"pending\": false,\n        \"nick\": null,\n        \"mute\": false,\n        \"joined_at\": \"2017-03-13T19:19:14.040000+00:00\",\n        \"is_pending\": false,\n        \"deaf\": false\n    },\n    \"id\": \"786008729715212338\",\n    \"guild_id\": \"290926798626357999\",\n    \"data\": {\n        \"options\": [{\n            \"name\": \"cardname\",\n            \"value\": \"The Gitrog Monster\"\n        }],\n        \"name\": \"cardsearch\",\n        \"id\": \"771825006014889984\"\n    },\n    \"channel_id\": \"645027906669510667\"\n}\n",[36,873,874,879,892,905,913,920,932,944,956,968,978,982,996,1008,1020,1032,1043,1054,1066,1077,1087,1092,1104,1116,1123,1131,1142,1152,1157,1169,1179,1183,1193],{"__ignoreMap":207},[306,875,876],{"class":308,"line":309},[306,877,878],{"class":341},"{\n",[306,880,881,885,887,890],{"class":308,"line":316},[306,882,884],{"class":883},"s-m8C","    \"type\"",[306,886,467],{"class":341},[306,888,889],{"class":366},"2",[306,891,473],{"class":341},[306,893,894,897,899,903],{"class":308,"line":322},[306,895,896],{"class":883},"    \"token\"",[306,898,467],{"class":341},[306,900,902],{"class":901},"sCZoN","\"A_UNIQUE_TOKEN\"",[306,904,473],{"class":341},[306,906,907,910],{"class":308,"line":327},[306,908,909],{"class":883},"    \"member\"",[306,911,912],{"class":341},": {\n",[306,914,915,918],{"class":308,"line":334},[306,916,917],{"class":883},"        \"user\"",[306,919,912],{"class":341},[306,921,922,925,927,930],{"class":308,"line":345},[306,923,924],{"class":883},"            \"id\"",[306,926,467],{"class":341},[306,928,929],{"class":366},"53908232506183680",[306,931,473],{"class":341},[306,933,934,937,939,942],{"class":308,"line":350},[306,935,936],{"class":883},"            \"username\"",[306,938,467],{"class":341},[306,940,941],{"class":901},"\"Mason\"",[306,943,473],{"class":341},[306,945,946,949,951,954],{"class":308,"line":358},[306,947,948],{"class":883},"            \"avatar\"",[306,950,467],{"class":341},[306,952,953],{"class":901},"\"a_d5efa99b3eeaa7dd43acca82f5692432\"",[306,955,473],{"class":341},[306,957,958,961,963,966],{"class":308,"line":363},[306,959,960],{"class":883},"            \"discriminator\"",[306,962,467],{"class":341},[306,964,965],{"class":901},"\"1337\"",[306,967,473],{"class":341},[306,969,970,973,975],{"class":308,"line":382},[306,971,972],{"class":883},"            \"public_flags\"",[306,974,467],{"class":341},[306,976,977],{"class":366},"131141\n",[306,979,980],{"class":308,"line":397},[306,981,674],{"class":341},[306,983,984,987,990,993],{"class":308,"line":412},[306,985,986],{"class":883},"        \"roles\"",[306,988,989],{"class":341},": [",[306,991,992],{"class":901},"\"539082325061836999\"",[306,994,995],{"class":341},"],\n",[306,997,998,1001,1003,1006],{"class":308,"line":417},[306,999,1000],{"class":883},"        \"premium_since\"",[306,1002,467],{"class":341},[306,1004,1005],{"class":366},"null",[306,1007,473],{"class":341},[306,1009,1010,1013,1015,1018],{"class":308,"line":445},[306,1011,1012],{"class":883},"        \"permissions\"",[306,1014,467],{"class":341},[306,1016,1017],{"class":901},"\"2147483647\"",[306,1019,473],{"class":341},[306,1021,1022,1025,1027,1030],{"class":308,"line":450},[306,1023,1024],{"class":883},"        \"pending\"",[306,1026,467],{"class":341},[306,1028,1029],{"class":366},"false",[306,1031,473],{"class":341},[306,1033,1034,1037,1039,1041],{"class":308,"line":461},[306,1035,1036],{"class":883},"        \"nick\"",[306,1038,467],{"class":341},[306,1040,1005],{"class":366},[306,1042,473],{"class":341},[306,1044,1045,1048,1050,1052],{"class":308,"line":476},[306,1046,1047],{"class":883},"        \"mute\"",[306,1049,467],{"class":341},[306,1051,1029],{"class":366},[306,1053,473],{"class":341},[306,1055,1056,1059,1061,1064],{"class":308,"line":489},[306,1057,1058],{"class":883},"        \"joined_at\"",[306,1060,467],{"class":341},[306,1062,1063],{"class":901},"\"2017-03-13T19:19:14.040000+00:00\"",[306,1065,473],{"class":341},[306,1067,1068,1071,1073,1075],{"class":308,"line":498},[306,1069,1070],{"class":883},"        \"is_pending\"",[306,1072,467],{"class":341},[306,1074,1029],{"class":366},[306,1076,473],{"class":341},[306,1078,1079,1082,1084],{"class":308,"line":504},[306,1080,1081],{"class":883},"        \"deaf\"",[306,1083,467],{"class":341},[306,1085,1086],{"class":366},"false\n",[306,1088,1089],{"class":308,"line":517},[306,1090,1091],{"class":341},"    },\n",[306,1093,1094,1097,1099,1102],{"class":308,"line":530},[306,1095,1096],{"class":883},"    \"id\"",[306,1098,467],{"class":341},[306,1100,1101],{"class":901},"\"786008729715212338\"",[306,1103,473],{"class":341},[306,1105,1106,1109,1111,1114],{"class":308,"line":543},[306,1107,1108],{"class":883},"    \"guild_id\"",[306,1110,467],{"class":341},[306,1112,1113],{"class":901},"\"290926798626357999\"",[306,1115,473],{"class":341},[306,1117,1118,1121],{"class":308,"line":556},[306,1119,1120],{"class":883},"    \"data\"",[306,1122,912],{"class":341},[306,1124,1125,1128],{"class":308,"line":564},[306,1126,1127],{"class":883},"        \"options\"",[306,1129,1130],{"class":341},": [{\n",[306,1132,1133,1135,1137,1140],{"class":308,"line":570},[306,1134,507],{"class":883},[306,1136,467],{"class":341},[306,1138,1139],{"class":901},"\"cardname\"",[306,1141,473],{"class":341},[306,1143,1144,1147,1149],{"class":308,"line":583},[306,1145,1146],{"class":883},"            \"value\"",[306,1148,467],{"class":341},[306,1150,1151],{"class":901},"\"The Gitrog Monster\"\n",[306,1153,1154],{"class":308,"line":594},[306,1155,1156],{"class":341},"        }],\n",[306,1158,1159,1162,1164,1167],{"class":308,"line":600},[306,1160,1161],{"class":883},"        \"name\"",[306,1163,467],{"class":341},[306,1165,1166],{"class":901},"\"cardsearch\"",[306,1168,473],{"class":341},[306,1170,1171,1174,1176],{"class":308,"line":605},[306,1172,1173],{"class":883},"        \"id\"",[306,1175,467],{"class":341},[306,1177,1178],{"class":901},"\"771825006014889984\"\n",[306,1180,1181],{"class":308,"line":617},[306,1182,1091],{"class":341},[306,1184,1185,1188,1190],{"class":308,"line":627},[306,1186,1187],{"class":883},"    \"channel_id\"",[306,1189,467],{"class":341},[306,1191,1192],{"class":901},"\"645027906669510667\"\n",[306,1194,1195],{"class":308,"line":632},[306,1196,686],{"class":341},[13,1198,1199,1200,1202,1203,1206],{},"This ",[36,1201,104],{}," request also includes some special headers used for security that we will need to do validation with our handling function. This part can be handled with a decorator provided by the ",[36,1204,1205],{},"discord-interactions"," package on PyPI, but we will need to add some additional configuration to our API Gateway endpoint since these headers will not be passed through the lambda by default.",[32,1208,1210],{"id":1209},"setting-up-aws-infrastructure-with-cdk","Setting up AWS infrastructure with CDK",[13,1212,1213,1214,1217],{},"Let's start a CDK project in a blank repository that will define our infrastructure, Lambda functions and CI/CD pipeline with GitLab CI. Make sure that you have the ",[36,1215,1216],{},"aws-cdk"," CLI installed globally:",[199,1219,1222],{"className":1220,"code":1221,"language":204},[202],"npm i -g aws-cdk\n",[36,1223,1221],{"__ignoreMap":207},[13,1225,1226,1227,1230],{},"Then start a CDK project in a subdirectory called ",[36,1228,1229],{},"cdk"," with:",[199,1232,1235],{"className":1233,"code":1234,"language":204},[202],"mkdir cdk && cd cdk && cdk init app --language=python\n",[36,1236,1234],{"__ignoreMap":207},[232,1238,1240],{"id":1239},"add-cdk-project-dependencies","Add CDK project dependencies",[13,1242,1243,1244,1247],{},"The next step is to add all of the dependencies to our CDK project that we will use in this project. In ",[36,1245,1246],{},"setup.py"," add the following:",[199,1249,1251],{"className":300,"code":1250,"language":302,"meta":207,"style":207},"    install_requires=[\n        \"aws-cdk.core==1.92.0\",\n        \"aws-cdk.aws_applicationautoscaling==1.92.0\",\n        \"aws-cdk.aws_datasync==1.92.0\",\n        \"aws-cdk.aws_lambda==1.92.0\",\n        \"aws-cdk.aws_s3==1.92.0\",\n        \"aws-cdk.aws_apigateway==1.92.0\",\n        \"cdk-valheim==0.0.16\",\n    ],\n",[36,1252,1253,1263,1270,1277,1284,1291,1298,1305,1312],{"__ignoreMap":207},[306,1254,1255,1258,1260],{"class":308,"line":309},[306,1256,1257],{"class":341},"    install_requires",[306,1259,423],{"class":337},[306,1261,1262],{"class":341},"[\n",[306,1264,1265,1268],{"class":308,"line":316},[306,1266,1267],{"class":312},"        \"aws-cdk.core==1.92.0\"",[306,1269,473],{"class":341},[306,1271,1272,1275],{"class":308,"line":322},[306,1273,1274],{"class":312},"        \"aws-cdk.aws_applicationautoscaling==1.92.0\"",[306,1276,473],{"class":341},[306,1278,1279,1282],{"class":308,"line":327},[306,1280,1281],{"class":312},"        \"aws-cdk.aws_datasync==1.92.0\"",[306,1283,473],{"class":341},[306,1285,1286,1289],{"class":308,"line":334},[306,1287,1288],{"class":312},"        \"aws-cdk.aws_lambda==1.92.0\"",[306,1290,473],{"class":341},[306,1292,1293,1296],{"class":308,"line":345},[306,1294,1295],{"class":312},"        \"aws-cdk.aws_s3==1.92.0\"",[306,1297,473],{"class":341},[306,1299,1300,1303],{"class":308,"line":350},[306,1301,1302],{"class":312},"        \"aws-cdk.aws_apigateway==1.92.0\"",[306,1304,473],{"class":341},[306,1306,1307,1310],{"class":308,"line":358},[306,1308,1309],{"class":312},"        \"cdk-valheim==0.0.16\"",[306,1311,473],{"class":341},[306,1313,1314],{"class":308,"line":363},[306,1315,1316],{"class":341},"    ],\n",[13,1318,1319,1320,1323,1324,1327,1328,52],{},"Next we can add the CDK construct for ",[36,1321,1322],{},"ValheimWorld"," in the ",[36,1325,1326],{},"cdk_stack.py"," file that was generated in our project as well as the imports for the packages we included in ",[36,1329,1246],{},[199,1331,1333],{"className":300,"code":1332,"language":302,"meta":207,"style":207},"from aws_cdk import core as cdk\n\nfrom aws_cdk import (\n    core,\n    aws_datasync as datasync,\n    aws_iam as iam,\n    aws_lambda as _lambda,\n    aws_apigateway as apigw,\n    aws_applicationautoscaling as appScaling,\n    aws_s3 as s3,\n)\nfrom cdk_valheim import ValheimWorld, ValheimWorldScalingSchedule\n\n\nclass CdkStack(cdk.Stack):\n\n    def __init__(self, scope: cdk.Construct, construct_id: str, **kwargs) -> None:\n        super().__init__(scope, construct_id, **kwargs)\n        # The code that defines your stack goes here\n        self.valheim_world = ValheimWorld(\n            self,\n            'ValheimWorld',\n            cpu=2048,\n            memory_limit_mib=4096,\n            schedules=[ValheimWorldScalingSchedule(\n                start=appScaling.CronOptions(hour='12', week_day='1-5'),\n                stop=appScaling.CronOptions(hour='1', week_day='1-5'),\n            )],\n            environment={\n                \"SERVER_NAME\": os.environ.get(\"SERVER_NAME\", \"CDK Valheim\"),\n                \"WORLD_NAME\": os.environ.get(\"WORLD_NAME\", \"Amazon\"),\n                \"SERVER_PASS\": os.environ.get(\"SERVER_PASS\", \"fargate\"),\n                \"BACKUPS\": 'false',\n            })\n",[36,1334,1335,1354,1358,1369,1374,1384,1394,1404,1414,1424,1434,1438,1450,1454,1458,1481,1485,1531,1550,1556,1570,1577,1584,1596,1608,1618,1649,1675,1680,1689,1707,1724,1741,1753],{"__ignoreMap":207},[306,1336,1337,1340,1343,1345,1348,1351],{"class":308,"line":309},[306,1338,1339],{"class":337},"from",[306,1341,1342],{"class":341}," aws_cdk ",[306,1344,338],{"class":337},[306,1346,1347],{"class":341}," core ",[306,1349,1350],{"class":337},"as",[306,1352,1353],{"class":341}," cdk\n",[306,1355,1356],{"class":308,"line":316},[306,1357,331],{"emptyLinePlaceholder":330},[306,1359,1360,1362,1364,1366],{"class":308,"line":322},[306,1361,1339],{"class":337},[306,1363,1342],{"class":341},[306,1365,338],{"class":337},[306,1367,1368],{"class":341}," (\n",[306,1370,1371],{"class":308,"line":327},[306,1372,1373],{"class":341},"    core,\n",[306,1375,1376,1379,1381],{"class":308,"line":334},[306,1377,1378],{"class":341},"    aws_datasync ",[306,1380,1350],{"class":337},[306,1382,1383],{"class":341}," datasync,\n",[306,1385,1386,1389,1391],{"class":308,"line":345},[306,1387,1388],{"class":341},"    aws_iam ",[306,1390,1350],{"class":337},[306,1392,1393],{"class":341}," iam,\n",[306,1395,1396,1399,1401],{"class":308,"line":350},[306,1397,1398],{"class":341},"    aws_lambda ",[306,1400,1350],{"class":337},[306,1402,1403],{"class":341}," _lambda,\n",[306,1405,1406,1409,1411],{"class":308,"line":358},[306,1407,1408],{"class":341},"    aws_apigateway ",[306,1410,1350],{"class":337},[306,1412,1413],{"class":341}," apigw,\n",[306,1415,1416,1419,1421],{"class":308,"line":363},[306,1417,1418],{"class":341},"    aws_applicationautoscaling ",[306,1420,1350],{"class":337},[306,1422,1423],{"class":341}," appScaling,\n",[306,1425,1426,1429,1431],{"class":308,"line":382},[306,1427,1428],{"class":341},"    aws_s3 ",[306,1430,1350],{"class":337},[306,1432,1433],{"class":341}," s3,\n",[306,1435,1436],{"class":308,"line":397},[306,1437,379],{"class":341},[306,1439,1440,1442,1445,1447],{"class":308,"line":412},[306,1441,1339],{"class":337},[306,1443,1444],{"class":341}," cdk_valheim ",[306,1446,338],{"class":337},[306,1448,1449],{"class":341}," ValheimWorld, ValheimWorldScalingSchedule\n",[306,1451,1452],{"class":308,"line":417},[306,1453,331],{"emptyLinePlaceholder":330},[306,1455,1456],{"class":308,"line":445},[306,1457,331],{"emptyLinePlaceholder":330},[306,1459,1460,1463,1467,1470,1473,1475,1478],{"class":308,"line":450},[306,1461,1462],{"class":426},"class",[306,1464,1466],{"class":1465},"sz2Vg"," CdkStack",[306,1468,1469],{"class":341},"(",[306,1471,1229],{"class":1472},"s30JN",[306,1474,98],{"class":341},[306,1476,1477],{"class":1472},"Stack",[306,1479,1480],{"class":341},"):\n",[306,1482,1483],{"class":308,"line":461},[306,1484,331],{"emptyLinePlaceholder":330},[306,1486,1487,1490,1493,1495,1499,1501,1504,1507,1510,1512,1515,1517,1520,1523,1526,1529],{"class":308,"line":476},[306,1488,1489],{"class":426},"    def",[306,1491,1492],{"class":784}," __init__",[306,1494,1469],{"class":341},[306,1496,1498],{"class":1497},"so59x","self",[306,1500,130],{"class":341},[306,1502,1503],{"class":1497},"scope",[306,1505,1506],{"class":341},": cdk.Construct, ",[306,1508,1509],{"class":1497},"construct_id",[306,1511,467],{"class":341},[306,1513,1514],{"class":883},"str",[306,1516,130],{"class":341},[306,1518,1519],{"class":337},"**",[306,1521,1522],{"class":1497},"kwargs",[306,1524,1525],{"class":341},") -> ",[306,1527,1528],{"class":366},"None",[306,1530,750],{"class":341},[306,1532,1533,1536,1539,1542,1545,1547],{"class":308,"line":489},[306,1534,1535],{"class":883},"        super",[306,1537,1538],{"class":341},"().",[306,1540,1541],{"class":784},"__init__",[306,1543,1544],{"class":341},"(scope, construct_id, ",[306,1546,1519],{"class":337},[306,1548,1549],{"class":341},"kwargs)\n",[306,1551,1552],{"class":308,"line":498},[306,1553,1555],{"class":1554},"s8-w5","        # The code that defines your stack goes here\n",[306,1557,1558,1562,1565,1567],{"class":308,"line":504},[306,1559,1561],{"class":1560},"sP7S_","        self",[306,1563,1564],{"class":341},".valheim_world ",[306,1566,423],{"class":337},[306,1568,1569],{"class":341}," ValheimWorld(\n",[306,1571,1572,1575],{"class":308,"line":517},[306,1573,1574],{"class":1560},"            self",[306,1576,473],{"class":341},[306,1578,1579,1582],{"class":308,"line":530},[306,1580,1581],{"class":312},"            'ValheimWorld'",[306,1583,473],{"class":341},[306,1585,1586,1589,1591,1594],{"class":308,"line":543},[306,1587,1588],{"class":764},"            cpu",[306,1590,423],{"class":337},[306,1592,1593],{"class":366},"2048",[306,1595,473],{"class":341},[306,1597,1598,1601,1603,1606],{"class":308,"line":556},[306,1599,1600],{"class":764},"            memory_limit_mib",[306,1602,423],{"class":337},[306,1604,1605],{"class":366},"4096",[306,1607,473],{"class":341},[306,1609,1610,1613,1615],{"class":308,"line":564},[306,1611,1612],{"class":764},"            schedules",[306,1614,423],{"class":337},[306,1616,1617],{"class":341},"[ValheimWorldScalingSchedule(\n",[306,1619,1620,1623,1625,1628,1631,1633,1636,1638,1641,1643,1646],{"class":308,"line":570},[306,1621,1622],{"class":764},"                start",[306,1624,423],{"class":337},[306,1626,1627],{"class":341},"appScaling.CronOptions(",[306,1629,1630],{"class":764},"hour",[306,1632,423],{"class":337},[306,1634,1635],{"class":312},"'12'",[306,1637,130],{"class":341},[306,1639,1640],{"class":764},"week_day",[306,1642,423],{"class":337},[306,1644,1645],{"class":312},"'1-5'",[306,1647,1648],{"class":341},"),\n",[306,1650,1651,1654,1656,1658,1660,1662,1665,1667,1669,1671,1673],{"class":308,"line":583},[306,1652,1653],{"class":764},"                stop",[306,1655,423],{"class":337},[306,1657,1627],{"class":341},[306,1659,1630],{"class":764},[306,1661,423],{"class":337},[306,1663,1664],{"class":312},"'1'",[306,1666,130],{"class":341},[306,1668,1640],{"class":764},[306,1670,423],{"class":337},[306,1672,1645],{"class":312},[306,1674,1648],{"class":341},[306,1676,1677],{"class":308,"line":594},[306,1678,1679],{"class":341},"            )],\n",[306,1681,1682,1685,1687],{"class":308,"line":600},[306,1683,1684],{"class":764},"            environment",[306,1686,423],{"class":337},[306,1688,878],{"class":341},[306,1690,1691,1694,1697,1700,1702,1705],{"class":308,"line":605},[306,1692,1693],{"class":312},"                \"SERVER_NAME\"",[306,1695,1696],{"class":341},": os.environ.get(",[306,1698,1699],{"class":312},"\"SERVER_NAME\"",[306,1701,130],{"class":341},[306,1703,1704],{"class":312},"\"CDK Valheim\"",[306,1706,1648],{"class":341},[306,1708,1709,1712,1714,1717,1719,1722],{"class":308,"line":617},[306,1710,1711],{"class":312},"                \"WORLD_NAME\"",[306,1713,1696],{"class":341},[306,1715,1716],{"class":312},"\"WORLD_NAME\"",[306,1718,130],{"class":341},[306,1720,1721],{"class":312},"\"Amazon\"",[306,1723,1648],{"class":341},[306,1725,1726,1729,1731,1734,1736,1739],{"class":308,"line":627},[306,1727,1728],{"class":312},"                \"SERVER_PASS\"",[306,1730,1696],{"class":341},[306,1732,1733],{"class":312},"\"SERVER_PASS\"",[306,1735,130],{"class":341},[306,1737,1738],{"class":312},"\"fargate\"",[306,1740,1648],{"class":341},[306,1742,1743,1746,1748,1751],{"class":308,"line":632},[306,1744,1745],{"class":312},"                \"BACKUPS\"",[306,1747,467],{"class":341},[306,1749,1750],{"class":312},"'false'",[306,1752,473],{"class":341},[306,1754,1755],{"class":308,"line":637},[306,1756,1757],{"class":341},"            })\n",[13,1759,1760,1761,1763],{},"We are almost ready to deploy a basic version of our Valheim server using the ",[36,1762,38],{}," construct. If we were to run the following command:",[199,1765,1768],{"className":1766,"code":1767,"language":204},[202],"cdk deploy --app cdk/app.py --require-approval never\n",[36,1769,1767],{"__ignoreMap":207},[13,1771,1772,1773,1776],{},"from the root of our project, it should work. This assumes that we have default credentials configured in ",[36,1774,1775],{},"~/.aws/credentials"," and that we have also bootstrapped our AWS account with the resources it needs for CDK to work:",[199,1778,1781],{"className":1779,"code":1780,"language":204},[202],"cdk bootstrap --app cdk/app.py aws://$AWS_ACCOUNT_ID/$AWS_DEFAULT_REGION\n",[36,1782,1780],{"__ignoreMap":207},[232,1784,1786],{"id":1785},"setup-gitlab-ci-job-for-automated-deployments","Setup GitLab CI job for automated deployments",[13,1788,1789,1790,1793],{},"Instead of deploying from the command line, it would be better to run the deployment from a CI/CD pipeline. Add a ",[36,1791,1792],{},".gitlab-ci.yml"," file to the root of your project and populate it with the following YAML:",[199,1795,1799],{"className":1796,"code":1797,"language":1798,"meta":207,"style":207},"language-yaml shiki shiki-themes github-light github-dark monokai","stages:\n  - deploy\n\nimage: python:3.8\n\ncdk_deploy:\n  stage: deploy\n  rules:\n    - if: \"$CI_COMMIT_TAG\"\n      when: always\n  before_script:\n    - apt-get -qq update && apt-get -y install nodejs npm\n    - npm i -g aws-cdk\n    - pip3 install -e cdk\n  script:\n    - cdk bootstrap --app cdk/app.py aws://$AWS_ACCOUNT_ID/$AWS_DEFAULT_REGION\n    - cdk deploy --app cdk/app.py --require-approval never\n","yaml",[36,1800,1801,1809,1817,1821,1831,1835,1842,1851,1858,1870,1880,1887,1894,1900,1907,1914,1920],{"__ignoreMap":207},[306,1802,1803,1807],{"class":308,"line":309},[306,1804,1806],{"class":1805},"s5clZ","stages",[306,1808,750],{"class":341},[306,1810,1811,1814],{"class":308,"line":316},[306,1812,1813],{"class":341},"  - ",[306,1815,1816],{"class":312},"deploy\n",[306,1818,1819],{"class":308,"line":322},[306,1820,331],{"emptyLinePlaceholder":330},[306,1822,1823,1826,1828],{"class":308,"line":327},[306,1824,1825],{"class":1805},"image",[306,1827,467],{"class":341},[306,1829,1830],{"class":312},"python:3.8\n",[306,1832,1833],{"class":308,"line":334},[306,1834,331],{"emptyLinePlaceholder":330},[306,1836,1837,1840],{"class":308,"line":345},[306,1838,1839],{"class":1805},"cdk_deploy",[306,1841,750],{"class":341},[306,1843,1844,1847,1849],{"class":308,"line":350},[306,1845,1846],{"class":1805},"  stage",[306,1848,467],{"class":341},[306,1850,1816],{"class":312},[306,1852,1853,1856],{"class":308,"line":358},[306,1854,1855],{"class":1805},"  rules",[306,1857,750],{"class":341},[306,1859,1860,1863,1865,1867],{"class":308,"line":363},[306,1861,1862],{"class":341},"    - ",[306,1864,737],{"class":1805},[306,1866,467],{"class":341},[306,1868,1869],{"class":312},"\"$CI_COMMIT_TAG\"\n",[306,1871,1872,1875,1877],{"class":308,"line":382},[306,1873,1874],{"class":1805},"      when",[306,1876,467],{"class":341},[306,1878,1879],{"class":312},"always\n",[306,1881,1882,1885],{"class":308,"line":397},[306,1883,1884],{"class":1805},"  before_script",[306,1886,750],{"class":341},[306,1888,1889,1891],{"class":308,"line":412},[306,1890,1862],{"class":341},[306,1892,1893],{"class":312},"apt-get -qq update && apt-get -y install nodejs npm\n",[306,1895,1896,1898],{"class":308,"line":417},[306,1897,1862],{"class":341},[306,1899,1221],{"class":312},[306,1901,1902,1904],{"class":308,"line":445},[306,1903,1862],{"class":341},[306,1905,1906],{"class":312},"pip3 install -e cdk\n",[306,1908,1909,1912],{"class":308,"line":450},[306,1910,1911],{"class":1805},"  script",[306,1913,750],{"class":341},[306,1915,1916,1918],{"class":308,"line":461},[306,1917,1862],{"class":341},[306,1919,1780],{"class":312},[306,1921,1922,1924],{"class":308,"line":476},[306,1923,1862],{"class":341},[306,1925,1767],{"class":312},[13,1927,1928,1929,1932,1933,1936,1937,98],{},"Before we initialize a git repository in the root directory of our project, remove the ",[36,1930,1931],{},".git"," repo that CDK created when we initialized the project with ",[36,1934,1935],{},"rf -rf cdk/.git",". Now initialized a project in the root directory with ",[36,1938,1939],{},"git init",[13,1941,1942],{},"Next, create a GitLab repository and add the remote to this project with:",[199,1944,1947],{"className":1945,"code":1946,"language":204},[202],"git remote add origin git@gitlab.com:gitlab-username/project-name.git\n",[36,1948,1946],{"__ignoreMap":207},[13,1950,1951,1952,1955],{},"In the GitLab project's ",[36,1953,1954],{},"Settings > CI/CD > Variables"," section, add the following environment variables as protected variables:",[68,1957,1958,1963,1968,1973,1978,1983,1988,1993],{},[71,1959,1960],{},[36,1961,1962],{},"AWS_ACCESS_KEY_ID",[71,1964,1965],{},[36,1966,1967],{},"AWS_SECRET_ACCESS_KEY",[71,1969,1970],{},[36,1971,1972],{},"AWS_DEFAULT_REGION",[71,1974,1975],{},[36,1976,1977],{},"AWS_ACCOUNT_ID",[71,1979,1980],{},[36,1981,1982],{},"APPLICATION_PUBLIC_KEY",[71,1984,1985],{},[36,1986,1987],{},"SERVER_PASS",[71,1989,1990],{},[36,1991,1992],{},"SERVER_NAME",[71,1994,1995],{},[36,1996,1997],{},"WORLD_NAME",[13,1999,2000,2001,2004,2005,2008],{},"Now under ",[36,2002,2003],{},"Settings > Repository > Protected Tags",", add a wildcard (",[36,2006,2007],{},"*",") so that all tags are protected and only maintainers can push tags. This allows us to use the protected environment variables only when a trusted maintainer pushes a tag to the repository.",[232,2010,2012],{"id":2011},"edit-the-name-of-the-stack-and-add-region-and-account-info","Edit the name of the stack and add region and account info",[13,2014,2015,2016,52],{},"We are almost ready to create a tag and push to GitLab, but before we do that let's change the name of the CloudFormation stack that CDK will create in ",[36,2017,2018],{},"cdk/app.py",[199,2020,2022],{"className":300,"code":2021,"language":302,"meta":207,"style":207},"#!/usr/bin/env python3\n\nimport os\n\nfrom aws_cdk import core as cdk\n\n# For consistency with TypeScript code, `cdk` is the preferred import name for\n# the CDK's core module.  The following line also imports it as `core` for use\n# with examples from the CDK Developer's Guide, which are in the process of\n# being updated to use `cdk`.  You may delete this import if you don't need it.\nfrom aws_cdk import core\n\nfrom cdk.cdk_stack import CdkStack\n\naws_region = os.environ.get(\"AWS_DEFAULT_REGION\", \"us-east-1\")\naws_account = os.environ.get(\"AWS_ACCOUNT_ID\", \"\")\n\n\napp = cdk.App()\nCdkStack(\n    app,\n    \"valheim-server-stack\",\n    env={\"region\": aws_region, \"account\": aws_account}\n)\n\napp.synth()\n",[36,2023,2024,2029,2033,2039,2043,2057,2061,2066,2071,2076,2081,2092,2096,2108,2112,2131,2150,2154,2158,2168,2173,2178,2185,2207,2211,2215],{"__ignoreMap":207},[306,2025,2026],{"class":308,"line":309},[306,2027,2028],{"class":1554},"#!/usr/bin/env python3\n",[306,2030,2031],{"class":308,"line":316},[306,2032,331],{"emptyLinePlaceholder":330},[306,2034,2035,2037],{"class":308,"line":322},[306,2036,338],{"class":337},[306,2038,342],{"class":341},[306,2040,2041],{"class":308,"line":327},[306,2042,331],{"emptyLinePlaceholder":330},[306,2044,2045,2047,2049,2051,2053,2055],{"class":308,"line":334},[306,2046,1339],{"class":337},[306,2048,1342],{"class":341},[306,2050,338],{"class":337},[306,2052,1347],{"class":341},[306,2054,1350],{"class":337},[306,2056,1353],{"class":341},[306,2058,2059],{"class":308,"line":345},[306,2060,331],{"emptyLinePlaceholder":330},[306,2062,2063],{"class":308,"line":350},[306,2064,2065],{"class":1554},"# For consistency with TypeScript code, `cdk` is the preferred import name for\n",[306,2067,2068],{"class":308,"line":358},[306,2069,2070],{"class":1554},"# the CDK's core module.  The following line also imports it as `core` for use\n",[306,2072,2073],{"class":308,"line":363},[306,2074,2075],{"class":1554},"# with examples from the CDK Developer's Guide, which are in the process of\n",[306,2077,2078],{"class":308,"line":382},[306,2079,2080],{"class":1554},"# being updated to use `cdk`.  You may delete this import if you don't need it.\n",[306,2082,2083,2085,2087,2089],{"class":308,"line":397},[306,2084,1339],{"class":337},[306,2086,1342],{"class":341},[306,2088,338],{"class":337},[306,2090,2091],{"class":341}," core\n",[306,2093,2094],{"class":308,"line":412},[306,2095,331],{"emptyLinePlaceholder":330},[306,2097,2098,2100,2103,2105],{"class":308,"line":417},[306,2099,1339],{"class":337},[306,2101,2102],{"class":341}," cdk.cdk_stack ",[306,2104,338],{"class":337},[306,2106,2107],{"class":341}," CdkStack\n",[306,2109,2110],{"class":308,"line":445},[306,2111,331],{"emptyLinePlaceholder":330},[306,2113,2114,2117,2119,2121,2124,2126,2129],{"class":308,"line":450},[306,2115,2116],{"class":341},"aws_region ",[306,2118,423],{"class":337},[306,2120,373],{"class":341},[306,2122,2123],{"class":312},"\"AWS_DEFAULT_REGION\"",[306,2125,130],{"class":341},[306,2127,2128],{"class":312},"\"us-east-1\"",[306,2130,379],{"class":341},[306,2132,2133,2136,2138,2140,2143,2145,2148],{"class":308,"line":461},[306,2134,2135],{"class":341},"aws_account ",[306,2137,423],{"class":337},[306,2139,373],{"class":341},[306,2141,2142],{"class":312},"\"AWS_ACCOUNT_ID\"",[306,2144,130],{"class":341},[306,2146,2147],{"class":312},"\"\"",[306,2149,379],{"class":341},[306,2151,2152],{"class":308,"line":476},[306,2153,331],{"emptyLinePlaceholder":330},[306,2155,2156],{"class":308,"line":489},[306,2157,331],{"emptyLinePlaceholder":330},[306,2159,2160,2163,2165],{"class":308,"line":498},[306,2161,2162],{"class":341},"app ",[306,2164,423],{"class":337},[306,2166,2167],{"class":341}," cdk.App()\n",[306,2169,2170],{"class":308,"line":504},[306,2171,2172],{"class":341},"CdkStack(\n",[306,2174,2175],{"class":308,"line":517},[306,2176,2177],{"class":341},"    app,\n",[306,2179,2180,2183],{"class":308,"line":530},[306,2181,2182],{"class":312},"    \"valheim-server-stack\"",[306,2184,473],{"class":341},[306,2186,2187,2190,2192,2195,2198,2201,2204],{"class":308,"line":543},[306,2188,2189],{"class":764},"    env",[306,2191,423],{"class":337},[306,2193,2194],{"class":341},"{",[306,2196,2197],{"class":312},"\"region\"",[306,2199,2200],{"class":341},": aws_region, ",[306,2202,2203],{"class":312},"\"account\"",[306,2205,2206],{"class":341},": aws_account}\n",[306,2208,2209],{"class":308,"line":556},[306,2210,379],{"class":341},[306,2212,2213],{"class":308,"line":564},[306,2214,331],{"emptyLinePlaceholder":330},[306,2216,2217],{"class":308,"line":570},[306,2218,2219],{"class":341},"app.synth()\n",[13,2221,2222],{},"Now commit changes, create a tag and push it to GitLab:",[199,2224,2227],{"className":2225,"code":2226,"language":204},[202],"git add .\ngit commit -m \"initial commit\"\ngit tag v0.0.1\ngit push origin v0.0.1\n",[36,2228,2226],{"__ignoreMap":207},[13,2230,2231],{},"Check the logs of the GitLab CI pipeline that this creates in your GitLab project's CI/CD settings.",[13,2233,2234],{},"If everything runs successfully, you should be able to see your Valheim server listed in the list of community servers once it comes online, and you should be able to connect to it with the password you set in GitLab project variables.",[32,2236,2238],{"id":2237},"add-the-lambda-function-handler-code","Add the Lambda function handler code",[13,2240,2241,2242,2244,2245,2248,2249,2252,2253,2248,2256,2259],{},"We will have a simple Flask application respond the the Discord ",[36,2243,104],{}," requests that send Interaction events. Let's add ",[36,2246,2247],{},"lambda-handler.py"," in ",[36,2250,2251],{},"lambda/functions/interactions/lambda-handler.py",", and ",[36,2254,2255],{},"requirements.txt",[36,2257,2258],{},"lambda/functions/interactions/requirements.txt",". Our project structure should look like this:",[199,2261,2264],{"className":2262,"code":2263,"language":204},[202],"$ tree -L 4\n.\n├── cdk\n│   ├── app.py\n│   ├── cdk\n│   │   ├── cdk_stack.py\n│   │   └── __init__.py\n│   ├── cdk.json\n│   ├── README.md\n│   ├── requirements.txt\n│   ├── setup.py\n│   └── source.bat\n├── lambda\n│   └── functions\n│       └── interactions\n│           ├── lambda-handler.py    \u003C-- here\n│           └── requirements.txt     \u003C-- and here\n├── README.md\n└── register_bot.py\n",[36,2265,2263],{"__ignoreMap":207},[13,2267,2268,2269,2271],{},"The ",[36,2270,2255],{}," defines the pip dependencies for our Lambda function. It should include the following:",[199,2273,2276],{"className":2274,"code":2275,"language":204},[202],"aws-wsgi==0.2.7\ndiscord-interactions==0.2.0\nFlask==1.1.2\n",[36,2277,2275],{"__ignoreMap":207},[68,2279,2280,2286,2291],{},[71,2281,2282,2285],{},[36,2283,2284],{},"aws-wsgi"," will transform API Gateway requests into WSGI application requests that Flask can handle",[71,2287,2288,2290],{},[36,2289,1205],{}," will help us with some security-related requirements",[71,2292,2293,2296],{},[36,2294,2295],{},"Flask"," will be our web application framework",[13,2298,2299,2300,52],{},"Here's the code for ",[36,2301,2247],{},[199,2303,2305],{"className":300,"code":2304,"language":302,"meta":207,"style":207},"import os\nimport logging\n\nimport awsgi\nimport boto3\nfrom discord_interactions import verify_key_decorator\nfrom flask import (\n    Flask,\n    jsonify,\n    request\n)\n\n\nclient = boto3.client('ecs')\n\n# Your public key can be found on your application in the Developer Portal\nPUBLIC_KEY = os.environ.get('APPLICATION_PUBLIC_KEY')\n\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\napp = Flask(__name__)\n\n\n@app.route('/discord', methods=['POST'])\n@verify_key_decorator(PUBLIC_KEY)\ndef index():\n    if request.json[\"type\"] == 1:\n        return jsonify({\"type\": 1})\n    else:\n        logger.info(request.json)\n        try:\n            interaction_option = request.json[\"data\"][\"options\"][0][\"value\"]\n        except KeyError:\n            logger.info(\"Could not parse the interaction option\")\n            interaction_option = \"status\"\n\n        logger.info(\"Interaction:\")\n        logger.info(interaction_option)\n\n        content = \"\"\n\n        if interaction_option == \"status\":\n            try:\n\n                resp = client.describe_services(\n                    cluster=os.environ.get(\"ECS_CLUSTER_ARN\", \"\"),\n                    services=[\n                        os.environ.get(\"ECS_SERVICE_NAME\", \"\"),\n                    ]\n                )\n                desired_count = resp[\"services\"][0][\"desiredCount\"]\n                running_count = resp[\"services\"][0][\"runningCount\"]\n                pending_count = resp[\"services\"][0][\"pendingCount\"]\n\n                content = f\"Desired: {desired_count} | Running: {running_count} | Pending: {pending_count}\"\n\n            except Error as e:\n                content = \"Could not get server status\"\n                logger.info(\"Could not get the server status\")\n                logger.info(e)\n\n        elif interaction_option == \"start\":\n            content = \"Starting the server\"\n\n            resp = client.update_service(\n                cluster=os.environ.get(\"ECS_CLUSTER_ARN\", \"\"),\n                service=os.environ.get(\"ECS_SERVICE_NAME\", \"\"),\n                desiredCount=1\n            )\n\n        elif interaction_option == \"stop\":\n            content = \"Stopping the server\"\n\n            resp = client.update_service(\n                cluster=os.environ.get(\"ECS_CLUSTER_ARN\", \"\"),\n                service=os.environ.get(\"ECS_SERVICE_NAME\", \"\"),\n                desiredCount=0\n            )\n\n        else:\n            content = \"Unknown command\"\n\n        logger.info(resp)\n\n        return jsonify({\n            \"type\": 4,\n            \"data\": {\n                \"tts\": False,\n                \"content\": content,\n                \"embeds\": [],\n                \"allowed_mentions\": { \"parse\": [] }\n            }\n        })\n\ndef handler(event, context):\n    return awsgi.response(\n        app,\n        event,\n        context,\n        base64_content_types={\"image/png\"}\n    )\n",[36,2306,2307,2313,2320,2324,2331,2338,2350,2361,2366,2371,2376,2380,2384,2388,2403,2407,2412,2426,2430,2440,2450,2454,2468,2472,2476,2503,2514,2525,2547,2564,2571,2576,2583,2613,2623,2633,2642,2646,2656,2661,2665,2675,2679,2694,2701,2705,2715,2734,2743,2758,2764,2770,2795,2818,2841,2846,2889,2894,2908,2918,2929,2935,2940,2955,2966,2971,2982,3000,3018,3029,3035,3040,3054,3064,3069,3078,3095,3112,3122,3127,3132,3140,3150,3155,3161,3166,3174,3186,3194,3207,3216,3225,3240,3246,3252,3257,3277,3286,3292,3298,3304,3319],{"__ignoreMap":207},[306,2308,2309,2311],{"class":308,"line":309},[306,2310,338],{"class":337},[306,2312,342],{"class":341},[306,2314,2315,2317],{"class":308,"line":316},[306,2316,338],{"class":337},[306,2318,2319],{"class":341}," logging\n",[306,2321,2322],{"class":308,"line":322},[306,2323,331],{"emptyLinePlaceholder":330},[306,2325,2326,2328],{"class":308,"line":327},[306,2327,338],{"class":337},[306,2329,2330],{"class":341}," awsgi\n",[306,2332,2333,2335],{"class":308,"line":334},[306,2334,338],{"class":337},[306,2336,2337],{"class":341}," boto3\n",[306,2339,2340,2342,2345,2347],{"class":308,"line":345},[306,2341,1339],{"class":337},[306,2343,2344],{"class":341}," discord_interactions ",[306,2346,338],{"class":337},[306,2348,2349],{"class":341}," verify_key_decorator\n",[306,2351,2352,2354,2357,2359],{"class":308,"line":350},[306,2353,1339],{"class":337},[306,2355,2356],{"class":341}," flask ",[306,2358,338],{"class":337},[306,2360,1368],{"class":341},[306,2362,2363],{"class":308,"line":358},[306,2364,2365],{"class":341},"    Flask,\n",[306,2367,2368],{"class":308,"line":363},[306,2369,2370],{"class":341},"    jsonify,\n",[306,2372,2373],{"class":308,"line":382},[306,2374,2375],{"class":341},"    request\n",[306,2377,2378],{"class":308,"line":397},[306,2379,379],{"class":341},[306,2381,2382],{"class":308,"line":412},[306,2383,331],{"emptyLinePlaceholder":330},[306,2385,2386],{"class":308,"line":417},[306,2387,331],{"emptyLinePlaceholder":330},[306,2389,2390,2393,2395,2398,2401],{"class":308,"line":445},[306,2391,2392],{"class":341},"client ",[306,2394,423],{"class":337},[306,2396,2397],{"class":341}," boto3.client(",[306,2399,2400],{"class":312},"'ecs'",[306,2402,379],{"class":341},[306,2404,2405],{"class":308,"line":450},[306,2406,331],{"emptyLinePlaceholder":330},[306,2408,2409],{"class":308,"line":461},[306,2410,2411],{"class":1554},"# Your public key can be found on your application in the Developer Portal\n",[306,2413,2414,2417,2419,2421,2424],{"class":308,"line":476},[306,2415,2416],{"class":366},"PUBLIC_KEY",[306,2418,370],{"class":337},[306,2420,373],{"class":341},[306,2422,2423],{"class":312},"'APPLICATION_PUBLIC_KEY'",[306,2425,379],{"class":341},[306,2427,2428],{"class":308,"line":489},[306,2429,331],{"emptyLinePlaceholder":330},[306,2431,2432,2435,2437],{"class":308,"line":498},[306,2433,2434],{"class":341},"logger ",[306,2436,423],{"class":337},[306,2438,2439],{"class":341}," logging.getLogger()\n",[306,2441,2442,2445,2448],{"class":308,"line":504},[306,2443,2444],{"class":341},"logger.setLevel(logging.",[306,2446,2447],{"class":366},"INFO",[306,2449,379],{"class":341},[306,2451,2452],{"class":308,"line":517},[306,2453,331],{"emptyLinePlaceholder":330},[306,2455,2456,2458,2460,2463,2466],{"class":308,"line":530},[306,2457,2162],{"class":341},[306,2459,423],{"class":337},[306,2461,2462],{"class":341}," Flask(",[306,2464,2465],{"class":740},"__name__",[306,2467,379],{"class":341},[306,2469,2470],{"class":308,"line":543},[306,2471,331],{"emptyLinePlaceholder":330},[306,2473,2474],{"class":308,"line":556},[306,2475,331],{"emptyLinePlaceholder":330},[306,2477,2478,2482,2484,2487,2489,2492,2494,2497,2500],{"class":308,"line":564},[306,2479,2481],{"class":2480},"srTi1","@app.route",[306,2483,1469],{"class":341},[306,2485,2486],{"class":312},"'/discord'",[306,2488,130],{"class":341},[306,2490,2491],{"class":764},"methods",[306,2493,423],{"class":337},[306,2495,2496],{"class":341},"[",[306,2498,2499],{"class":312},"'POST'",[306,2501,2502],{"class":341},"])\n",[306,2504,2505,2508,2510,2512],{"class":308,"line":570},[306,2506,2507],{"class":2480},"@verify_key_decorator",[306,2509,1469],{"class":341},[306,2511,2416],{"class":366},[306,2513,379],{"class":341},[306,2515,2516,2519,2522],{"class":308,"line":583},[306,2517,2518],{"class":426},"def",[306,2520,2521],{"class":2480}," index",[306,2523,2524],{"class":341},"():\n",[306,2526,2527,2530,2533,2536,2539,2542,2545],{"class":308,"line":594},[306,2528,2529],{"class":337},"    if",[306,2531,2532],{"class":341}," request.json[",[306,2534,2535],{"class":312},"\"type\"",[306,2537,2538],{"class":341},"] ",[306,2540,2541],{"class":337},"==",[306,2543,2544],{"class":366}," 1",[306,2546,750],{"class":341},[306,2548,2549,2552,2555,2557,2559,2561],{"class":308,"line":600},[306,2550,2551],{"class":337},"        return",[306,2553,2554],{"class":341}," jsonify({",[306,2556,2535],{"class":312},[306,2558,467],{"class":341},[306,2560,151],{"class":366},[306,2562,2563],{"class":341},"})\n",[306,2565,2566,2569],{"class":308,"line":605},[306,2567,2568],{"class":337},"    else",[306,2570,750],{"class":341},[306,2572,2573],{"class":308,"line":617},[306,2574,2575],{"class":341},"        logger.info(request.json)\n",[306,2577,2578,2581],{"class":308,"line":627},[306,2579,2580],{"class":337},"        try",[306,2582,750],{"class":341},[306,2584,2585,2588,2590,2592,2595,2598,2601,2603,2605,2607,2610],{"class":308,"line":632},[306,2586,2587],{"class":341},"            interaction_option ",[306,2589,423],{"class":337},[306,2591,2532],{"class":341},[306,2593,2594],{"class":312},"\"data\"",[306,2596,2597],{"class":341},"][",[306,2599,2600],{"class":312},"\"options\"",[306,2602,2597],{"class":341},[306,2604,154],{"class":366},[306,2606,2597],{"class":341},[306,2608,2609],{"class":312},"\"value\"",[306,2611,2612],{"class":341},"]\n",[306,2614,2615,2618,2621],{"class":308,"line":637},[306,2616,2617],{"class":337},"        except",[306,2619,2620],{"class":883}," KeyError",[306,2622,750],{"class":341},[306,2624,2625,2628,2631],{"class":308,"line":649},[306,2626,2627],{"class":341},"            logger.info(",[306,2629,2630],{"class":312},"\"Could not parse the interaction option\"",[306,2632,379],{"class":341},[306,2634,2635,2637,2639],{"class":308,"line":659},[306,2636,2587],{"class":341},[306,2638,423],{"class":337},[306,2640,2641],{"class":312}," \"status\"\n",[306,2643,2644],{"class":308,"line":665},[306,2645,331],{"emptyLinePlaceholder":330},[306,2647,2648,2651,2654],{"class":308,"line":671},[306,2649,2650],{"class":341},"        logger.info(",[306,2652,2653],{"class":312},"\"Interaction:\"",[306,2655,379],{"class":341},[306,2657,2658],{"class":308,"line":677},[306,2659,2660],{"class":341},"        logger.info(interaction_option)\n",[306,2662,2663],{"class":308,"line":683},[306,2664,331],{"emptyLinePlaceholder":330},[306,2666,2667,2670,2672],{"class":308,"line":689},[306,2668,2669],{"class":341},"        content ",[306,2671,423],{"class":337},[306,2673,2674],{"class":312}," \"\"\n",[306,2676,2677],{"class":308,"line":694},[306,2678,331],{"emptyLinePlaceholder":330},[306,2680,2681,2684,2687,2689,2692],{"class":308,"line":704},[306,2682,2683],{"class":337},"        if",[306,2685,2686],{"class":341}," interaction_option ",[306,2688,2541],{"class":337},[306,2690,2691],{"class":312}," \"status\"",[306,2693,750],{"class":341},[306,2695,2696,2699],{"class":308,"line":724},[306,2697,2698],{"class":337},"            try",[306,2700,750],{"class":341},[306,2702,2703],{"class":308,"line":729},[306,2704,331],{"emptyLinePlaceholder":330},[306,2706,2707,2710,2712],{"class":308,"line":734},[306,2708,2709],{"class":341},"                resp ",[306,2711,423],{"class":337},[306,2713,2714],{"class":341}," client.describe_services(\n",[306,2716,2717,2720,2722,2725,2728,2730,2732],{"class":308,"line":753},[306,2718,2719],{"class":764},"                    cluster",[306,2721,423],{"class":337},[306,2723,2724],{"class":341},"os.environ.get(",[306,2726,2727],{"class":312},"\"ECS_CLUSTER_ARN\"",[306,2729,130],{"class":341},[306,2731,2147],{"class":312},[306,2733,1648],{"class":341},[306,2735,2736,2739,2741],{"class":308,"line":781},[306,2737,2738],{"class":764},"                    services",[306,2740,423],{"class":337},[306,2742,1262],{"class":341},[306,2744,2746,2749,2752,2754,2756],{"class":308,"line":2745},49,[306,2747,2748],{"class":341},"                        os.environ.get(",[306,2750,2751],{"class":312},"\"ECS_SERVICE_NAME\"",[306,2753,130],{"class":341},[306,2755,2147],{"class":312},[306,2757,1648],{"class":341},[306,2759,2761],{"class":308,"line":2760},50,[306,2762,2763],{"class":341},"                    ]\n",[306,2765,2767],{"class":308,"line":2766},51,[306,2768,2769],{"class":341},"                )\n",[306,2771,2773,2776,2778,2781,2784,2786,2788,2790,2793],{"class":308,"line":2772},52,[306,2774,2775],{"class":341},"                desired_count ",[306,2777,423],{"class":337},[306,2779,2780],{"class":341}," resp[",[306,2782,2783],{"class":312},"\"services\"",[306,2785,2597],{"class":341},[306,2787,154],{"class":366},[306,2789,2597],{"class":341},[306,2791,2792],{"class":312},"\"desiredCount\"",[306,2794,2612],{"class":341},[306,2796,2798,2801,2803,2805,2807,2809,2811,2813,2816],{"class":308,"line":2797},53,[306,2799,2800],{"class":341},"                running_count ",[306,2802,423],{"class":337},[306,2804,2780],{"class":341},[306,2806,2783],{"class":312},[306,2808,2597],{"class":341},[306,2810,154],{"class":366},[306,2812,2597],{"class":341},[306,2814,2815],{"class":312},"\"runningCount\"",[306,2817,2612],{"class":341},[306,2819,2821,2824,2826,2828,2830,2832,2834,2836,2839],{"class":308,"line":2820},54,[306,2822,2823],{"class":341},"                pending_count ",[306,2825,423],{"class":337},[306,2827,2780],{"class":341},[306,2829,2783],{"class":312},[306,2831,2597],{"class":341},[306,2833,154],{"class":366},[306,2835,2597],{"class":341},[306,2837,2838],{"class":312},"\"pendingCount\"",[306,2840,2612],{"class":341},[306,2842,2844],{"class":308,"line":2843},55,[306,2845,331],{"emptyLinePlaceholder":330},[306,2847,2849,2852,2854,2856,2859,2861,2864,2867,2870,2872,2875,2877,2880,2882,2885,2887],{"class":308,"line":2848},56,[306,2850,2851],{"class":341},"                content ",[306,2853,423],{"class":337},[306,2855,427],{"class":426},[306,2857,2858],{"class":312},"\"Desired: ",[306,2860,2194],{"class":366},[306,2862,2863],{"class":341},"desired_count",[306,2865,2866],{"class":366},"}",[306,2868,2869],{"class":312}," | Running: ",[306,2871,2194],{"class":366},[306,2873,2874],{"class":341},"running_count",[306,2876,2866],{"class":366},[306,2878,2879],{"class":312}," | Pending: ",[306,2881,2194],{"class":366},[306,2883,2884],{"class":341},"pending_count",[306,2886,2866],{"class":366},[306,2888,721],{"class":312},[306,2890,2892],{"class":308,"line":2891},57,[306,2893,331],{"emptyLinePlaceholder":330},[306,2895,2897,2900,2903,2905],{"class":308,"line":2896},58,[306,2898,2899],{"class":337},"            except",[306,2901,2902],{"class":341}," Error ",[306,2904,1350],{"class":337},[306,2906,2907],{"class":341}," e:\n",[306,2909,2911,2913,2915],{"class":308,"line":2910},59,[306,2912,2851],{"class":341},[306,2914,423],{"class":337},[306,2916,2917],{"class":312}," \"Could not get server status\"\n",[306,2919,2921,2924,2927],{"class":308,"line":2920},60,[306,2922,2923],{"class":341},"                logger.info(",[306,2925,2926],{"class":312},"\"Could not get the server status\"",[306,2928,379],{"class":341},[306,2930,2932],{"class":308,"line":2931},61,[306,2933,2934],{"class":341},"                logger.info(e)\n",[306,2936,2938],{"class":308,"line":2937},62,[306,2939,331],{"emptyLinePlaceholder":330},[306,2941,2943,2946,2948,2950,2953],{"class":308,"line":2942},63,[306,2944,2945],{"class":337},"        elif",[306,2947,2686],{"class":341},[306,2949,2541],{"class":337},[306,2951,2952],{"class":312}," \"start\"",[306,2954,750],{"class":341},[306,2956,2958,2961,2963],{"class":308,"line":2957},64,[306,2959,2960],{"class":341},"            content ",[306,2962,423],{"class":337},[306,2964,2965],{"class":312}," \"Starting the server\"\n",[306,2967,2969],{"class":308,"line":2968},65,[306,2970,331],{"emptyLinePlaceholder":330},[306,2972,2974,2977,2979],{"class":308,"line":2973},66,[306,2975,2976],{"class":341},"            resp ",[306,2978,423],{"class":337},[306,2980,2981],{"class":341}," client.update_service(\n",[306,2983,2985,2988,2990,2992,2994,2996,2998],{"class":308,"line":2984},67,[306,2986,2987],{"class":764},"                cluster",[306,2989,423],{"class":337},[306,2991,2724],{"class":341},[306,2993,2727],{"class":312},[306,2995,130],{"class":341},[306,2997,2147],{"class":312},[306,2999,1648],{"class":341},[306,3001,3003,3006,3008,3010,3012,3014,3016],{"class":308,"line":3002},68,[306,3004,3005],{"class":764},"                service",[306,3007,423],{"class":337},[306,3009,2724],{"class":341},[306,3011,2751],{"class":312},[306,3013,130],{"class":341},[306,3015,2147],{"class":312},[306,3017,1648],{"class":341},[306,3019,3021,3024,3026],{"class":308,"line":3020},69,[306,3022,3023],{"class":764},"                desiredCount",[306,3025,423],{"class":337},[306,3027,3028],{"class":366},"1\n",[306,3030,3032],{"class":308,"line":3031},70,[306,3033,3034],{"class":341},"            )\n",[306,3036,3038],{"class":308,"line":3037},71,[306,3039,331],{"emptyLinePlaceholder":330},[306,3041,3043,3045,3047,3049,3052],{"class":308,"line":3042},72,[306,3044,2945],{"class":337},[306,3046,2686],{"class":341},[306,3048,2541],{"class":337},[306,3050,3051],{"class":312}," \"stop\"",[306,3053,750],{"class":341},[306,3055,3057,3059,3061],{"class":308,"line":3056},73,[306,3058,2960],{"class":341},[306,3060,423],{"class":337},[306,3062,3063],{"class":312}," \"Stopping the server\"\n",[306,3065,3067],{"class":308,"line":3066},74,[306,3068,331],{"emptyLinePlaceholder":330},[306,3070,3072,3074,3076],{"class":308,"line":3071},75,[306,3073,2976],{"class":341},[306,3075,423],{"class":337},[306,3077,2981],{"class":341},[306,3079,3081,3083,3085,3087,3089,3091,3093],{"class":308,"line":3080},76,[306,3082,2987],{"class":764},[306,3084,423],{"class":337},[306,3086,2724],{"class":341},[306,3088,2727],{"class":312},[306,3090,130],{"class":341},[306,3092,2147],{"class":312},[306,3094,1648],{"class":341},[306,3096,3098,3100,3102,3104,3106,3108,3110],{"class":308,"line":3097},77,[306,3099,3005],{"class":764},[306,3101,423],{"class":337},[306,3103,2724],{"class":341},[306,3105,2751],{"class":312},[306,3107,130],{"class":341},[306,3109,2147],{"class":312},[306,3111,1648],{"class":341},[306,3113,3115,3117,3119],{"class":308,"line":3114},78,[306,3116,3023],{"class":764},[306,3118,423],{"class":337},[306,3120,3121],{"class":366},"0\n",[306,3123,3125],{"class":308,"line":3124},79,[306,3126,3034],{"class":341},[306,3128,3130],{"class":308,"line":3129},80,[306,3131,331],{"emptyLinePlaceholder":330},[306,3133,3135,3138],{"class":308,"line":3134},81,[306,3136,3137],{"class":337},"        else",[306,3139,750],{"class":341},[306,3141,3143,3145,3147],{"class":308,"line":3142},82,[306,3144,2960],{"class":341},[306,3146,423],{"class":337},[306,3148,3149],{"class":312}," \"Unknown command\"\n",[306,3151,3153],{"class":308,"line":3152},83,[306,3154,331],{"emptyLinePlaceholder":330},[306,3156,3158],{"class":308,"line":3157},84,[306,3159,3160],{"class":341},"        logger.info(resp)\n",[306,3162,3164],{"class":308,"line":3163},85,[306,3165,331],{"emptyLinePlaceholder":330},[306,3167,3169,3171],{"class":308,"line":3168},86,[306,3170,2551],{"class":337},[306,3172,3173],{"class":341}," jsonify({\n",[306,3175,3177,3179,3181,3184],{"class":308,"line":3176},87,[306,3178,533],{"class":312},[306,3180,467],{"class":341},[306,3182,3183],{"class":366},"4",[306,3185,473],{"class":341},[306,3187,3189,3192],{"class":308,"line":3188},88,[306,3190,3191],{"class":312},"            \"data\"",[306,3193,912],{"class":341},[306,3195,3197,3200,3202,3205],{"class":308,"line":3196},89,[306,3198,3199],{"class":312},"                \"tts\"",[306,3201,467],{"class":341},[306,3203,3204],{"class":366},"False",[306,3206,473],{"class":341},[306,3208,3210,3213],{"class":308,"line":3209},90,[306,3211,3212],{"class":312},"                \"content\"",[306,3214,3215],{"class":341},": content,\n",[306,3217,3219,3222],{"class":308,"line":3218},91,[306,3220,3221],{"class":312},"                \"embeds\"",[306,3223,3224],{"class":341},": [],\n",[306,3226,3228,3231,3234,3237],{"class":308,"line":3227},92,[306,3229,3230],{"class":312},"                \"allowed_mentions\"",[306,3232,3233],{"class":341},": { ",[306,3235,3236],{"class":312},"\"parse\"",[306,3238,3239],{"class":341},": [] }\n",[306,3241,3243],{"class":308,"line":3242},93,[306,3244,3245],{"class":341},"            }\n",[306,3247,3249],{"class":308,"line":3248},94,[306,3250,3251],{"class":341},"        })\n",[306,3253,3255],{"class":308,"line":3254},95,[306,3256,331],{"emptyLinePlaceholder":330},[306,3258,3260,3262,3265,3267,3270,3272,3275],{"class":308,"line":3259},96,[306,3261,2518],{"class":426},[306,3263,3264],{"class":2480}," handler",[306,3266,1469],{"class":341},[306,3268,3269],{"class":1497},"event",[306,3271,130],{"class":341},[306,3273,3274],{"class":1497},"context",[306,3276,1480],{"class":341},[306,3278,3280,3283],{"class":308,"line":3279},97,[306,3281,3282],{"class":337},"    return",[306,3284,3285],{"class":341}," awsgi.response(\n",[306,3287,3289],{"class":308,"line":3288},98,[306,3290,3291],{"class":341},"        app,\n",[306,3293,3295],{"class":308,"line":3294},99,[306,3296,3297],{"class":341},"        event,\n",[306,3299,3301],{"class":308,"line":3300},100,[306,3302,3303],{"class":341},"        context,\n",[306,3305,3307,3310,3312,3314,3317],{"class":308,"line":3306},101,[306,3308,3309],{"class":764},"        base64_content_types",[306,3311,423],{"class":337},[306,3313,2194],{"class":341},[306,3315,3316],{"class":312},"\"image/png\"",[306,3318,686],{"class":341},[306,3320,3322],{"class":308,"line":3321},102,[306,3323,3324],{"class":341},"    )\n",[13,3326,3327,3328,3331,3332,3335,3336,3338,3339,3342],{},"Notice how we pass the Flask ",[36,3329,3330],{},"app"," to ",[36,3333,3334],{},"awsgi.response",". ",[36,3337,2284],{}," (or ",[36,3340,3341],{},"awsgi"," as it is imported) is the go-between for API Gateway and WSGI.",[32,3344,3346],{"id":3345},"add-the-cdk-code-for-api-gateway-and-lambda-that-will-serve-our-discord-interaction-endpoint-url","Add the CDK code for API Gateway and Lambda that will serve our Discord Interaction Endpoint URL",[13,3348,3349,3350,3352,3353,3355,3356,52],{},"Now we can add the following code to ",[36,3351,1326],{}," to configure the API Gateway and Lambda function. Add the following to ",[36,3354,1326],{}," after our definition of ",[36,3357,3358],{},"self.valheim_world",[199,3360,3362],{"className":300,"code":3361,"language":302,"meta":207,"style":207},"        self.env_vars = {\n            \"APPLICATION_PUBLIC_KEY\": os.environ.get(\"APPLICATION_PUBLIC_KEY\"),\n            \"ECS_SERVICE_NAME\": self.valheim_world.service.service_name,\n            \"ECS_CLUSTER_ARN\": self.valheim_world.service.cluster.cluster_arn\n        }\n\n        self.flask_lambda_layer = _lambda.LayerVersion(\n            self,\n            \"FlaskAppLambdaLayer\",\n            code=_lambda.AssetCode(\"./layers/flask\"),\n            compatible_runtimes=[_lambda.Runtime.PYTHON_3_8,],\n        )\n\n        self.flask_app_lambda = _lambda.Function(\n            self,\n            \"FlaskAppLambda\",\n            runtime=_lambda.Runtime.PYTHON_3_8,\n            code=_lambda.AssetCode('./lambda/functions/interactions'),\n            function_name=\"flask-app-handler\",\n            handler=\"lambda-handler.handler\",\n            layers=[self.flask_lambda_layer],\n            timeout=core.Duration.seconds(60),\n            environment={**self.env_vars},\n        )\n\n        self.flask_app_lambda.role.add_managed_policy(\n            iam.ManagedPolicy.from_managed_policy_arn(\n                self,\n                'ECS_FullAccessPolicy',\n                managed_policy_arn='arn:aws:iam::aws:policy/AmazonECS_FullAccess'\n            )\n        )\n\n        # https://slmkitani.medium.com/passing-custom-headers-through-amazon-api-gateway-to-an-aws-lambda-function-f3a1cfdc0e29\n        self.request_templates = {\n            \"application/json\": '''{\n                \"method\": \"$context.httpMethod\",\n                \"body\" : $input.json(\"$\"),\n                \"headers\": {\n                    #foreach($param in $input.params().header.keySet())\n                    \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\"\n                    #if($foreach.hasNext),#end\n                    #end\n                }\n            }\n            '''\n        }\n\n        self.apigateway = apigw.RestApi(\n            self,\n            'FlaskAppEndpoint',\n        )\n\n        self.apigateway.root.add_method(\"ANY\")\n\n        self.discord_interaction_webhook = self.apigateway.root.add_resource(\"discord\")\n\n        self.discord_interaction_webhook_integration = apigw.LambdaIntegration(\n            self.flask_app_lambda,\n            request_templates=self.request_templates\n        )\n\n        self.discord_interaction_webhook.add_method(\n            'POST',\n            self.discord_interaction_webhook_integration\n        )\n",[36,3363,3364,3375,3387,3399,3411,3416,3420,3432,3438,3445,3460,3476,3481,3485,3497,3503,3510,3524,3537,3549,3561,3575,3590,3605,3609,3613,3620,3625,3632,3639,3649,3653,3657,3661,3666,3677,3687,3692,3697,3702,3707,3712,3717,3722,3726,3730,3735,3739,3743,3755,3761,3768,3772,3776,3788,3792,3812,3816,3828,3835,3847,3851,3855,3862,3869,3876],{"__ignoreMap":207},[306,3365,3366,3368,3371,3373],{"class":308,"line":309},[306,3367,1561],{"class":1560},[306,3369,3370],{"class":341},".env_vars ",[306,3372,423],{"class":337},[306,3374,458],{"class":341},[306,3376,3377,3380,3382,3385],{"class":308,"line":316},[306,3378,3379],{"class":312},"            \"APPLICATION_PUBLIC_KEY\"",[306,3381,1696],{"class":341},[306,3383,3384],{"class":312},"\"APPLICATION_PUBLIC_KEY\"",[306,3386,1648],{"class":341},[306,3388,3389,3392,3394,3396],{"class":308,"line":322},[306,3390,3391],{"class":312},"            \"ECS_SERVICE_NAME\"",[306,3393,467],{"class":341},[306,3395,1498],{"class":1560},[306,3397,3398],{"class":341},".valheim_world.service.service_name,\n",[306,3400,3401,3404,3406,3408],{"class":308,"line":327},[306,3402,3403],{"class":312},"            \"ECS_CLUSTER_ARN\"",[306,3405,467],{"class":341},[306,3407,1498],{"class":1560},[306,3409,3410],{"class":341},".valheim_world.service.cluster.cluster_arn\n",[306,3412,3413],{"class":308,"line":334},[306,3414,3415],{"class":341},"        }\n",[306,3417,3418],{"class":308,"line":345},[306,3419,331],{"emptyLinePlaceholder":330},[306,3421,3422,3424,3427,3429],{"class":308,"line":350},[306,3423,1561],{"class":1560},[306,3425,3426],{"class":341},".flask_lambda_layer ",[306,3428,423],{"class":337},[306,3430,3431],{"class":341}," _lambda.LayerVersion(\n",[306,3433,3434,3436],{"class":308,"line":358},[306,3435,1574],{"class":1560},[306,3437,473],{"class":341},[306,3439,3440,3443],{"class":308,"line":363},[306,3441,3442],{"class":312},"            \"FlaskAppLambdaLayer\"",[306,3444,473],{"class":341},[306,3446,3447,3450,3452,3455,3458],{"class":308,"line":382},[306,3448,3449],{"class":764},"            code",[306,3451,423],{"class":337},[306,3453,3454],{"class":341},"_lambda.AssetCode(",[306,3456,3457],{"class":312},"\"./layers/flask\"",[306,3459,1648],{"class":341},[306,3461,3462,3465,3467,3470,3473],{"class":308,"line":397},[306,3463,3464],{"class":764},"            compatible_runtimes",[306,3466,423],{"class":337},[306,3468,3469],{"class":341},"[_lambda.Runtime.",[306,3471,3472],{"class":366},"PYTHON_3_8",[306,3474,3475],{"class":341},",],\n",[306,3477,3478],{"class":308,"line":412},[306,3479,3480],{"class":341},"        )\n",[306,3482,3483],{"class":308,"line":417},[306,3484,331],{"emptyLinePlaceholder":330},[306,3486,3487,3489,3492,3494],{"class":308,"line":445},[306,3488,1561],{"class":1560},[306,3490,3491],{"class":341},".flask_app_lambda ",[306,3493,423],{"class":337},[306,3495,3496],{"class":341}," _lambda.Function(\n",[306,3498,3499,3501],{"class":308,"line":450},[306,3500,1574],{"class":1560},[306,3502,473],{"class":341},[306,3504,3505,3508],{"class":308,"line":461},[306,3506,3507],{"class":312},"            \"FlaskAppLambda\"",[306,3509,473],{"class":341},[306,3511,3512,3515,3517,3520,3522],{"class":308,"line":476},[306,3513,3514],{"class":764},"            runtime",[306,3516,423],{"class":337},[306,3518,3519],{"class":341},"_lambda.Runtime.",[306,3521,3472],{"class":366},[306,3523,473],{"class":341},[306,3525,3526,3528,3530,3532,3535],{"class":308,"line":489},[306,3527,3449],{"class":764},[306,3529,423],{"class":337},[306,3531,3454],{"class":341},[306,3533,3534],{"class":312},"'./lambda/functions/interactions'",[306,3536,1648],{"class":341},[306,3538,3539,3542,3544,3547],{"class":308,"line":498},[306,3540,3541],{"class":764},"            function_name",[306,3543,423],{"class":337},[306,3545,3546],{"class":312},"\"flask-app-handler\"",[306,3548,473],{"class":341},[306,3550,3551,3554,3556,3559],{"class":308,"line":504},[306,3552,3553],{"class":764},"            handler",[306,3555,423],{"class":337},[306,3557,3558],{"class":312},"\"lambda-handler.handler\"",[306,3560,473],{"class":341},[306,3562,3563,3566,3568,3570,3572],{"class":308,"line":517},[306,3564,3565],{"class":764},"            layers",[306,3567,423],{"class":337},[306,3569,2496],{"class":341},[306,3571,1498],{"class":1560},[306,3573,3574],{"class":341},".flask_lambda_layer],\n",[306,3576,3577,3580,3582,3585,3588],{"class":308,"line":530},[306,3578,3579],{"class":764},"            timeout",[306,3581,423],{"class":337},[306,3583,3584],{"class":341},"core.Duration.seconds(",[306,3586,3587],{"class":366},"60",[306,3589,1648],{"class":341},[306,3591,3592,3594,3596,3598,3600,3602],{"class":308,"line":543},[306,3593,1684],{"class":764},[306,3595,423],{"class":337},[306,3597,2194],{"class":341},[306,3599,1519],{"class":337},[306,3601,1498],{"class":1560},[306,3603,3604],{"class":341},".env_vars},\n",[306,3606,3607],{"class":308,"line":556},[306,3608,3480],{"class":341},[306,3610,3611],{"class":308,"line":564},[306,3612,331],{"emptyLinePlaceholder":330},[306,3614,3615,3617],{"class":308,"line":570},[306,3616,1561],{"class":1560},[306,3618,3619],{"class":341},".flask_app_lambda.role.add_managed_policy(\n",[306,3621,3622],{"class":308,"line":583},[306,3623,3624],{"class":341},"            iam.ManagedPolicy.from_managed_policy_arn(\n",[306,3626,3627,3630],{"class":308,"line":594},[306,3628,3629],{"class":1560},"                self",[306,3631,473],{"class":341},[306,3633,3634,3637],{"class":308,"line":600},[306,3635,3636],{"class":312},"                'ECS_FullAccessPolicy'",[306,3638,473],{"class":341},[306,3640,3641,3644,3646],{"class":308,"line":605},[306,3642,3643],{"class":764},"                managed_policy_arn",[306,3645,423],{"class":337},[306,3647,3648],{"class":312},"'arn:aws:iam::aws:policy/AmazonECS_FullAccess'\n",[306,3650,3651],{"class":308,"line":617},[306,3652,3034],{"class":341},[306,3654,3655],{"class":308,"line":627},[306,3656,3480],{"class":341},[306,3658,3659],{"class":308,"line":632},[306,3660,331],{"emptyLinePlaceholder":330},[306,3662,3663],{"class":308,"line":637},[306,3664,3665],{"class":1554},"        # https://slmkitani.medium.com/passing-custom-headers-through-amazon-api-gateway-to-an-aws-lambda-function-f3a1cfdc0e29\n",[306,3667,3668,3670,3673,3675],{"class":308,"line":649},[306,3669,1561],{"class":1560},[306,3671,3672],{"class":341},".request_templates ",[306,3674,423],{"class":337},[306,3676,458],{"class":341},[306,3678,3679,3682,3684],{"class":308,"line":659},[306,3680,3681],{"class":312},"            \"application/json\"",[306,3683,467],{"class":341},[306,3685,3686],{"class":312},"'''{\n",[306,3688,3689],{"class":308,"line":665},[306,3690,3691],{"class":312},"                \"method\": \"$context.httpMethod\",\n",[306,3693,3694],{"class":308,"line":671},[306,3695,3696],{"class":312},"                \"body\" : $input.json(\"$\"),\n",[306,3698,3699],{"class":308,"line":677},[306,3700,3701],{"class":312},"                \"headers\": {\n",[306,3703,3704],{"class":308,"line":683},[306,3705,3706],{"class":312},"                    #foreach($param in $input.params().header.keySet())\n",[306,3708,3709],{"class":308,"line":689},[306,3710,3711],{"class":312},"                    \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\"\n",[306,3713,3714],{"class":308,"line":694},[306,3715,3716],{"class":312},"                    #if($foreach.hasNext),#end\n",[306,3718,3719],{"class":308,"line":704},[306,3720,3721],{"class":312},"                    #end\n",[306,3723,3724],{"class":308,"line":724},[306,3725,662],{"class":312},[306,3727,3728],{"class":308,"line":729},[306,3729,3245],{"class":312},[306,3731,3732],{"class":308,"line":734},[306,3733,3734],{"class":312},"            '''\n",[306,3736,3737],{"class":308,"line":753},[306,3738,3415],{"class":341},[306,3740,3741],{"class":308,"line":781},[306,3742,331],{"emptyLinePlaceholder":330},[306,3744,3745,3747,3750,3752],{"class":308,"line":2745},[306,3746,1561],{"class":1560},[306,3748,3749],{"class":341},".apigateway ",[306,3751,423],{"class":337},[306,3753,3754],{"class":341}," apigw.RestApi(\n",[306,3756,3757,3759],{"class":308,"line":2760},[306,3758,1574],{"class":1560},[306,3760,473],{"class":341},[306,3762,3763,3766],{"class":308,"line":2766},[306,3764,3765],{"class":312},"            'FlaskAppEndpoint'",[306,3767,473],{"class":341},[306,3769,3770],{"class":308,"line":2772},[306,3771,3480],{"class":341},[306,3773,3774],{"class":308,"line":2797},[306,3775,331],{"emptyLinePlaceholder":330},[306,3777,3778,3780,3783,3786],{"class":308,"line":2820},[306,3779,1561],{"class":1560},[306,3781,3782],{"class":341},".apigateway.root.add_method(",[306,3784,3785],{"class":312},"\"ANY\"",[306,3787,379],{"class":341},[306,3789,3790],{"class":308,"line":2843},[306,3791,331],{"emptyLinePlaceholder":330},[306,3793,3794,3796,3799,3801,3804,3807,3810],{"class":308,"line":2848},[306,3795,1561],{"class":1560},[306,3797,3798],{"class":341},".discord_interaction_webhook ",[306,3800,423],{"class":337},[306,3802,3803],{"class":1560}," self",[306,3805,3806],{"class":341},".apigateway.root.add_resource(",[306,3808,3809],{"class":312},"\"discord\"",[306,3811,379],{"class":341},[306,3813,3814],{"class":308,"line":2891},[306,3815,331],{"emptyLinePlaceholder":330},[306,3817,3818,3820,3823,3825],{"class":308,"line":2896},[306,3819,1561],{"class":1560},[306,3821,3822],{"class":341},".discord_interaction_webhook_integration ",[306,3824,423],{"class":337},[306,3826,3827],{"class":341}," apigw.LambdaIntegration(\n",[306,3829,3830,3832],{"class":308,"line":2910},[306,3831,1574],{"class":1560},[306,3833,3834],{"class":341},".flask_app_lambda,\n",[306,3836,3837,3840,3842,3844],{"class":308,"line":2920},[306,3838,3839],{"class":764},"            request_templates",[306,3841,423],{"class":337},[306,3843,1498],{"class":1560},[306,3845,3846],{"class":341},".request_templates\n",[306,3848,3849],{"class":308,"line":2931},[306,3850,3480],{"class":341},[306,3852,3853],{"class":308,"line":2937},[306,3854,331],{"emptyLinePlaceholder":330},[306,3856,3857,3859],{"class":308,"line":2942},[306,3858,1561],{"class":1560},[306,3860,3861],{"class":341},".discord_interaction_webhook.add_method(\n",[306,3863,3864,3867],{"class":308,"line":2957},[306,3865,3866],{"class":312},"            'POST'",[306,3868,473],{"class":341},[306,3870,3871,3873],{"class":308,"line":2968},[306,3872,1574],{"class":1560},[306,3874,3875],{"class":341},".discord_interaction_webhook_integration\n",[306,3877,3878],{"class":308,"line":2973},[306,3879,3480],{"class":341},[13,3881,3882,3883,3885],{},"First we add some environment variables that will be made available to the Lambda function's execution environment. The ECS cluster and service name as well as our Discord application's ",[36,3884,2416],{}," are needed in the Lambda function for everything to work.",[13,3887,3888],{},"We have to give the lambda function permissions to make changes to ECS since it will be interacting with ECS via boto3.",[13,3890,3891,3894,3895,3897],{},[36,3892,3893],{},"self.request_templates"," is needed in order to pass the special security headers from the Discord ",[36,3896,104],{}," request that are needed for security. I couldn't find a lot of resources on how to make this work, but I learned that this uses Apache Velocity Template Language.",[232,3899,3901],{"id":3900},"add-a-gitlab-ci-job-for-installing-dependencies-into-lambda-layer","Add a GitLab CI job for installing dependencies into Lambda Layer",[13,3903,3904],{},"There's one more step before we can push our code. We need to add another GitLab CI job that will install the Lambda dependencies so that they can be sent to the Lambda layer that we defined in our Lambda function. A Lambda Layer is where you install dependencies for this type of Lambda setup. Let's add the following stage:",[199,3906,3910],{"className":3907,"code":3908,"language":3909,"meta":207,"style":207},"language-yml shiki shiki-themes github-light github-dark monokai","stages:\n  - build\n  - deploy\n\nimage: python:3.8\n\npip_install:\n  stage: build\n  rules:\n    - if: \"$CI_COMMIT_TAG\"\n      when: always\n  artifacts:\n    paths:\n      - layers/flask/python\n  script:\n    - pip install -r lambda/functions/interactions/requirements.txt -t layers/flask/python\n","yml",[36,3911,3912,3918,3925,3931,3935,3943,3947,3954,3962,3968,3978,3986,3993,4000,4008,4014],{"__ignoreMap":207},[306,3913,3914,3916],{"class":308,"line":309},[306,3915,1806],{"class":1805},[306,3917,750],{"class":341},[306,3919,3920,3922],{"class":308,"line":316},[306,3921,1813],{"class":341},[306,3923,3924],{"class":312},"build\n",[306,3926,3927,3929],{"class":308,"line":322},[306,3928,1813],{"class":341},[306,3930,1816],{"class":312},[306,3932,3933],{"class":308,"line":327},[306,3934,331],{"emptyLinePlaceholder":330},[306,3936,3937,3939,3941],{"class":308,"line":334},[306,3938,1825],{"class":1805},[306,3940,467],{"class":341},[306,3942,1830],{"class":312},[306,3944,3945],{"class":308,"line":345},[306,3946,331],{"emptyLinePlaceholder":330},[306,3948,3949,3952],{"class":308,"line":350},[306,3950,3951],{"class":1805},"pip_install",[306,3953,750],{"class":341},[306,3955,3956,3958,3960],{"class":308,"line":358},[306,3957,1846],{"class":1805},[306,3959,467],{"class":341},[306,3961,3924],{"class":312},[306,3963,3964,3966],{"class":308,"line":363},[306,3965,1855],{"class":1805},[306,3967,750],{"class":341},[306,3969,3970,3972,3974,3976],{"class":308,"line":382},[306,3971,1862],{"class":341},[306,3973,737],{"class":1805},[306,3975,467],{"class":341},[306,3977,1869],{"class":312},[306,3979,3980,3982,3984],{"class":308,"line":397},[306,3981,1874],{"class":1805},[306,3983,467],{"class":341},[306,3985,1879],{"class":312},[306,3987,3988,3991],{"class":308,"line":412},[306,3989,3990],{"class":1805},"  artifacts",[306,3992,750],{"class":341},[306,3994,3995,3998],{"class":308,"line":417},[306,3996,3997],{"class":1805},"    paths",[306,3999,750],{"class":341},[306,4001,4002,4005],{"class":308,"line":445},[306,4003,4004],{"class":341},"      - ",[306,4006,4007],{"class":312},"layers/flask/python\n",[306,4009,4010,4012],{"class":308,"line":450},[306,4011,1911],{"class":1805},[306,4013,750],{"class":341},[306,4015,4016,4018],{"class":308,"line":461},[306,4017,1862],{"class":341},[306,4019,4020],{"class":312},"pip install -r lambda/functions/interactions/requirements.txt -t layers/flask/python\n",[13,4022,4023,4024,4027,4028,4030,4031,1323,4034,4037,4038,1323,4041,4043],{},"Now we are installing dependencies into a target location (with the ",[36,4025,4026],{},"-t"," flag) that our Lambda Layer will be able to use in the ",[36,4029,1839],{}," GitLab CI job. This is because we have indicated the path to ",[36,4032,4033],{},"layers/flask/python",[36,4035,4036],{},"paths"," array of ",[36,4039,4040],{},"artifacts",[36,4042,3951],{}," job. There are other ways to add the pip dependencies to the Lambda Layers. We don't absolutely need this to be done in a separate CI job.",[13,4045,4046],{},"Now tag and push the code to GitLab and check to see that the pipeline runs successfully.",[232,4048,4050],{"id":4049},"add-the-api-gateway-url-to-discord-application-settings","Add the API Gateway URL to Discord Application settings",[13,4052,4053],{},"If everything runs smoothly, we should see a URL in the very last lines of the pipeline. This is the URL for our API Gateway endpoint:",[199,4055,4058],{"className":4056,"code":4057,"language":204},[202],"https://abc123xyz.execute-api.us-east-1.amazonaws.com/prod/\n",[36,4059,4057],{"__ignoreMap":207},[13,4061,4062,4063,4066,4067,1323,4069,4071],{},"We need to add ",[36,4064,4065],{},"discord"," to the end of this URL and then add that to our the ",[36,4068,843],{},[36,4070,189],{}," section of our Discord application's admin page:",[199,4073,4076],{"className":4074,"code":4075,"language":204},[202],"https://abc123xyz.execute-api.us-east-1.amazonaws.com/prod/discord\n",[36,4077,4075],{"__ignoreMap":207},[13,4079,4080,4081,4086],{},"When we add this URL in the application settings, Discord will make sure that our endpoint is properly verifying the request based on its headers. Check out ",[17,4082,4085],{"href":4083,"rel":4084},"https://github.com/discord/discord-interactions-python/blob/main/discord_interactions/__init__.py#L31",[21],"this function"," to see how it works:",[199,4088,4090],{"className":300,"code":4089,"language":302,"meta":207,"style":207},"def verify_key_decorator(client_public_key):\n    from flask import request, jsonify\n\n    # https://stackoverflow.com/questions/51691730/flask-middleware-for-specific-route\n    def _decorator(f):\n        @wraps(f)\n        def __decorator(*args, **kwargs):\n            # Verify request\n            signature = request.headers.get('X-Signature-Ed25519')\n            timestamp = request.headers.get('X-Signature-Timestamp')\n            if signature is None or timestamp is None or not verify_key(request.data, signature, timestamp, client_public_key):\n                return 'Bad request signature', 401\n\n            # Automatically respond to pings\n            if request.json and request.json.get('type') == InteractionType.PING:\n                return jsonify({\n                    'type': InteractionResponseType.PONG\n                })\n\n            # Pass through\n            return f(*args, **kwargs)\n        return __decorator\n    return _decorator\n",[36,4091,4092,4106,4118,4122,4127,4140,4148,4171,4176,4191,4205,4237,4250,4254,4259,4288,4294,4305,4310,4314,4319,4336,4343],{"__ignoreMap":207},[306,4093,4094,4096,4099,4101,4104],{"class":308,"line":309},[306,4095,2518],{"class":426},[306,4097,4098],{"class":2480}," verify_key_decorator",[306,4100,1469],{"class":341},[306,4102,4103],{"class":1497},"client_public_key",[306,4105,1480],{"class":341},[306,4107,4108,4111,4113,4115],{"class":308,"line":316},[306,4109,4110],{"class":337},"    from",[306,4112,2356],{"class":341},[306,4114,338],{"class":337},[306,4116,4117],{"class":341}," request, jsonify\n",[306,4119,4120],{"class":308,"line":322},[306,4121,331],{"emptyLinePlaceholder":330},[306,4123,4124],{"class":308,"line":327},[306,4125,4126],{"class":1554},"    # https://stackoverflow.com/questions/51691730/flask-middleware-for-specific-route\n",[306,4128,4129,4131,4134,4136,4138],{"class":308,"line":334},[306,4130,1489],{"class":426},[306,4132,4133],{"class":2480}," _decorator",[306,4135,1469],{"class":341},[306,4137,712],{"class":1497},[306,4139,1480],{"class":341},[306,4141,4142,4145],{"class":308,"line":345},[306,4143,4144],{"class":2480},"        @wraps",[306,4146,4147],{"class":341},"(f)\n",[306,4149,4150,4153,4156,4158,4160,4163,4165,4167,4169],{"class":308,"line":350},[306,4151,4152],{"class":426},"        def",[306,4154,4155],{"class":2480}," __decorator",[306,4157,1469],{"class":341},[306,4159,2007],{"class":337},[306,4161,4162],{"class":1497},"args",[306,4164,130],{"class":341},[306,4166,1519],{"class":337},[306,4168,1522],{"class":1497},[306,4170,1480],{"class":341},[306,4172,4173],{"class":308,"line":358},[306,4174,4175],{"class":1554},"            # Verify request\n",[306,4177,4178,4181,4183,4186,4189],{"class":308,"line":363},[306,4179,4180],{"class":341},"            signature ",[306,4182,423],{"class":337},[306,4184,4185],{"class":341}," request.headers.get(",[306,4187,4188],{"class":312},"'X-Signature-Ed25519'",[306,4190,379],{"class":341},[306,4192,4193,4196,4198,4200,4203],{"class":308,"line":382},[306,4194,4195],{"class":341},"            timestamp ",[306,4197,423],{"class":337},[306,4199,4185],{"class":341},[306,4201,4202],{"class":312},"'X-Signature-Timestamp'",[306,4204,379],{"class":341},[306,4206,4207,4210,4213,4216,4219,4222,4225,4227,4229,4231,4234],{"class":308,"line":397},[306,4208,4209],{"class":337},"            if",[306,4211,4212],{"class":341}," signature ",[306,4214,4215],{"class":337},"is",[306,4217,4218],{"class":366}," None",[306,4220,4221],{"class":337}," or",[306,4223,4224],{"class":341}," timestamp ",[306,4226,4215],{"class":337},[306,4228,4218],{"class":366},[306,4230,4221],{"class":337},[306,4232,4233],{"class":337}," not",[306,4235,4236],{"class":341}," verify_key(request.data, signature, timestamp, client_public_key):\n",[306,4238,4239,4242,4245,4247],{"class":308,"line":412},[306,4240,4241],{"class":337},"                return",[306,4243,4244],{"class":312}," 'Bad request signature'",[306,4246,130],{"class":341},[306,4248,4249],{"class":366},"401\n",[306,4251,4252],{"class":308,"line":417},[306,4253,331],{"emptyLinePlaceholder":330},[306,4255,4256],{"class":308,"line":445},[306,4257,4258],{"class":1554},"            # Automatically respond to pings\n",[306,4260,4261,4263,4266,4269,4272,4275,4278,4280,4283,4286],{"class":308,"line":450},[306,4262,4209],{"class":337},[306,4264,4265],{"class":341}," request.json ",[306,4267,4268],{"class":337},"and",[306,4270,4271],{"class":341}," request.json.get(",[306,4273,4274],{"class":312},"'type'",[306,4276,4277],{"class":341},") ",[306,4279,2541],{"class":337},[306,4281,4282],{"class":341}," InteractionType.",[306,4284,4285],{"class":366},"PING",[306,4287,750],{"class":341},[306,4289,4290,4292],{"class":308,"line":461},[306,4291,4241],{"class":337},[306,4293,3173],{"class":341},[306,4295,4296,4299,4302],{"class":308,"line":476},[306,4297,4298],{"class":312},"                    'type'",[306,4300,4301],{"class":341},": InteractionResponseType.",[306,4303,4304],{"class":366},"PONG\n",[306,4306,4307],{"class":308,"line":489},[306,4308,4309],{"class":341},"                })\n",[306,4311,4312],{"class":308,"line":498},[306,4313,331],{"emptyLinePlaceholder":330},[306,4315,4316],{"class":308,"line":504},[306,4317,4318],{"class":1554},"            # Pass through\n",[306,4320,4321,4324,4327,4329,4332,4334],{"class":308,"line":517},[306,4322,4323],{"class":337},"            return",[306,4325,4326],{"class":341}," f(",[306,4328,2007],{"class":337},[306,4330,4331],{"class":341},"args, ",[306,4333,1519],{"class":337},[306,4335,1549],{"class":341},[306,4337,4338,4340],{"class":308,"line":530},[306,4339,2551],{"class":337},[306,4341,4342],{"class":341}," __decorator\n",[306,4344,4345,4347],{"class":308,"line":543},[306,4346,3282],{"class":337},[306,4348,4349],{"class":341}," _decorator\n",[13,4351,4352],{},"If it fails verification, we will not be able to add the URL and it will not work. You might want to add some additional logging to the Lambda function if you are not able to add the URL successfully.",[13,4354,4355,4356,98],{},"This is all covered in ",[17,4357,4360],{"href":4358,"rel":4359},"https://discord.com/developers/docs/interactions/slash-commands",[21],"the documentation for Discord Interactions",[13,4362,4363,4364,134,4367,98],{},"Now you should be able to run the Discord slash commands. You can get the status of your ECS cluster and scale it to either 1 or 0 for ",[36,4365,4366],{},"ON",[36,4368,4369],{},"OFF",[32,4371,4373],{"id":4372},"overview","Overview",[13,4375,4376],{},"Here's an overview of what we covered:",[13,4378,4379],{},[161,4380],{"alt":163,"src":164},[4382,4383,4385,4388,4391,4394,4397,4400,4408,4411,4417,4420,4429,4432,4435,4438,4441,4447,4453,4459,4468],"ol",{"start":4384},0,[71,4386,4387],{},"This is my computer. For development of this project (and most other projects) I used Windows with WSL2.",[71,4389,4390],{},"GitLab CI - This is used to run our automated pipelines whenever we push a tag.",[71,4392,4393],{},"The CDK CLI is used to create, update and delete the infrastructure in our AWS account.",[71,4395,4396],{},"Valheim - The client for the game server that we set up",[71,4398,4399],{},"The public IP address of the ECS Task that can be used to connect to our server on port 2456.",[71,4401,4402,4403,98],{},"The ECS Cluster that runs the actual docker container for the Valheim server. By default, the image used is ",[17,4404,4407],{"href":4405,"rel":4406},"https://hub.docker.com/r/lloesche/valheim-server",[21],"lloesche/valheim-server",[71,4409,4410],{},"EFS - This is the file system that is mounted onto the container of the ECS task where our game's world data is stored.",[71,4412,4413,4414,4416],{},"AWS Backup (Optional) - This is an optional feature of the ",[36,4415,38],{}," construct that can make regular backups of our EFS file system.",[71,4418,4419],{},"Events (Optional) - AWS Events can be used to scale the number of ECS tasks between 0 and 1.",[71,4421,4422,4423,4428],{},"This is the ",[17,4424,4426],{"href":45,"rel":4425},[21],[36,4427,38],{}," construct that I use in this project.",[71,4430,4431],{},"S3 bucket for syncing data to and from EFS with DataSync (WIP)",[71,4433,4434],{},"DataSync for moving game data between EFS and S3.",[71,4436,4437],{},"The Slash Commands that we set up",[71,4439,4440],{},"Discord",[71,4442,4443,4444,4446],{},"Discord Interactions sends and a ",[36,4445,104],{}," request",[71,4448,4449,4450,4452],{},"The API Gateway endpoint that we configured to handle Discord Interaction ",[36,4451,104],{}," requests.",[71,4454,4455,4456,4458],{},"The Lambda function running a simple Flask app that responds to the Interaction ",[36,4457,104],{}," request.",[71,4460,4461,4462,134,4464,4467],{},"boto3 - This is the AWS SDK Python library included in the Python execution environment that allows us to interact with the resources in our AWS account. In particular, the interactions we use from boto3 are the ",[36,4463,108],{},[36,4465,4466],{},"describe_servics"," methods from the ECS module. This allows us to turn our server on and off and also get the status.",[71,4469,4470,4471,4474],{},"This represents the ",[36,4472,4473],{},"valheim-server-stack"," we defined in our CDK application.",[32,4476,4478],{"id":4477},"todo","TODO",[13,4480,4481],{},"There are still some things that I'm working on finalizing.",[68,4483,4484,4487,4490,4493,4496],{},[71,4485,4486],{},"DataSync for easily moving data between S3 and EFS",[71,4488,4489],{},"Report billing data with an additional slash command sub-command",[71,4491,4492],{},"Add tagging to the resources in our stack to make the billing command easier to implement.",[71,4494,4495],{},"Get feedback from the Discord, CDK and Valheim communities about what I can improve here",[71,4497,4498,4499],{},"Contribute to ",[17,4500,4502],{"href":45,"rel":4501},[21],[36,4503,4504],{},"gotodeploy/cdk-valheim",[13,4506,4507],{},"Thanks for reading!",[4509,4510,4511],"style",{},"html pre.shiki code .sstjo, html code.shiki .sstjo{--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74}html pre.shiki code .sC2Qs, html code.shiki .sC2Qs{--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672}html pre.shiki code .sMOD_, html code.shiki .sMOD_{--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2}html pre.shiki code .s7F3e, html code.shiki .s7F3e{--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF}html pre.shiki code .sq6CD, html code.shiki .sq6CD{--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic}html pre.shiki code .sXSQT, html code.shiki .sXSQT{--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2}html pre.shiki code .sTHNf, html code.shiki .sTHNf{--shiki-default:#E36209;--shiki-default-font-style:inherit;--shiki-dark:#FFAB70;--shiki-dark-font-style:inherit;--shiki-sepia:#FD971F;--shiki-sepia-font-style:italic}html pre.shiki code .sTrkL, html code.shiki .sTrkL{--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#66D9EF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html pre.shiki code .s-m8C, html code.shiki .s-m8C{--shiki-default:#005CC5;--shiki-default-font-style:inherit;--shiki-dark:#79B8FF;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic}html pre.shiki code .sCZoN, html code.shiki .sCZoN{--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#CFCFC2}html pre.shiki code .sz2Vg, html code.shiki .sz2Vg{--shiki-default:#6F42C1;--shiki-default-text-decoration:inherit;--shiki-dark:#B392F0;--shiki-dark-text-decoration:inherit;--shiki-sepia:#A6E22E;--shiki-sepia-text-decoration:underline}html pre.shiki code .s30JN, html code.shiki .s30JN{--shiki-default:#6F42C1;--shiki-default-font-style:inherit;--shiki-default-text-decoration:inherit;--shiki-dark:#B392F0;--shiki-dark-font-style:inherit;--shiki-dark-text-decoration:inherit;--shiki-sepia:#A6E22E;--shiki-sepia-font-style:italic;--shiki-sepia-text-decoration:underline}html pre.shiki code .so59x, html code.shiki .so59x{--shiki-default:#24292E;--shiki-default-font-style:inherit;--shiki-dark:#E1E4E8;--shiki-dark-font-style:inherit;--shiki-sepia:#FD971F;--shiki-sepia-font-style:italic}html pre.shiki code .s8-w5, html code.shiki .s8-w5{--shiki-default:#6A737D;--shiki-dark:#6A737D;--shiki-sepia:#88846F}html pre.shiki code .sP7S_, html code.shiki .sP7S_{--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F}html pre.shiki code .s5clZ, html code.shiki .s5clZ{--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672}html pre.shiki code .srTi1, html code.shiki .srTi1{--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E}",{"title":207,"searchDepth":316,"depth":316,"links":4513},[4514,4516,4517,4521,4522,4527,4528,4532,4533],{"id":34,"depth":316,"text":4515},"cdk-valheim construct on GitHub",{"id":82,"depth":316,"text":83},{"id":170,"depth":316,"text":171,"children":4518},[4519,4520],{"id":234,"depth":322,"text":235},{"id":290,"depth":322,"text":291},{"id":855,"depth":316,"text":856},{"id":1209,"depth":316,"text":1210,"children":4523},[4524,4525,4526],{"id":1239,"depth":322,"text":1240},{"id":1785,"depth":322,"text":1786},{"id":2011,"depth":322,"text":2012},{"id":2237,"depth":316,"text":2238},{"id":3345,"depth":316,"text":3346,"children":4529},[4530,4531],{"id":3900,"depth":322,"text":3901},{"id":4049,"depth":322,"text":4050},{"id":4372,"depth":316,"text":4373},{"id":4477,"depth":316,"text":4478},false,"2021-03-18","This is a detailed guide showing how to setup a dedicated Valheim server using serverless technologies on AWS","md",null,"/static/valheim/hall.png",{},"/2021/03/18/on-demand-dedicated-serverless-valheim-server-with-cdk-discrod-interactions",{"title":5,"description":4536},"2021/03/18/on-demand-dedicated-serverless-valheim-server-with-cdk-discrod-interactions",[4545,4546,4547,4548,4549,4065],"valheim","gaming","python","flask","serverless","Ny58nS27CCHSGv1vGhH9bDRLah_mbbqRXYmqUP1uRG0",1753140995460]