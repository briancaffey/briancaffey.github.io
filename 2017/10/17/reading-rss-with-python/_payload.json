[{"data":1,"prerenderedAt":284},["ShallowReactive",2],{"reading-rss-with-python":3},{"id":4,"title":5,"body":6,"comments":125,"date":270,"description":271,"draft":272,"extension":273,"external":274,"image":275,"meta":276,"navigation":125,"path":278,"seo":279,"stem":280,"tags":281,"__hash__":283},"blog/2017/10/17/reading-rss-with-python.md","Reading RSS with Python",{"type":7,"value":8,"toc":268},"minimark",[9,31,44,47,63,74,82,92,167,170,261,264],[10,11,12,13,17,18,21,22,26,27,30],"p",{},"On my other personal website, ",[14,15,16],"a",{"href":16},"briancaffey.com",", I have a blog. The content on that blog has mostly mirrored what I put on this github pages site, ",[14,19,20],{"href":20},"briancaffey.github.io",". I want to display my most recent blog posts from briancaffey.github.io on briancaffey.com, and to do this I will be using the RSS feed that comes with a Jekyll site. This should be pretty simple, we are going to use the ",[23,24,25],"code",{},"requests"," librrary, as well as the ",[23,28,29],{},"feedparser"," library.",[10,32,33,34,40,41,43],{},"Here are some ",[14,35,39],{"href":36,"rel":37},"https://wiki.python.org/moin/RssLibraries",[38],"nofollow","docs"," on how to use ",[23,42,29],{},", it is very simple.",[10,45,46],{},"First, install it with:",[48,49,54],"pre",{"className":50,"code":51,"language":52,"meta":53,"style":53},"language-python shiki shiki-themes github-light github-dark","pip install feedparser\n","python","",[23,55,56],{"__ignoreMap":53},[57,58,61],"span",{"class":59,"line":60},"line",1,[57,62,51],{},[10,64,65,66,69,70,73],{},"Here's the setup that I will be using in utility a function that will be imported to ",[23,67,68],{},"views.py"," and called in the ",[23,71,72],{},"home()"," function that renders the homepage for briancaffey.com:",[48,75,80],{"className":76,"code":78,"language":79},[77],"language-text","import feedparser\n\ndef get_blog_posts(number_of_posts):\n    url = \"http://briancaffey.github.io/feed\"\n    feed = feedparser.parse(url)\n    posts = feed['items'][:number_of_posts]\n    return posts\n\n","text",[23,81,78],{"__ignoreMap":53},[10,83,84,85,87,88,91],{},"Next, in ",[23,86,68],{},", we just need to import the function, call it with the number of articles we want to show, save the returned value to a variable and then pass that to ",[23,89,90],{},"context",":",[48,93,95],{"className":50,"code":94,"language":52,"meta":53,"style":53},"from utils import get_blog_posts\ndef home(request):\n    ...\n    posts = get_blog_posts(4)\n\n    context = {\n        ...\n        'recent_posts': posts,\n        ...\n    }\n\n    return render(request, 'home.html', context)\n",[23,96,97,102,108,114,120,127,133,139,145,150,156,161],{"__ignoreMap":53},[57,98,99],{"class":59,"line":60},[57,100,101],{},"from utils import get_blog_posts\n",[57,103,105],{"class":59,"line":104},2,[57,106,107],{},"def home(request):\n",[57,109,111],{"class":59,"line":110},3,[57,112,113],{},"    ...\n",[57,115,117],{"class":59,"line":116},4,[57,118,119],{},"    posts = get_blog_posts(4)\n",[57,121,123],{"class":59,"line":122},5,[57,124,126],{"emptyLinePlaceholder":125},true,"\n",[57,128,130],{"class":59,"line":129},6,[57,131,132],{},"    context = {\n",[57,134,136],{"class":59,"line":135},7,[57,137,138],{},"        ...\n",[57,140,142],{"class":59,"line":141},8,[57,143,144],{},"        'recent_posts': posts,\n",[57,146,148],{"class":59,"line":147},9,[57,149,138],{},[57,151,153],{"class":59,"line":152},10,[57,154,155],{},"    }\n",[57,157,159],{"class":59,"line":158},11,[57,160,126],{"emptyLinePlaceholder":125},[57,162,164],{"class":59,"line":163},12,[57,165,166],{},"    return render(request, 'home.html', context)\n",[10,168,169],{},"In the context, we can access the following data for each item:",[171,172,173,186],"table",{},[174,175,176],"thead",{},[177,178,179,183],"tr",{},[180,181,182],"th",{},"content",[180,184,185],{},"description",[187,188,189,201,211,221,231,241,251],"tbody",{},[177,190,191,198],{},[192,193,194,195],"td",{},"item",[57,196,197],{}," \"date\"",[192,199,200],{},"\"2004-02-13T22:28:23+08:00\" - ISO 8601 date",[177,202,203,208],{},[192,204,194,205],{},[57,206,207],{}," \"date_parsed\"",[192,209,210],{},"(2004,02,13,14,28,23,4,44,0)",[177,212,213,218],{},[192,214,194,215],{},[57,216,217],{}," \"title\"",[192,219,220],{},"title for item",[177,222,223,228],{},[192,224,194,225],{},[57,226,227],{}," \"summary\"",[192,229,230],{},"change summary",[177,232,233,238],{},[192,234,194,235],{},[57,236,237],{}," \"link\"",[192,239,240],{},"URL to the page",[177,242,243,248],{},[192,244,194,245],{},[57,246,247],{}," \"wiki_diff\"",[192,249,250],{},"for wiki, a link to the diff for the page",[177,252,253,258],{},[192,254,194,255],{},[57,256,257],{}," \"wiki_history\"",[192,259,260],{},"for wiki, a link to the page history",[10,262,263],{},"That's it!",[265,266,267],"style",{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":53,"searchDepth":104,"depth":104,"links":269},[],"2017-10-17","On my other personal website, briancaffey.com, I have a blog. The content on that blog has mostly mirrored what I put on this github pages site, briancaffey.github.io. I want to display my most recent blog posts from briancaffey.github.io on briancaffey.com, and to do this I will be using the RSS feed that comes with a Jekyll site. This should be pretty simple, we are going to use the requests librrary, as well as the feedparser library.",false,"md",null,"/static/python_rss.png",{"layout":277},"post","/2017/10/17/reading-rss-with-python",{"title":5,"description":271},"2017/10/17/reading-rss-with-python",[52,282],"rss","1jmRY0FSIOEINuNy2ZNrTWoINQR4d1m7uXLhWBM4Y54",1753130138172]