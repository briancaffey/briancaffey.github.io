__NUXT_JSONP__("/2017/04/02/langton-ant-notebook.html", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,cA,cB,cC,cD,cE,cF,cG,cH,cI,cJ,cK,cL,cM,cN,cO,cP,cQ,cR,cS,cT,cU,cV,cW,cX,cY,cZ,c_,c$,da,db,dc,dd,de,df,dg,dh,di,dj,dk,dl,dm,dn,do0,dp,dq,dr,ds,dt,du,dv,dw,dx,dy,dz,dA,dB,dC,dD,dE,dF,dG,dH,dI,dJ,dK,dL,dM,dN,dO,dP,dQ,dR,dS,dT,dU,dV,dW,dX,dY,dZ,d_,d$,ea,eb,ec,ed,ee,ef,eg,eh,ei,ej,ek,el,em,en,eo,ep,eq,er,es,et,eu,ev,ew,ex,ey,ez,eA,eB,eC,eD){return {data:[{article:{slug:"langton-ant-notebook.html",layout:"post",title:"Python script for generating 2D n-state Langton's Ant animations",date:"2017-04-02T00:00:00.000Z",comments:cB,image:"\u002Fstatic\u002Fant.png",tags:["python","cellular-automata"],toc:[],body:{type:"root",children:[{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002FLLRRRLRRRRR.png"},children:[]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"This is an old project that I would like to refactor. I'm copying the contents of "},{type:b,tag:ah,props:{href:"https:\u002F\u002Fgithub.com\u002Fbriancaffey\u002Fcellular-automata\u002Fblob\u002Fmaster\u002Fants.ipynb",rel:[aE,aF,aG],target:aH},children:[{type:a,value:"this Jupyter notebook"}]},{type:a,value:" into this article with the "},{type:b,tag:q,props:{},children:[{type:a,value:"jupyter nbconvert ants.ipynb --to markdown"}]},{type:a,value:r}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"This notebook explores a type of Turing Machine known as "},{type:b,tag:ah,props:{href:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FTurmite",rel:[aE,aF,aG],target:aH},children:[{type:a,value:"termites"}]},{type:a,value:". The first part is a script I wrote a few years ago when I was first learning Python. If you are new to learning Python, I suggest you give it a try before reading the script; there's a lot you will learn about flow control and data structures. My script is far from perfect and every time I come back to it there is an idiom I can add and areas that can be refactored and cleaned up. It generates images of 2-dimensional n-state termites on an $a$ x $b$ rectangular grid, or it can generate multiple images (frames) of a single termite as it grows to make a video. Here's an example of a termite animatino that I made using the script below:"}]},{type:a,value:f},{type:b,tag:"iframe",props:{width:"100%",height:400,src:"https:\u002F\u002Fwww.youtube-nocookie.com\u002Fembed\u002FDu2DorTLAo4?rel=0",frameBorder:B,gesture:"media",allow:"encrypted-media",allowFullScreen:cB},children:[]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"The type of termite explored here is a modified version of a type of cellular automata known as "},{type:b,tag:ah,props:{href:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FLangton%27s_ant",rel:[aE,aF,aG],target:aH},children:[{type:a,value:"Langton's Ant"}]},{type:a,value:". Langton's Ant has a simple ruleset: an ant is placed on a 2-dimensional grid of 2-state cells (black or white) with a directional orientation. If the ant is on a black cell at $t=n$, the ant enters the cell on the immediate left at $t=n+1$ and the state of the cell it exits changes to white. If the state of the cell that the ant enters is white, the ant enters the cell immediately to the right and the cell it exits turns black. Around 11,000 steps, the ant enters a 'highway' which results in a repeated motion that moves the ant continually in one direction."}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"Instead of black and white cells, we can define $n$ number of states (colors) and assign any combination of $n$ instructions (eg. LRLLLRLLLRL). The script below generates generates an arbitrary number of "},{type:b,tag:q,props:{},children:[{type:a,value:cC}]},{type:a,value:". Each number in "},{type:b,tag:q,props:{},children:[{type:a,value:"range(ants)"}]},{type:a,value:" is converted to binary and then 1s and 0s of the corresponding binary number represent the left and right turns for each individual ant. For example: "},{type:b,tag:q,props:{},children:[{type:a,value:"bin(23)"}]},{type:a,value:" corresponds to a 5-state ant with the following rules: RLRRR. This method avoids generating isotropes (RLRRR is the same ant as LRLLL)."}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"If "},{type:b,tag:q,props:{},children:[{type:a,value:"record"}]},{type:a,value:" is set to "},{type:b,tag:q,props:{},children:[{type:a,value:ao}]},{type:a,value:", one frame will be captured every "},{type:b,tag:q,props:{},children:[{type:a,value:"frame_interval"}]},{type:a,value:" number of steps. These images can be converted into video easily with open-source programs like "},{type:b,tag:ah,props:{href:"https:\u002F\u002Fwww.blender.org\u002F",rel:[aE,aF,aG],target:aH},children:[{type:a,value:"Blender"}]},{type:a,value:r}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"The last part of the notebook attempts to use new methods from the latest version of scikit-learn ("},{type:b,tag:ah,props:{href:"http:\u002F\u002Fscikit-learn.org\u002Fstable\u002Fwhats_new.html",rel:[aE,aF,aG],target:aH},children:[{type:a,value:"0.18.1"}]},{type:a,value:") to cluster ants by their behavior: k-means (for clustering) and Isolation Forests (for detecting outliers)."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cD},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ax}]},{type:a,value:cE},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cF},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cG},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cH},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cI},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cJ},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:at}]},{type:a,value:cK},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cL},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:at}]},{type:a,value:cM},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cN},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cP},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:at}]},{type:a,value:cQ},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ax}]},{type:a,value:cR},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cS},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ax}]},{type:a,value:cT},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cU},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cV},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:at}]},{type:a,value:cW},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:a,value:cX}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#this script generates an image (or a series of images) for n-state 2D Langton's Ant cellular automaton."}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#SETTINGS"}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#number of ants to run"}]},{type:a,value:"\nants "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"65536"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#ants = 100"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#set record to True to record frames once every frame_interval steps"}]},{type:a,value:"\nrecord "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ap}]},{type:a,value:"\nframe_interval "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"5000"}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#Boolean for recording final image"}]},{type:a,value:"\nrecord_final_image "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ap}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#set scale to scale the resulting images in save_image(i) function"}]},{type:a,value:"\nscale "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#set the length and width of the square image canvas"}]},{type:a,value:"\nwidth "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\nlength "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#initialize ant in the center of the grid"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#grid contains length_width**2 cells"}]},{type:a,value:"\nant_pos "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aj}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aJ}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aJ}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#boolean to check if the ant touches the border (out of bounds)"}]},{type:a,value:"\noob "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ap}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#number of steps that the ant will take on each walk"}]},{type:a,value:"\niterations "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aq}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#for naming the image file below"}]},{type:a,value:"\nnumber "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:cY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#set the direction of the ant's first step: 1 --\u003E Right; -1 --\u003E Left. Eliminates mirror images (isotropes) from dataset"}]},{type:a,value:"\ndirection "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#Ininitialize a blank square image"}]},{type:a,value:"\nim1 "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" Image"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"new"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'RGBA'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'white'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#color selection"}]},{type:a,value:"\nwhite "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\nred "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\norange "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\nyellow "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\nyellow_green "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\ngreen "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\nteal "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\nlight_blue "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\nblue "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\npurple "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"127"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\nblack "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\ngrey "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:br}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:br}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:br}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\nother "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:cZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bs}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:c_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\nbrown "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"90"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bP}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\npink "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"244"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"114"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"208"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\nmauve "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"118"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"96"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"138"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\nmagenta "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:c$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:da}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n\ncolor_choices "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:"red"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" orange"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" yellow"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:db},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" yellow_green"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" blue"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" purple"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" black"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" grey"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" green"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" teal"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:db},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" other"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" brown"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" pink"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" mauve"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" magenta"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#convert an integer to binary and then convert"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aa}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:dc}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:"\n    binary "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:"bin"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n    moves "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"\"\""}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"binary"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'1'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:dd},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:az}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"\"R\""}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:dd},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:az}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"\"L\""}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:au}]},{type:a,value:" moves\n\n"},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#moves list includes all 16 length moves"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#moves_list = [num_to_string(ant) for ant in range(32768,65536)]"}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#defines the list of strings that is used for the main loop bellow"}]},{type:a,value:"\nmoves_list "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:dc},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"ant"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:" ant "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:cC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#a list of the dictionaries to by passed into the pandas dataframe for later analysis"}]},{type:a,value:"\ndf_row_list "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#dataframe object for later analysis"}]},{type:a,value:"\ndf "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:bR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:de},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#index=[0]"}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#functions for moving the postition of the ant right, left, up or down"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aa}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:"move_right"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ag}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#move ant_pos one pixel to the right"}]},{type:a,value:a_},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:az}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:au}]},{type:a,value:bS},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aa}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:"move_left"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ag}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#move ant_pos one pixel to the left"}]},{type:a,value:a_},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:df}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:au}]},{type:a,value:bS},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aa}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:"move_up"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ag}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#move ant_pos one pixel up"}]},{type:a,value:a_},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:az}]},{type:a,value:dg},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:au}]},{type:a,value:bS},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aa}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:"move_down"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ag}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#move ant_pos one pixel down"}]},{type:a,value:a_},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:df}]},{type:a,value:dg},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:au}]},{type:a,value:" ant_pos\n\n"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aa}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:"move"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"color"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:a$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ag}]},{type:a,value:" direction\n    "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"while"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#this part is a little confusing and may need to be rewritten"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#it uses the current direction of the ant to determine the appropriate direction for the next turn"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#breaks are used"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:ba},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bu}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:" width"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aj}]},{type:a,value:a$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#set the color to the next color in the list, or loop back to the beginning of the list if the end has been reached"}]},{type:a,value:bc},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bv},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#save the current postion of the ant"}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:dh},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#move the ant"}]},{type:a,value:"\n            move_right"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#save the updated position of the ant"}]},{type:a,value:bx},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:dh},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#calculate the new direction of the ant by taking the difference between end and init"}]},{type:a,value:"\n            direction "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:al}]},{type:a,value:bz},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aO}]},{type:a,value:"\n\n        "},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bT}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bU}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:ba},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bu}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aj}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aj}]},{type:a,value:a$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:bc},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bv},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" ant_pos\n            move_left"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bx},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:bV},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:al}]},{type:a,value:bz},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aO}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bT}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bU}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:ba},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bu}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aj}]},{type:a,value:a$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:bc},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bv},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" ant_pos\n            move_down"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bx},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:bV},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:al}]},{type:a,value:bz},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aO}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bT}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bU}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:ba},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bu}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aj}]},{type:a,value:a$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:bc},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bv},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" ant_pos\n            move_up"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bx},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:bV},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:al}]},{type:a,value:bz},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aO}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aO}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#captures series of pixels used for generating images"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aa}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:"get_pix_series"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ag}]},{type:a,value:" pix_series\n    pix_series "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"pix_list"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:bd},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:di},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:"\n                pixel "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" pixel_colors"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:bW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:"\n                pix_series"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"pixel"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#runs ant along the grid according to the moves (defined above) for the number of steps in iterations (defined above)"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aa}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:"run"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#variable the tracks the step number if the ant goes out of bounds"}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ag}]},{type:a,value:" oob\n    "},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#converts moves string into a list of 0s and 1s; these numbers correspond to direction and are passed into the move() function"}]},{type:a,value:"\n    moves1 "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'R'"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aZ}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:" moves"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:dj},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:cY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#exit the loop if the ant reaches the edge of the grid"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:bY},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:dk}]},{type:a,value:dl},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"or"}]},{type:a,value:bY},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:a,value:dl},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:"\n            oob "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" step\n            "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:au}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#loop through the moves"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:bZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:bA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"moves1"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"try"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:be},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#remember the ant position"}]},{type:a,value:"\n                not_moved "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" ant_pos\n                "},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#try to move the ant position"}]},{type:a,value:"\n                move"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"direction"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:be},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#check to see if the position was moved"}]},{type:a,value:be},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:bY},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"!="}]},{type:a,value:" not_moved"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:bB},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#set record to false in the settings to turn of frame recording"}]},{type:a,value:bB},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:dm},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:dn},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#records a new frame every frame_interval frame"}]},{type:a,value:dn},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:dj},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:a,value:" frame_interval "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:"\n                            counter "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:az}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:a,value:"\n                            "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"\"Generating frame number \""}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:do0},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n                            get_pix_series"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n                            save_image"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:do0},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bB},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aO}]},{type:a,value:be},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:bB},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"continue"}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"except"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:be},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#print(\"Out of bounds at step number \" + str(step))"}]},{type:a,value:"\n                oob "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" step\n                "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:au}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aa}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:"save_image"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"i"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#give access to the image instantiated at the beginning of the script"}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ag}]},{type:a,value:" im1\n    "},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#fill blank image canvas with pix_series pixel data"}]},{type:a,value:dp},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"putdata"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"pix_series"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#to rescale the image, set the scale variable in settings and call resize on im1"}]},{type:a,value:dp},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"resize"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:dq},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aj}]},{type:a,value:dr},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ds},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:dq},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aj}]},{type:a,value:dr},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ds},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"save"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'%s.png'"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#builds a dictionary to count pixels by color"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aa}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:"build_df_row"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:dt},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bD}]},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"val"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:" val"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ba},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:bA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bE}]},{type:a,value:"\n    moves_dict "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bD}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'moves'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bE}]},{type:a,value:"\n    last_step "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bD}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'last_step'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:"oob"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bE}]},{type:a,value:"\n    row_dict "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:"dict"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:du},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:b_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:a,value:"moves_dict"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:b_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:a,value:bf},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:b_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:"\n        pixel_color "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#print(pixel_color)"}]},{type:a,value:"\n        row_dict"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:"pixel_color"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:az}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:au}]},{type:a,value:" row_dict\n\n"},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#uncomment below to overwrite moves_list"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#moves_list = ['LR', 'RRLR']"}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:" _"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" moves "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:bA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"moves_list"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:"\n    oob "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:a,value:"\n    dir_path "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:b$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#make a new directory for each new ant walk in walks based on the the walk number and navigate to that directory"}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:dm},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#make a new directory to record frames for a give ant if record is set to true and that directory does not yet exist"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"not"}]},{type:a,value:" os"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bg},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"isdir"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ca},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:dv},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"makedirs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ca},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#otherwise just change into the directory"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:dv},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ca},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#set ant at middle of grid"}]},{type:a,value:a_},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aj}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aJ}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aJ}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#moves = len(moves)"}]},{type:a,value:"\n    pixel_colors "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" color_choices"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#defines an empty list of elements [x,y,0] where x amd y are the position 0 is the 0ht color in the color list (the base canvas color)"}]},{type:a,value:"\n    pix_list "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:bd},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:"\n            a "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:bc},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#pix_series is a list of pixels that is passed into the put_data function to generate an image"}]},{type:a,value:"\n    pix_series "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#counter keeps track of the frame number (if recording a series of images)"}]},{type:a,value:"\n    counter "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#run the ant"}]},{type:a,value:"\n    run"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#capture the final state of the grid with get_pix_series"}]},{type:a,value:"\n    get_pix_series"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#uncomment below to preview images for testing"}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#im1.putdata(pix_series)"}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#im1.resize((scale*im1.size[0],scale*im1.size[1])).show()"}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#build a dictionary with pixel counts"}]},{type:a,value:dt},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" build_df_row"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n    row_df "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:bR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:de},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:du},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bZ},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n    df "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"row_df"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" ignore_index"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:" record_final_image "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:dw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bh},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bg},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:dx}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n        save_image"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:b$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:dw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'..\u002F'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#summary"}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:b$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:dy},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"' '"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n\nos"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bh},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bg},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:dz}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bi},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"to_csv"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:dA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bZ},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:cb,props:{id:"clustering"},children:[{type:b,tag:ah,props:{href:"#clustering",ariaHidden:cc,tabIndex:cd},children:[{type:b,tag:c,props:{className:[ce,cf]},children:[]}]},{type:a,value:"Clustering"}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"We now have a csv file where each row is a 16-state termite and the columns labeled 0 through 15 count the sum of pixels in each state (the different colors). With "},{type:b,tag:q,props:{},children:[{type:a,value:bf}]},{type:a,value:" we also track the last step reached in the event that the ant runs into the edge of the grid. This will be helpful in clustering ants that form highways in different groups from those that complete 100000 steps inside the 200 x 200 grid."}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"First let's read the csv into a pandas DataFrame and look at some of the data."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cD},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ax}]},{type:a,value:cE},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cF},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cG},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cH},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cI},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cJ},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:at}]},{type:a,value:cK},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cL},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:at}]},{type:a,value:cM},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cN},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cP},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:at}]},{type:a,value:cQ},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ax}]},{type:a,value:cR},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cS},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ax}]},{type:a,value:cT},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cU},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:cV},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:at}]},{type:a,value:cW},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:a,value:cX}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:bh},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bh},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bg},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:dz}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\ndf1 "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:bR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"read_csv"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:dA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:dB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cg}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"(32768, 18)\n"}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:dB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"sample"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{},children:[{type:a,value:f},{type:b,tag:dC,props:{border:dD,className:[dE]},children:[{type:a,value:aw},{type:b,tag:dF,props:{},children:[{type:a,value:E},{type:b,tag:am,props:{style:dG},children:[{type:a,value:k},{type:b,tag:F,props:{},children:[]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:R}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:ch}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:aT}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:K}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:ci}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:bj}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:bk}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:T}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:aS}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:ar}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:aU}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:an}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:aV}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:bl}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:aB}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:bf}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:aA}]},{type:a,value:E}]},{type:a,value:aw}]},{type:a,value:aw},{type:b,tag:dH,props:{},children:[{type:a,value:E},{type:b,tag:am,props:{},children:[{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:"25892"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"37741"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"212"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:cj}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dI}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:cj}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"152"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"119"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:da}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"176"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"168"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"129"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"182"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"155"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:bO}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dJ}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"141"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"RRRLLRLRLLRLLRLL"}]},{type:a,value:E}]},{type:a,value:E},{type:b,tag:am,props:{},children:[{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:"27264"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"35861"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"117"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"444"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"421"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"497"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"395"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"327"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dK}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"345"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"143"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"126"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"218"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"241"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"187"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:cj}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"321"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"RRRLRLRLRLLLLLLL"}]},{type:a,value:E}]},{type:a,value:E},{type:b,tag:am,props:{},children:[{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:"10181"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"37202"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"300"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"177"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:bO}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:br}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dI}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dL}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"156"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"191"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dM}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"234"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dM}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dJ}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:bM}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dK}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"170"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"RLRLLRRRRRLLLRLR"}]},{type:a,value:E}]},{type:a,value:aw}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"There are 32768 unique instructions for 16-state termites "},{type:b,tag:q,props:{},children:[{type:a,value:"(2^16)\u002F2 = 32768"}]},{type:a,value:". Let's check to see how many of these are duplicates. We want to select only the state-counts and then call "},{type:b,tag:q,props:{},children:[{type:a,value:".drop_duplicates"}]},{type:a,value:" on that DataFrame."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"df2 "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:dN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:dO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"df2"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ck},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:al}]},{type:a,value:dP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:dQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ck},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"1566\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"1566 of the 16-state termites. It might be helpful to remove these termites from the DataFrame before we cluster them."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"unique_termites_index "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:dP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:dQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"index\n"}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"df "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:dN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cl},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:"unique_termites_index"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:dR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aq}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:cm},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aZ}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bf},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:bi},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'file_names'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'.png'"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:bi},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'move_len'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"head"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{},children:[{type:a,value:f},{type:b,tag:dC,props:{border:dD,className:[dE]},children:[{type:a,value:aw},{type:b,tag:dF,props:{},children:[{type:a,value:E},{type:b,tag:am,props:{style:dG},children:[{type:a,value:k},{type:b,tag:F,props:{},children:[]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:R}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:ch}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:aT}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:K}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:ci}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:bj}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:bk}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:T}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:aS}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:aW}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:aU}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:an}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:aV}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:bl}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:aB}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:bf}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:aA}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:bm}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:"file_names"}]},{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:dS}]},{type:a,value:E}]},{type:a,value:aw}]},{type:a,value:aw},{type:b,tag:dH,props:{},children:[{type:a,value:E},{type:b,tag:am,props:{},children:[{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"36381"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"584"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"36"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dT}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dU}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dV}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"179"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"174"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"1864"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"325"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aW}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:cn}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:cn}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dT}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dW}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:bG}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"RLLLLLLLLLLLLLLL"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aq}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"RLLLLLLLLLLLLLLL.png"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:as}]},{type:a,value:E}]},{type:a,value:E},{type:b,tag:am,props:{},children:[{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:R}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"39857"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:bP}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:ar}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:an}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:ar}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"27"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:co}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aW}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:bl}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aS}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aT}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:an}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:ar}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"RLLLLLLLLLLLLLLR"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aq}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"RLLLLLLLLLLLLLLR.png"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:as}]},{type:a,value:E}]},{type:a,value:E},{type:b,tag:am,props:{},children:[{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:T}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"39804"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dX}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aU}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:K}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aV}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aB}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aV}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:cp}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:K}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aW}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aT}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aB}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aV}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dY}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aU}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"RLLLLLLLLLLLLLRL"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aq}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"RLLLLLLLLLLLLLRL.png"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:as}]},{type:a,value:E}]},{type:a,value:E},{type:b,tag:am,props:{},children:[{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:aS}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"37223"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"346"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"70"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"97"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"89"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"122"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:bs}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dL}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"1150"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:c$}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aW}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dV}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"83"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"61"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dZ}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:d_}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"RLLLLLLLLLLLLLRR"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aq}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"RLLLLLLLLLLLLLRR.png"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:as}]},{type:a,value:E}]},{type:a,value:E},{type:b,tag:am,props:{},children:[{type:a,value:k},{type:b,tag:F,props:{},children:[{type:a,value:ar}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"39678"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"76"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"22"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:as}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:co}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:bl}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:R}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:T}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:d$}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:co}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aW}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:dW}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:bj}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:bk}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"26"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aT}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:B}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"RLLLLLLLLLLLLRLL"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:aq}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:"RLLLLLLLLLLLLRLL.png"}]},{type:a,value:k},{type:b,tag:o,props:{},children:[{type:a,value:as}]},{type:a,value:E}]},{type:a,value:aw}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"5 rows × 21 columns"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"index "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"file_names\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"Here's a quick look at the distribution of the base canvas color (red in the images below) over all of the unique termites."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:ea},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'0'"}]},{type:a,value:eb},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ec},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:ed}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ee},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bi},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bH}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cr},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ef},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"250"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'Count of Cells in state 0'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:cs}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'Histogram Showing Termite Count by number of cells in state 0'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"\u003Cmatplotlib.text.Text at 0x116dee10\u003E\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_20_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cg}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"(31202, 21)\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"Now we can prepare a DataFrame that we will feed in to the clustering model. We will take only the pixel counts and the total number of steps taken."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"X "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:dS},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:dO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bl}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aB}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ch}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ci}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bk}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:eg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"columns\n"}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Index([u'0', u'1', u'10', u'11', u'12', u'13', u'14', u'15', u'2', u'3', u'4',\n       u'5', u'6', u'7', u'8', u'9', u'steps_taken'],\n      dtype='object')\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"Most of the termites completed all 100000 steps within the grid boundries."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"count"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"29955\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"Here'a a histogram of the steps taken by ants that took less than 100000 steps."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:dk}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cr},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'Histogram of steps_taken for termites that stayed in bounds'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:dR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:cs}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"\u003Cmatplotlib.text.Text at 0x18aa3a58\u003E\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_28_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"Here's another look at the distribution of cells in state 3 over all termites:"}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:ea},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'3'"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#other intereting states: 1, 7, 11, 15"}]},{type:a,value:eb},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ec},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:ed}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#plt.figure(figsize=(12,8))"}]},{type:a,value:bi},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bH}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cr},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ef},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bs}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'Count of Cells in state 3'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'Count (termites)'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'Histogram Showing Termite Count by number of cells in state 3'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"\u003Cmatplotlib.text.Text at 0x15ba6630\u003E\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_30_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cg}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"(31202, 17)\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"To cluster the different termites, we can use an unsupervised learning method called clustering. It is \"unsupervised\" because I don't explicitly tell the model what types termites should be grouped together. Instead, we will tell the model "},{type:b,tag:"em",props:{},children:[{type:a,value:"how many different clusters there are."}]},{type:a,value:" Of course, I really don't know how many clusters there should be. I do know from looking at the results that there seem to be many different types of behavior, patterns, sizes and other characteristics. We significantly reduce the complexity of clustering task by training the model on the count of pixels by what state the are in. I'm sure that the model won't be able to pick up on all of the nuances that humans can detect by looking at the images, but I have a feeling that it should be able to do a fairly good job. After we take a look at the individual clusters, we can try to find an optimal number of clusters by minimizing the total number of outliers of all the clusters. Here's "},{type:b,tag:ah,props:{href:"http:\u002F\u002Fpapers.nips.cc\u002Fpaper\u002F5306-on-integrated-clustering-and-outlier-detection.pdf",rel:[aE,aF,aG],target:aH},children:[{type:a,value:"an interesting paper"}]},{type:a,value:" on integrated clustering and outlier detection."}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"Here's how we set up the clustering model. For the numebr of clusters, let's start with 75."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"k_means "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" cluster"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"KMeans"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"n_clusters"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"75"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:eh},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"k_means"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ei},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:di},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ej}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,\n    n_clusters=75, n_init=10, n_jobs=1, precompute_distances='auto',\n    random_state=1, tol=0.0001, verbose=0)\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"Then we add the cluster number to each termite:"}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'clusters'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" k_means"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"labels_\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"Here's the breakdown of clusters by number of termites in each cluster:"}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"plt"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ee},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"bar"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'Cluster Number'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:cs}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'Termite count by cluster'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"\u003Cmatplotlib.text.Text at 0x15c4c358\u003E\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_38_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"And here is a list of the data shown above:"}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:cm},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bd},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ek}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"' || cluster_num: '"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'count: '"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:dy},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'  '"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:" || cluster_num: 16 count: 3293   || cluster_num: 71 count: 3036   || cluster_num: 46 count: 2993   || cluster_num: 0 count: 2752   || cluster_num: 23 count: 2667   || cluster_num: 52 count: 2540   || cluster_num: 50 count: 2185   || cluster_num: 5 count: 1412   || cluster_num: 19 count: 987   || cluster_num: 45 count: 816   || cluster_num: 44 count: 791   || cluster_num: 54 count: 686   || cluster_num: 42 count: 625   || cluster_num: 64 count: 603   || cluster_num: 21 count: 534   || cluster_num: 37 count: 518   || cluster_num: 38 count: 345   || cluster_num: 73 count: 315   || cluster_num: 57 count: 314   || cluster_num: 4 count: 302   || cluster_num: 22 count: 291   || cluster_num: 70 count: 285   || cluster_num: 8 count: 225   || cluster_num: 2 count: 224   || cluster_num: 9 count: 218   || cluster_num: 26 count: 182   || cluster_num: 49 count: 178   || cluster_num: 65 count: 138   || cluster_num: 29 count: 137   || cluster_num: 63 count: 123   || cluster_num: 25 count: 122   || cluster_num: 33 count: 105   || cluster_num: 1 count: 74   || cluster_num: 66 count: 71   || cluster_num: 27 count: 70   || cluster_num: 62 count: 66   || cluster_num: 69 count: 58   || cluster_num: 35 count: 56   || cluster_num: 11 count: 55   || cluster_num: 68 count: 54   || cluster_num: 14 count: 51   || cluster_num: 32 count: 49   || cluster_num: 30 count: 45   || cluster_num: 55 count: 38   || cluster_num: 6 count: 35   || cluster_num: 13 count: 34   || cluster_num: 43 count: 30   || cluster_num: 60 count: 30   || cluster_num: 58 count: 30   || cluster_num: 24 count: 29   || cluster_num: 39 count: 26   || cluster_num: 51 count: 25   || cluster_num: 3 count: 24   || cluster_num: 28 count: 24   || cluster_num: 15 count: 23   || cluster_num: 72 count: 23   || cluster_num: 17 count: 22   || cluster_num: 10 count: 22   || cluster_num: 34 count: 21   || cluster_num: 74 count: 20   || cluster_num: 36 count: 20   || cluster_num: 61 count: 19   || cluster_num: 31 count: 17   || cluster_num: 20 count: 13   || cluster_num: 18 count: 12   || cluster_num: 67 count: 12   || cluster_num: 12 count: 11   || cluster_num: 47 count: 11   || cluster_num: 59 count: 10   || cluster_num: 53 count: 8   || cluster_num: 7 count: 6   || cluster_num: 41 count: 6   || cluster_num: 40 count: 6   || cluster_num: 48 count: 3   || cluster_num: 56 count: 1\n"}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"cluster_dict "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bD}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:bd},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:cm},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bd},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ek}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bE}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"Now let's have a look at some of the termite clusters. We can use matplotlib and PIL to display multiple images using subplots."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#variables to manage the arrangement and spacing of cluster images"}]},{type:a,value:"\ntotal "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:a,value:"\nrows "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:a,value:"\nim_length "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#set variables for cluster images based on cluster size"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aa}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:"set_spacing"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ag}]},{type:a,value:" total\n    "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ag}]},{type:a,value:" rows\n    "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ag}]},{type:a,value:" im_length\n    "},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#columns = 6"}]},{type:a,value:"\n    total "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n    extras "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:ai}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:an}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:" extras "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bH}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:"\n        total "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:az}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:an}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:al}]},{type:a,value:" extras"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n    rows "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" total"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aJ}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n    im_length "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" rows"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:dY}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:aJ}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aB}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#use matplotlib to show images loaded with PIL"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aa}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ct},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"  files_bool"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:cu},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ej}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:cv},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:cw},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:el},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:em},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:en},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:eo}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ck},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ep},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:eq},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:er}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:es},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:cw},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:aX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:bK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"index\n    "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:Z}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:eq},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:bH}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:er}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:es},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:cw},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:el},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:em},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:en},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:a,value:bK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:eo}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:et},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:bK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"samples"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ep},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n    set_spacing"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:eu},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n    plt"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"figsize "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"im_length"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n    os"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bh},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bg},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:dx}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:V}]},{type:a,value:" num"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:W}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:bA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:eu},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:"\n        img "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" PIL"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"Image"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:"open"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"subplot"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"rows"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bQ},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"split"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'.'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"axis"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'off'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"imshow"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:bC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'Cluster #'"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ev},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"' -- Cluster Total: '"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:Y}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:et},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ev},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #16 -- Cluster Total: 3293\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_44_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ew}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:ex}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_45_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ey}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:ez}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_46_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:eg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #18 -- Cluster Total: 12\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_47_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #4 -- Cluster Total: 302\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_48_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #5 -- Cluster Total: 1412\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_49_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #6 -- Cluster Total: 35\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_50_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aB}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #9 -- Cluster Total: 218\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_51_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #12 -- Cluster Total: 11\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_52_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"The next four cluster samples are the largest clusters:"}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:cx}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:cy}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_54_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:cx}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:cy}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_55_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #0 -- Cluster Total: 2752\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_56_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:cx}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bk}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:cy}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_57_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"63"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #63 -- Cluster Total: 123\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_58_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:dZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #60 -- Cluster Total: 30\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_59_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"59"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #59 -- Cluster Total: 10\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_60_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"57"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #57 -- Cluster Total: 314\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_61_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"56"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #56 -- Cluster Total: 1\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_62_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:d_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #55 -- Cluster Total: 38\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_63_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"54"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #54 -- Cluster Total: 686\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_64_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"53"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #53 -- Cluster Total: 8\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_65_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"52"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #52 -- Cluster Total: 2540\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_66_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ey}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:ez}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_67_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:c_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #50 -- Cluster Total: 2185\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_68_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"49"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #49 -- Cluster Total: 178\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_69_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:dX}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #48 -- Cluster Total: 3\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_70_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:d$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #47 -- Cluster Total: 11\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_71_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ew}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:ex}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_72_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:cn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #45 -- Cluster Total: 816\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_73_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bP}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #44 -- Cluster Total: 791\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_74_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"43"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #43 -- Cluster Total: 30\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_75_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"42"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #42 -- Cluster Total: 625\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_76_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:dU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #41 -- Cluster Total: 6\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_77_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:cZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #40 -- Cluster Total: 6\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_78_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"39"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #39 -- Cluster Total: 26\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_79_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"38"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Cluster #38 -- Cluster Total: 345\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_80_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:cz}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_81_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"The vast majority of termites seem to form nondescript blobs after 100000 steps. There are perhaps many thousands of termites that didn't yet reach a . Setting the clusters parameter to 75 is probably too high. Many of the groups have similar behaviour. There were several cluster groups that formed 'highways'. It may make more sense to filter out these termites and cluster termites that didn't form highways."}]},{type:a,value:f},{type:b,tag:cb,props:{id:"outlier-detection"},children:[{type:b,tag:ah,props:{href:"#outlier-detection",ariaHidden:cc,tabIndex:cd},children:[{type:b,tag:c,props:{className:[ce,cf]},children:[]}]},{type:a,value:"Outlier Detection"}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"It could also be interesting to see how many outliers are present in each cluster for various values of k in the k-means algorithm. This may help us choose a more fitting number of clusters by which the termites can be grouped. here's how we could do that:"}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ax}]},{type:a,value:" sklearn"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"ensemble "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:P}]},{type:a,value:" IsolationForest\n"}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:eA},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:aX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cl},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"#16"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:eA},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:aX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cl},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"clf "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" IsolationForest"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"max_samples"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bs}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:eh},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:"rng"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\nclf"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ei},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n\ny_pred_train "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" clf"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"predict"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:Q}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"y_pred_train"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"mean"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"0.79922779922779918\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"The following values gives us the average of the predicted values (1 for inlier, -1 for outlier), so this value doesn't correspond to a percentage accuracy. The accuracy is about 89% (the model determined that 89% of termites in cluster 37 are inliers and the remaining 11% are outliers."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:aY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"'anom'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:" y_pred_train\n"}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:aY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:" 1    466\n-1     52\nName: anom, dtype: int64\n"}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"Let's compare some of the inliers with the outliers:"}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"files_normal "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:eB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cA},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:eC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ct},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:cp}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:cv},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:cu},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:"files_normal"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:cz}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_92_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,x]},children:[{type:b,tag:q,props:{},children:[{type:a,value:"files_abnormal "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:eB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:cA},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:eC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ct},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:cp}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:cv},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,U]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:cu},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:n}]},{type:a,value:"files_abnormal"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,D]},children:[{type:b,tag:q,props:{},children:[{type:a,value:cz}]}]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:b,tag:H,props:{alt:I,src:"\u002Fstatic\u002Fants_files\u002Fants_93_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"This sample of outliers seems to have slightly different characteristics compared with the inlier sample. This can be seen in the patches of solid colors (pink, purple, teal, grey)."}]},{type:a,value:f},{type:b,tag:cb,props:{id:"conclusion"},children:[{type:b,tag:ah,props:{href:"#conclusion",ariaHidden:cc,tabIndex:cd},children:[{type:b,tag:c,props:{className:[ce,cf]},children:[]}]},{type:a,value:"Conclusion"}]},{type:a,value:f},{type:b,tag:y,props:{},children:[{type:a,value:"Using k-means and Isolation Forests with this set of over 30,000 termites offers a quick and easy way to sort out major trends that these deterministic systems display. As you can see in the cluster samples above, the classification is far from perfect. Some near-identical termites are in different clusters. It would be interesting to tweak some aspects of this experiment in the future:"}]},{type:a,value:f},{type:b,tag:"ul",props:{},children:[{type:a,value:f},{type:b,tag:bp,props:{},children:[{type:a,value:"Larger number of states (\u003E16)"}]},{type:a,value:f},{type:b,tag:bp,props:{},children:[{type:a,value:"More steps (\u003E100000) \u002F bigger grid"}]},{type:a,value:f},{type:b,tag:bp,props:{},children:[{type:a,value:"Random \"noise\" on the grid at step 0"}]},{type:a,value:f},{type:b,tag:bp,props:{},children:[{type:a,value:"Variation on the rules"}]},{type:a,value:f},{type:b,tag:bp,props:{},children:[{type:a,value:"Segmenting 'highway' termites before clustering"}]},{type:a,value:f}]}]},dir:"\u002F2017\u002F04\u002F02",path:"\u002F2017\u002F04\u002F02\u002Flangton-ant-notebook.html",extension:".md",createdAt:eD,updatedAt:eD,raw:"\n![png](\u002Fstatic\u002FLLRRRLRRRRR.png)\n\nThis is an old project that I would like to refactor. I'm copying the contents of [this Jupyter notebook](https:\u002F\u002Fgithub.com\u002Fbriancaffey\u002Fcellular-automata\u002Fblob\u002Fmaster\u002Fants.ipynb) into this article with the `jupyter nbconvert ants.ipynb --to markdown`.\n\nThis notebook explores a type of Turing Machine known as [termites](https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FTurmite). The first part is a script I wrote a few years ago when I was first learning Python. If you are new to learning Python, I suggest you give it a try before reading the script; there's a lot you will learn about flow control and data structures. My script is far from perfect and every time I come back to it there is an idiom I can add and areas that can be refactored and cleaned up. It generates images of 2-dimensional n-state termites on an $a$ x $b$ rectangular grid, or it can generate multiple images (frames) of a single termite as it grows to make a video. Here's an example of a termite animatino that I made using the script below:\n\n\u003Ciframe width=\"100%\" height=\"400\" src=\"https:\u002F\u002Fwww.youtube-nocookie.com\u002Fembed\u002FDu2DorTLAo4?rel=0\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\nThe type of termite explored here is a modified version of a type of cellular automata known as [Langton's Ant](https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FLangton%27s_ant). Langton's Ant has a simple ruleset: an ant is placed on a 2-dimensional grid of 2-state cells (black or white) with a directional orientation. If the ant is on a black cell at $t=n$, the ant enters the cell on the immediate left at $t=n+1$ and the state of the cell it exits changes to white. If the state of the cell that the ant enters is white, the ant enters the cell immediately to the right and the cell it exits turns black. Around 11,000 steps, the ant enters a 'highway' which results in a repeated motion that moves the ant continually in one direction.\n\nInstead of black and white cells, we can define $n$ number of states (colors) and assign any combination of $n$ instructions (eg. LRLLLRLLLRL). The script below generates generates an arbitrary number of `ants`. Each number in `range(ants)` is converted to binary and then 1s and 0s of the corresponding binary number represent the left and right turns for each individual ant. For example: `bin(23)` corresponds to a 5-state ant with the following rules: RLRRR. This method avoids generating isotropes (RLRRR is the same ant as LRLLL).\n\nIf `record` is set to `True`, one frame will be captured every `frame_interval` number of steps. These images can be converted into video easily with open-source programs like [Blender](https:\u002F\u002Fwww.blender.org\u002F).\n\nThe last part of the notebook attempts to use new methods from the latest version of scikit-learn ([0.18.1](http:\u002F\u002Fscikit-learn.org\u002Fstable\u002Fwhats_new.html)) to cluster ants by their behavior: k-means (for clustering) and Isolation Forests (for detecting outliers).\n\n```python\nimport PIL\nfrom PIL import Image\nimport random\nimport os\nimport sys\nimport pandas as pd\nimport numpy as np\nimport scipy\nimport matplotlib.pyplot as plt\nfrom __future__ import print_function\nfrom sklearn import cluster\nimport seaborn as sns\n%matplotlib inline\n```\n\n```python\n#this script generates an image (or a series of images) for n-state 2D Langton's Ant cellular automaton.\n\n#SETTINGS\n\n#number of ants to run\nants = 65536\n#ants = 100\n#set record to True to record frames once every frame_interval steps\nrecord = False\nframe_interval = 5000\n\n#Boolean for recording final image\nrecord_final_image = False\n\n#set scale to scale the resulting images in save_image(i) function\nscale = 1\n\n#set the length and width of the square image canvas\nwidth = int(200)\nlength = int(200)\n\n#initialize ant in the center of the grid\n#grid contains length_width**2 cells\nant_pos = int((length*width)\u002F2) + int(width\u002F2)\n\n#boolean to check if the ant touches the border (out of bounds)\noob = False\n\n#number of steps that the ant will take on each walk\niterations = 100000\n\n#for naming the image file below\nnumber = str(iterations)\n\n#set the direction of the ant's first step: 1 --\u003E Right; -1 --\u003E Left. Eliminates mirror images (isotropes) from dataset\ndirection = 1\n\n#Ininitialize a blank square image\nim1 = Image.new('RGBA', (width,length),'white')\n\n#color selection\nwhite = (255,255,255,255)\nred = (255,0,0,255)\norange = (255,128,0,255)\nyellow = (255,255,0,255)\nyellow_green = (128,255,0,255)\ngreen = (0,255,0,255)\nteal = (0,255,255,255)\nlight_blue = (0,128,255,255)\nblue = (0,0,255,255)\npurple = (127,0,255,255)\nblack = (0,0,0,255)\ngrey = (150,150,150,255)\nother = (40,100,50,255)\nbrown = (130,90,44,255)\npink = (244,114,208,255)\nmauve = (118,96,138,255)\nmagenta = (216,0,115,255)\n\ncolor_choices = [red, orange, yellow, light_blue, yellow_green, blue, purple, black, grey, green, teal, light_blue, other, brown, pink, mauve, magenta]\n\n#convert an integer to binary and then convert\ndef num_to_string(num):\n    binary = bin(num)\n    moves = \"\"\n    for x in str(binary)[2:]:\n        if x == '1':\n            moves += \"R\"\n        else:\n            moves += \"L\"\n    return moves\n\n#moves list includes all 16 length moves\n#moves_list = [num_to_string(ant) for ant in range(32768,65536)]\n\n#defines the list of strings that is used for the main loop bellow\nmoves_list = [num_to_string(ant) for ant in range(ants)]\n\n#a list of the dictionaries to by passed into the pandas dataframe for later analysis\ndf_row_list = []\n\n#dataframe object for later analysis\ndf = pd.DataFrame() #index=[0]\n\n#functions for moving the postition of the ant right, left, up or down\ndef move_right():\n    global ant_pos\n    #move ant_pos one pixel to the right\n    ant_pos += 1\n    return ant_pos\ndef move_left():\n    global ant_pos\n    #move ant_pos one pixel to the left\n    ant_pos -= 1\n    return ant_pos\ndef move_up():\n    global ant_pos\n    #move ant_pos one pixel up\n    ant_pos += width\n    return ant_pos\ndef move_down():\n    global ant_pos\n    #move ant_pos one pixel down\n    ant_pos -= width\n    return ant_pos\n\ndef move(color,d):\n    global direction\n    while True:\n        #this part is a little confusing and may need to be rewritten\n        #it uses the current direction of the ant to determine the appropriate direction for the next turn\n        #breaks are used\n        if pix_list[ant_pos][2] == color and direction == width*d:\n            #set the color to the next color in the list, or loop back to the beginning of the list if the end has been reached\n            pix_list[ant_pos][2] = (color + 1) % len(pixel_colors)\n            #save the current postion of the ant\n            init = ant_pos\n            #move the ant\n            move_right()\n            #save the updated position of the ant\n            end = ant_pos\n            #calculate the new direction of the ant by taking the difference between end and init\n            direction = end - init\n            break\n\n        #same idea as above\n        elif pix_list[ant_pos][2] == color and direction == -1*width*d:\n            pix_list[ant_pos][2] = (color + 1) % len(pixel_colors)\n            init = ant_pos\n            move_left()\n            end = ant_pos\n            direction = end - init\n            break\n        #same idea as above\n        elif pix_list[ant_pos][2] == color and direction == 1*d:\n            pix_list[ant_pos][2] = (color + 1) % len(pixel_colors)\n            init = ant_pos\n            move_down()\n            end = ant_pos\n            direction = end - init\n            break\n        #same idea as above\n        elif pix_list[ant_pos][2] == color and direction == -1*d:\n            pix_list[ant_pos][2] = (color + 1) % len(pixel_colors)\n            init = ant_pos\n            move_up()\n            end = ant_pos\n            direction = end - init\n            break\n        break\n\n#captures series of pixels used for generating images\ndef get_pix_series():\n    global pix_series\n    pix_series = []\n    for x in range(len(pix_list)):\n        for y in range(len(pixel_colors)):\n            if pix_list[x][2] == y:\n                pixel = pixel_colors[y]\n                pix_series.append(pixel)\n\n#runs ant along the grid according to the moves (defined above) for the number of steps in iterations (defined above)\ndef run():\n    #variable the tracks the step number if the ant goes out of bounds\n    global oob\n    #converts moves string into a list of 0s and 1s; these numbers correspond to direction and are passed into the move() function\n    moves1 = [1 if x == 'R' else -1 for x in moves]\n    for step in range(iterations):\n        #exit the loop if the ant reaches the edge of the grid\n        if ant_pos \u003C width or ant_pos % width == 0:\n            oob = step\n            return\n        #loop through the moves\n        for index, direction in enumerate(moves1):\n            try:\n                #remember the ant position\n                not_moved = ant_pos\n                #try to move the ant position\n                move(index,direction)\n                #check to see if the position was moved\n                if ant_pos != not_moved:\n                    #set record to false in the settings to turn of frame recording\n                    if record == True:\n                        #records a new frame every frame_interval frame\n                        if step % frame_interval == 0:\n                            counter += 1\n                            print(\"Generating frame number \" + str(counter))\n                            get_pix_series()\n                            save_image(counter)\n                    break\n                else:\n                    continue\n            except:\n                #print(\"Out of bounds at step number \" + str(step))\n                oob = step\n                return\n\ndef save_image(i):\n    #give access to the image instantiated at the beginning of the script\n    global im1\n    #fill blank image canvas with pix_series pixel data\n    im1.putdata(pix_series)\n    #to rescale the image, set the scale variable in settings and call resize on im1\n    im1.resize((scale*im1.size[0],scale*im1.size[1])).save('%s.png' % (moves))\n\n#builds a dictionary to count pixels by color\ndef build_df_row():\n    colors_dict = {str(val): 0 for val, color in enumerate(pixel_colors)}\n    moves_dict = {'moves':moves}\n    last_step = {'last_step':oob}\n    row_dict = dict(colors_dict.items()+moves_dict.items()+last_step.items())\n    for x in pix_list:\n        pixel_color = str(x[2])\n        #print(pixel_color)\n        row_dict[pixel_color] += 1\n    return row_dict\n\n#uncomment below to overwrite moves_list\n#moves_list = ['LR', 'RRLR']\n\nfor _, moves in enumerate(moves_list):\n    oob = 0\n    dir_path = str(_)\n\n    #make a new directory for each new ant walk in walks based on the the walk number and navigate to that directory\n    if record == True:\n        #make a new directory to record frames for a give ant if record is set to true and that directory does not yet exist\n        if not os.path.isdir(dir_path):\n            os.makedirs(dir_path)\n        #otherwise just change into the directory\n        else:\n            os.chdir(dir_path)\n\n    #set ant at middle of grid\n    ant_pos = int((length*width)\u002F2) + int(width\u002F2)\n\n    #moves = len(moves)\n    pixel_colors = color_choices[:(len(moves))]\n\n    #defines an empty list of elements [x,y,0] where x amd y are the position 0 is the 0ht color in the color list (the base canvas color)\n    pix_list = []\n    for x in range(length):\n        for y in range(width):\n            a = [x,y,0]\n            pix_list.append(a)\n\n    #pix_series is a list of pixels that is passed into the put_data function to generate an image\n    pix_series = []\n\n    #counter keeps track of the frame number (if recording a series of images)\n    counter = 0\n\n    #run the ant\n    run()\n\n    #capture the final state of the grid with get_pix_series\n    get_pix_series()\n\n    #uncomment below to preview images for testing\n    #im1.putdata(pix_series)\n    #im1.resize((scale*im1.size[0],scale*im1.size[1])).show()\n\n    #build a dictionary with pixel counts\n    colors_dict = build_df_row()\n    row_df = pd.DataFrame(colors_dict, index=[0])\n    df = df.append(row_df, ignore_index=True)\n\n    if record_final_image == True:\n        os.chdir(os.path.expanduser('~\u002FDocuments\u002FCA_1\u002Fimgs\u002F'))\n        save_image(_)\n        os.chdir('..\u002F')\n\n    #summary\n    print(str(_), end=' ')\n\nos.chdir(os.path.expanduser('~\u002FDocuments\u002FCA_1\u002F'))\ndf.to_csv('ants_hist_.csv', index=False)\n```\n\n# Clustering\n\nWe now have a csv file where each row is a 16-state termite and the columns labeled 0 through 15 count the sum of pixels in each state (the different colors). With `last_step` we also track the last step reached in the event that the ant runs into the edge of the grid. This will be helpful in clustering ants that form highways in different groups from those that complete 100000 steps inside the 200 x 200 grid.\n\nFirst let's read the csv into a pandas DataFrame and look at some of the data.\n\n```python\nimport PIL\nfrom PIL import Image\nimport random\nimport os\nimport sys\nimport pandas as pd\nimport numpy as np\nimport scipy\nimport matplotlib.pyplot as plt\nfrom __future__ import print_function\nfrom sklearn import cluster\nimport seaborn as sns\n%matplotlib inline\n```\n\n```python\nos.chdir(os.path.expanduser('~\u002FDocuments\u002FCA_1\u002F'))\ndf1 = pd.read_csv('ants_hist_.csv')\n```\n\n```python\ndf1.shape\n```\n\n    (32768, 18)\n\n```python\ndf1.sample(3)\n```\n\n\u003Cdiv\u003E\n\u003Ctable border=\"1\" class=\"dataframe\"\u003E\n  \u003Cthead\u003E\n    \u003Ctr style=\"text-align: right;\"\u003E\n      \u003Cth\u003E\u003C\u002Fth\u003E\n      \u003Cth\u003E0\u003C\u002Fth\u003E\n      \u003Cth\u003E1\u003C\u002Fth\u003E\n      \u003Cth\u003E10\u003C\u002Fth\u003E\n      \u003Cth\u003E11\u003C\u002Fth\u003E\n      \u003Cth\u003E12\u003C\u002Fth\u003E\n      \u003Cth\u003E13\u003C\u002Fth\u003E\n      \u003Cth\u003E14\u003C\u002Fth\u003E\n      \u003Cth\u003E15\u003C\u002Fth\u003E\n      \u003Cth\u003E2\u003C\u002Fth\u003E\n      \u003Cth\u003E3\u003C\u002Fth\u003E\n      \u003Cth\u003E4\u003C\u002Fth\u003E\n      \u003Cth\u003E5\u003C\u002Fth\u003E\n      \u003Cth\u003E6\u003C\u002Fth\u003E\n      \u003Cth\u003E7\u003C\u002Fth\u003E\n      \u003Cth\u003E8\u003C\u002Fth\u003E\n      \u003Cth\u003E9\u003C\u002Fth\u003E\n      \u003Cth\u003Elast_step\u003C\u002Fth\u003E\n      \u003Cth\u003Emoves\u003C\u002Fth\u003E\n    \u003C\u002Ftr\u003E\n  \u003C\u002Fthead\u003E\n  \u003Ctbody\u003E\n    \u003Ctr\u003E\n      \u003Cth\u003E25892\u003C\u002Fth\u003E\n      \u003Ctd\u003E37741\u003C\u002Ftd\u003E\n      \u003Ctd\u003E212\u003C\u002Ftd\u003E\n      \u003Ctd\u003E135\u003C\u002Ftd\u003E\n      \u003Ctd\u003E148\u003C\u002Ftd\u003E\n      \u003Ctd\u003E135\u003C\u002Ftd\u003E\n      \u003Ctd\u003E152\u003C\u002Ftd\u003E\n      \u003Ctd\u003E119\u003C\u002Ftd\u003E\n      \u003Ctd\u003E115\u003C\u002Ftd\u003E\n      \u003Ctd\u003E176\u003C\u002Ftd\u003E\n      \u003Ctd\u003E168\u003C\u002Ftd\u003E\n      \u003Ctd\u003E129\u003C\u002Ftd\u003E\n      \u003Ctd\u003E182\u003C\u002Ftd\u003E\n      \u003Ctd\u003E155\u003C\u002Ftd\u003E\n      \u003Ctd\u003E130\u003C\u002Ftd\u003E\n      \u003Ctd\u003E162\u003C\u002Ftd\u003E\n      \u003Ctd\u003E141\u003C\u002Ftd\u003E\n      \u003Ctd\u003E0\u003C\u002Ftd\u003E\n      \u003Ctd\u003ERRRLLRLRLLRLLRLL\u003C\u002Ftd\u003E\n    \u003C\u002Ftr\u003E\n    \u003Ctr\u003E\n      \u003Cth\u003E27264\u003C\u002Fth\u003E\n      \u003Ctd\u003E35861\u003C\u002Ftd\u003E\n      \u003Ctd\u003E117\u003C\u002Ftd\u003E\n      \u003Ctd\u003E444\u003C\u002Ftd\u003E\n      \u003Ctd\u003E421\u003C\u002Ftd\u003E\n      \u003Ctd\u003E497\u003C\u002Ftd\u003E\n      \u003Ctd\u003E395\u003C\u002Ftd\u003E\n      \u003Ctd\u003E327\u003C\u002Ftd\u003E\n      \u003Ctd\u003E222\u003C\u002Ftd\u003E\n      \u003Ctd\u003E345\u003C\u002Ftd\u003E\n      \u003Ctd\u003E143\u003C\u002Ftd\u003E\n      \u003Ctd\u003E126\u003C\u002Ftd\u003E\n      \u003Ctd\u003E218\u003C\u002Ftd\u003E\n      \u003Ctd\u003E241\u003C\u002Ftd\u003E\n      \u003Ctd\u003E187\u003C\u002Ftd\u003E\n      \u003Ctd\u003E135\u003C\u002Ftd\u003E\n      \u003Ctd\u003E321\u003C\u002Ftd\u003E\n      \u003Ctd\u003E0\u003C\u002Ftd\u003E\n      \u003Ctd\u003ERRRLRLRLRLLLLLLL\u003C\u002Ftd\u003E\n    \u003C\u002Ftr\u003E\n    \u003Ctr\u003E\n      \u003Cth\u003E10181\u003C\u002Fth\u003E\n      \u003Ctd\u003E37202\u003C\u002Ftd\u003E\n      \u003Ctd\u003E300\u003C\u002Ftd\u003E\n      \u003Ctd\u003E177\u003C\u002Ftd\u003E\n      \u003Ctd\u003E130\u003C\u002Ftd\u003E\n      \u003Ctd\u003E150\u003C\u002Ftd\u003E\n      \u003Ctd\u003E148\u003C\u002Ftd\u003E\n      \u003Ctd\u003E124\u003C\u002Ftd\u003E\n      \u003Ctd\u003E156\u003C\u002Ftd\u003E\n      \u003Ctd\u003E191\u003C\u002Ftd\u003E\n      \u003Ctd\u003E217\u003C\u002Ftd\u003E\n      \u003Ctd\u003E234\u003C\u002Ftd\u003E\n      \u003Ctd\u003E217\u003C\u002Ftd\u003E\n      \u003Ctd\u003E162\u003C\u002Ftd\u003E\n      \u003Ctd\u003E200\u003C\u002Ftd\u003E\n      \u003Ctd\u003E222\u003C\u002Ftd\u003E\n      \u003Ctd\u003E170\u003C\u002Ftd\u003E\n      \u003Ctd\u003E0\u003C\u002Ftd\u003E\n      \u003Ctd\u003ERLRLLRRRRRLLLRLR\u003C\u002Ftd\u003E\n    \u003C\u002Ftr\u003E\n  \u003C\u002Ftbody\u003E\n\u003C\u002Ftable\u003E\n\u003C\u002Fdiv\u003E\n\nThere are 32768 unique instructions for 16-state termites `(2^16)\u002F2 = 32768`. Let's check to see how many of these are duplicates. We want to select only the state-counts and then call `.drop_duplicates` on that DataFrame.\n\n```python\ndf2 = df1.iloc[:,0:16]\n```\n\n```python\ndf2.shape[0] - df2.drop_duplicates().shape[0]\n```\n\n    1566\n\n1566 of the 16-state termites. It might be helpful to remove these termites from the DataFrame before we cluster them.\n\n```python\nunique_termites_index = df2.drop_duplicates().index\n```\n\n```python\ndf = df1.loc[unique_termites_index,:]\n```\n\n```python\ndf['steps_taken'] = [100000 if x==0 else x for x in df.last_step]\ndf['file_names'] = [x+'.png' for x in df.moves]\ndf['move_len'] = [len(x) for x in df.moves]\n```\n\n```python\ndf.head()\n```\n\n\u003Cdiv\u003E\n\u003Ctable border=\"1\" class=\"dataframe\"\u003E\n  \u003Cthead\u003E\n    \u003Ctr style=\"text-align: right;\"\u003E\n      \u003Cth\u003E\u003C\u002Fth\u003E\n      \u003Cth\u003E0\u003C\u002Fth\u003E\n      \u003Cth\u003E1\u003C\u002Fth\u003E\n      \u003Cth\u003E10\u003C\u002Fth\u003E\n      \u003Cth\u003E11\u003C\u002Fth\u003E\n      \u003Cth\u003E12\u003C\u002Fth\u003E\n      \u003Cth\u003E13\u003C\u002Fth\u003E\n      \u003Cth\u003E14\u003C\u002Fth\u003E\n      \u003Cth\u003E15\u003C\u002Fth\u003E\n      \u003Cth\u003E2\u003C\u002Fth\u003E\n      \u003Cth\u003E3\u003C\u002Fth\u003E\n      \u003Cth\u003E...\u003C\u002Fth\u003E\n      \u003Cth\u003E5\u003C\u002Fth\u003E\n      \u003Cth\u003E6\u003C\u002Fth\u003E\n      \u003Cth\u003E7\u003C\u002Fth\u003E\n      \u003Cth\u003E8\u003C\u002Fth\u003E\n      \u003Cth\u003E9\u003C\u002Fth\u003E\n      \u003Cth\u003Elast_step\u003C\u002Fth\u003E\n      \u003Cth\u003Emoves\u003C\u002Fth\u003E\n      \u003Cth\u003Esteps_taken\u003C\u002Fth\u003E\n      \u003Cth\u003Efile_names\u003C\u002Fth\u003E\n      \u003Cth\u003Emove_len\u003C\u002Fth\u003E\n    \u003C\u002Ftr\u003E\n  \u003C\u002Fthead\u003E\n  \u003Ctbody\u003E\n    \u003Ctr\u003E\n      \u003Cth\u003E0\u003C\u002Fth\u003E\n      \u003Ctd\u003E36381\u003C\u002Ftd\u003E\n      \u003Ctd\u003E584\u003C\u002Ftd\u003E\n      \u003Ctd\u003E36\u003C\u002Ftd\u003E\n      \u003Ctd\u003E32\u003C\u002Ftd\u003E\n      \u003Ctd\u003E41\u003C\u002Ftd\u003E\n      \u003Ctd\u003E85\u003C\u002Ftd\u003E\n      \u003Ctd\u003E179\u003C\u002Ftd\u003E\n      \u003Ctd\u003E174\u003C\u002Ftd\u003E\n      \u003Ctd\u003E1864\u003C\u002Ftd\u003E\n      \u003Ctd\u003E325\u003C\u002Ftd\u003E\n      \u003Ctd\u003E...\u003C\u002Ftd\u003E\n      \u003Ctd\u003E45\u003C\u002Ftd\u003E\n      \u003Ctd\u003E45\u003C\u002Ftd\u003E\n      \u003Ctd\u003E32\u003C\u002Ftd\u003E\n      \u003Ctd\u003E31\u003C\u002Ftd\u003E\n      \u003Ctd\u003E37\u003C\u002Ftd\u003E\n      \u003Ctd\u003E0\u003C\u002Ftd\u003E\n      \u003Ctd\u003ERLLLLLLLLLLLLLLL\u003C\u002Ftd\u003E\n      \u003Ctd\u003E100000\u003C\u002Ftd\u003E\n      \u003Ctd\u003ERLLLLLLLLLLLLLLL.png\u003C\u002Ftd\u003E\n      \u003Ctd\u003E16\u003C\u002Ftd\u003E\n    \u003C\u002Ftr\u003E\n    \u003Ctr\u003E\n      \u003Cth\u003E1\u003C\u002Fth\u003E\n      \u003Ctd\u003E39857\u003C\u002Ftd\u003E\n      \u003Ctd\u003E44\u003C\u002Ftd\u003E\n      \u003Ctd\u003E4\u003C\u002Ftd\u003E\n      \u003Ctd\u003E0\u003C\u002Ftd\u003E\n      \u003Ctd\u003E6\u003C\u002Ftd\u003E\n      \u003Ctd\u003E0\u003C\u002Ftd\u003E\n      \u003Ctd\u003E0\u003C\u002Ftd\u003E\n      \u003Ctd\u003E4\u003C\u002Ftd\u003E\n      \u003Ctd\u003E27\u003C\u002Ftd\u003E\n      \u003Ctd\u003E17\u003C\u002Ftd\u003E\n      \u003Ctd\u003E...\u003C\u002Ftd\u003E\n      \u003Ctd\u003E8\u003C\u002Ftd\u003E\n      \u003Ctd\u003E3\u003C\u002Ftd\u003E\n      \u003Ctd\u003E11\u003C\u002Ftd\u003E\n      \u003Ctd\u003E6\u003C\u002Ftd\u003E\n      \u003Ctd\u003E4\u003C\u002Ftd\u003E\n      \u003Ctd\u003E0\u003C\u002Ftd\u003E\n      \u003Ctd\u003ERLLLLLLLLLLLLLLR\u003C\u002Ftd\u003E\n      \u003Ctd\u003E100000\u003C\u002Ftd\u003E\n      \u003Ctd\u003ERLLLLLLLLLLLLLLR.png\u003C\u002Ftd\u003E\n      \u003Ctd\u003E16\u003C\u002Ftd\u003E\n    \u003C\u002Ftr\u003E\n    \u003Ctr\u003E\n      \u003Cth\u003E2\u003C\u002Fth\u003E\n      \u003Ctd\u003E39804\u003C\u002Ftd\u003E\n      \u003Ctd\u003E48\u003C\u002Ftd\u003E\n      \u003Ctd\u003E5\u003C\u002Ftd\u003E\n      \u003Ctd\u003E12\u003C\u002Ftd\u003E\n      \u003Ctd\u003E7\u003C\u002Ftd\u003E\n      \u003Ctd\u003E9\u003C\u002Ftd\u003E\n      \u003Ctd\u003E7\u003C\u002Ftd\u003E\n      \u003Ctd\u003E0\u003C\u002Ftd\u003E\n      \u003Ctd\u003E24\u003C\u002Ftd\u003E\n      \u003Ctd\u003E12\u003C\u002Ftd\u003E\n      \u003Ctd\u003E...\u003C\u002Ftd\u003E\n      \u003Ctd\u003E11\u003C\u002Ftd\u003E\n      \u003Ctd\u003E9\u003C\u002Ftd\u003E\n      \u003Ctd\u003E7\u003C\u002Ftd\u003E\n      \u003Ctd\u003E20\u003C\u002Ftd\u003E\n      \u003Ctd\u003E5\u003C\u002Ftd\u003E\n      \u003Ctd\u003E0\u003C\u002Ftd\u003E\n      \u003Ctd\u003ERLLLLLLLLLLLLLRL\u003C\u002Ftd\u003E\n      \u003Ctd\u003E100000\u003C\u002Ftd\u003E\n      \u003Ctd\u003ERLLLLLLLLLLLLLRL.png\u003C\u002Ftd\u003E\n      \u003Ctd\u003E16\u003C\u002Ftd\u003E\n    \u003C\u002Ftr\u003E\n    \u003Ctr\u003E\n      \u003Cth\u003E3\u003C\u002Fth\u003E\n      \u003Ctd\u003E37223\u003C\u002Ftd\u003E\n      \u003Ctd\u003E346\u003C\u002Ftd\u003E\n      \u003Ctd\u003E70\u003C\u002Ftd\u003E\n      \u003Ctd\u003E97\u003C\u002Ftd\u003E\n      \u003Ctd\u003E89\u003C\u002Ftd\u003E\n      \u003Ctd\u003E122\u003C\u002Ftd\u003E\n      \u003Ctd\u003E100\u003C\u002Ftd\u003E\n      \u003Ctd\u003E124\u003C\u002Ftd\u003E\n      \u003Ctd\u003E1150\u003C\u002Ftd\u003E\n      \u003Ctd\u003E216\u003C\u002Ftd\u003E\n      \u003Ctd\u003E...\u003C\u002Ftd\u003E\n      \u003Ctd\u003E85\u003C\u002Ftd\u003E\n      \u003Ctd\u003E83\u003C\u002Ftd\u003E\n      \u003Ctd\u003E61\u003C\u002Ftd\u003E\n      \u003Ctd\u003E60\u003C\u002Ftd\u003E\n      \u003Ctd\u003E55\u003C\u002Ftd\u003E\n      \u003Ctd\u003E0\u003C\u002Ftd\u003E\n      \u003Ctd\u003ERLLLLLLLLLLLLLRR\u003C\u002Ftd\u003E\n      \u003Ctd\u003E100000\u003C\u002Ftd\u003E\n      \u003Ctd\u003ERLLLLLLLLLLLLLRR.png\u003C\u002Ftd\u003E\n      \u003Ctd\u003E16\u003C\u002Ftd\u003E\n    \u003C\u002Ftr\u003E\n    \u003Ctr\u003E\n      \u003Cth\u003E4\u003C\u002Fth\u003E\n      \u003Ctd\u003E39678\u003C\u002Ftd\u003E\n      \u003Ctd\u003E76\u003C\u002Ftd\u003E\n      \u003Ctd\u003E22\u003C\u002Ftd\u003E\n      \u003Ctd\u003E16\u003C\u002Ftd\u003E\n      \u003Ctd\u003E17\u003C\u002Ftd\u003E\n      \u003Ctd\u003E8\u003C\u002Ftd\u003E\n      \u003Ctd\u003E1\u003C\u002Ftd\u003E\n      \u003Ctd\u003E2\u003C\u002Ftd\u003E\n      \u003Ctd\u003E47\u003C\u002Ftd\u003E\n      \u003Ctd\u003E17\u003C\u002Ftd\u003E\n      \u003Ctd\u003E...\u003C\u002Ftd\u003E\n      \u003Ctd\u003E31\u003C\u002Ftd\u003E\n      \u003Ctd\u003E14\u003C\u002Ftd\u003E\n      \u003Ctd\u003E15\u003C\u002Ftd\u003E\n      \u003Ctd\u003E26\u003C\u002Ftd\u003E\n      \u003Ctd\u003E11\u003C\u002Ftd\u003E\n      \u003Ctd\u003E0\u003C\u002Ftd\u003E\n      \u003Ctd\u003ERLLLLLLLLLLLLRLL\u003C\u002Ftd\u003E\n      \u003Ctd\u003E100000\u003C\u002Ftd\u003E\n      \u003Ctd\u003ERLLLLLLLLLLLLRLL.png\u003C\u002Ftd\u003E\n      \u003Ctd\u003E16\u003C\u002Ftd\u003E\n    \u003C\u002Ftr\u003E\n  \u003C\u002Ftbody\u003E\n\u003C\u002Ftable\u003E\n\u003Cp\u003E5 rows × 21 columns\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n```python\ndf.index = df.file_names\n```\n\nHere's a quick look at the distribution of the base canvas color (red in the images below) over all of the unique termites.\n\n```python\nx = '0'\nsns.set_style('whitegrid')\nplt.figure(figsize=(12,4))\ndf[(df[x]\u003E0)][x].hist(bins=250)\nplt.xlabel('Count of Cells in state 0')\nplt.ylabel('Count')\nplt.title('Histogram Showing Termite Count by number of cells in state 0')\n```\n\n    \u003Cmatplotlib.text.Text at 0x116dee10\u003E\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_20_1.png)\n\n```python\ndf.shape\n```\n\n    (31202, 21)\n\nNow we can prepare a DataFrame that we will feed in to the clustering model. We will take only the pixel counts and the total number of steps taken.\n\n```python\nX = df[df.move_len==16].iloc[:,[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18]]\n```\n\n```python\nX.columns\n```\n\n    Index([u'0', u'1', u'10', u'11', u'12', u'13', u'14', u'15', u'2', u'3', u'4',\n           u'5', u'6', u'7', u'8', u'9', u'steps_taken'],\n          dtype='object')\n\nMost of the termites completed all 100000 steps within the grid boundries.\n\n```python\nX[X.steps_taken==100000].steps_taken.count()\n```\n\n    29955\n\nHere'a a histogram of the steps taken by ants that took less than 100000 steps.\n\n```python\nX[X.steps_taken\u003C100000].steps_taken.hist()\nplt.title('Histogram of steps_taken for termites that stayed in bounds')\nplt.xlabel('steps_taken')\nplt.ylabel('Count')\n```\n\n    \u003Cmatplotlib.text.Text at 0x18aa3a58\u003E\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_28_1.png)\n\nHere's another look at the distribution of cells in state 3 over all termites:\n\n```python\nx = '3' #other intereting states: 1, 7, 11, 15\nsns.set_style('whitegrid')\n#plt.figure(figsize=(12,8))\ndf[(df[x]\u003E0)][x].hist(bins=100)\nplt.xlabel('Count of Cells in state 3')\nplt.ylabel('Count (termites)')\nplt.title('Histogram Showing Termite Count by number of cells in state 3')\n```\n\n    \u003Cmatplotlib.text.Text at 0x15ba6630\u003E\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_30_1.png)\n\n```python\nX.shape\n```\n\n    (31202, 17)\n\nTo cluster the different termites, we can use an unsupervised learning method called clustering. It is \"unsupervised\" because I don't explicitly tell the model what types termites should be grouped together. Instead, we will tell the model _how many different clusters there are._ Of course, I really don't know how many clusters there should be. I do know from looking at the results that there seem to be many different types of behavior, patterns, sizes and other characteristics. We significantly reduce the complexity of clustering task by training the model on the count of pixels by what state the are in. I'm sure that the model won't be able to pick up on all of the nuances that humans can detect by looking at the images, but I have a feeling that it should be able to do a fairly good job. After we take a look at the individual clusters, we can try to find an optimal number of clusters by minimizing the total number of outliers of all the clusters. Here's [an interesting paper](http:\u002F\u002Fpapers.nips.cc\u002Fpaper\u002F5306-on-integrated-clustering-and-outlier-detection.pdf) on integrated clustering and outlier detection.\n\nHere's how we set up the clustering model. For the numebr of clusters, let's start with 75.\n\n```python\nk_means = cluster.KMeans(n_clusters=75, random_state=1)\n```\n\n```python\nk_means.fit(X, y=None)\n```\n\n    KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,\n        n_clusters=75, n_init=10, n_jobs=1, precompute_distances='auto',\n        random_state=1, tol=0.0001, verbose=0)\n\nThen we add the cluster number to each termite:\n\n```python\nX['clusters'] = k_means.labels_\n```\n\nHere's the breakdown of clusters by number of termites in each cluster:\n\n```python\nplt.figure(figsize=(12,4))\nplt.bar(X.clusters.value_counts().index, X.clusters.value_counts())\nplt.xlabel('Cluster Number')\nplt.ylabel('Count')\nplt.title('Termite count by cluster')\n```\n\n    \u003Cmatplotlib.text.Text at 0x15c4c358\u003E\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_38_1.png)\n\nAnd here is a list of the data shown above:\n\n```python\nfor x, y in zip(X.clusters.value_counts().index, X.clusters.value_counts()): print(' || cluster_num: ' + str(x) , 'count: ' + str(y), end='  ')\n```\n\n     || cluster_num: 16 count: 3293   || cluster_num: 71 count: 3036   || cluster_num: 46 count: 2993   || cluster_num: 0 count: 2752   || cluster_num: 23 count: 2667   || cluster_num: 52 count: 2540   || cluster_num: 50 count: 2185   || cluster_num: 5 count: 1412   || cluster_num: 19 count: 987   || cluster_num: 45 count: 816   || cluster_num: 44 count: 791   || cluster_num: 54 count: 686   || cluster_num: 42 count: 625   || cluster_num: 64 count: 603   || cluster_num: 21 count: 534   || cluster_num: 37 count: 518   || cluster_num: 38 count: 345   || cluster_num: 73 count: 315   || cluster_num: 57 count: 314   || cluster_num: 4 count: 302   || cluster_num: 22 count: 291   || cluster_num: 70 count: 285   || cluster_num: 8 count: 225   || cluster_num: 2 count: 224   || cluster_num: 9 count: 218   || cluster_num: 26 count: 182   || cluster_num: 49 count: 178   || cluster_num: 65 count: 138   || cluster_num: 29 count: 137   || cluster_num: 63 count: 123   || cluster_num: 25 count: 122   || cluster_num: 33 count: 105   || cluster_num: 1 count: 74   || cluster_num: 66 count: 71   || cluster_num: 27 count: 70   || cluster_num: 62 count: 66   || cluster_num: 69 count: 58   || cluster_num: 35 count: 56   || cluster_num: 11 count: 55   || cluster_num: 68 count: 54   || cluster_num: 14 count: 51   || cluster_num: 32 count: 49   || cluster_num: 30 count: 45   || cluster_num: 55 count: 38   || cluster_num: 6 count: 35   || cluster_num: 13 count: 34   || cluster_num: 43 count: 30   || cluster_num: 60 count: 30   || cluster_num: 58 count: 30   || cluster_num: 24 count: 29   || cluster_num: 39 count: 26   || cluster_num: 51 count: 25   || cluster_num: 3 count: 24   || cluster_num: 28 count: 24   || cluster_num: 15 count: 23   || cluster_num: 72 count: 23   || cluster_num: 17 count: 22   || cluster_num: 10 count: 22   || cluster_num: 34 count: 21   || cluster_num: 74 count: 20   || cluster_num: 36 count: 20   || cluster_num: 61 count: 19   || cluster_num: 31 count: 17   || cluster_num: 20 count: 13   || cluster_num: 18 count: 12   || cluster_num: 67 count: 12   || cluster_num: 12 count: 11   || cluster_num: 47 count: 11   || cluster_num: 59 count: 10   || cluster_num: 53 count: 8   || cluster_num: 7 count: 6   || cluster_num: 41 count: 6   || cluster_num: 40 count: 6   || cluster_num: 48 count: 3   || cluster_num: 56 count: 1\n\n```python\ncluster_dict = {x: y for x, y in zip(X.clusters.value_counts().index, X.clusters.value_counts())}\n```\n\nNow let's have a look at some of the termite clusters. We can use matplotlib and PIL to display multiple images using subplots.\n\n```python\n#variables to manage the arrangement and spacing of cluster images\ntotal = 0\nrows = 0\nim_length = 0\n\n#set variables for cluster images based on cluster size\ndef set_spacing(files):\n    global total\n    global rows\n    global im_length\n    #columns = 6\n    total = len(files)\n    extras = len(files) % 6\n    if extras \u003E 0:\n        total += (6 - extras)\n    rows = total\u002F6.\n    im_length = rows*(20\u002F9.)\n\n#use matplotlib to show images loaded with PIL\ndef show_images(cluster_num, samples = 0,  files_bool=False, files=None):\n    if files_bool==True:\n        files1 = np.random.choice(files.index, min(files.shape[0], samples), replace=False)\n    if (samples == 0) & (files_bool==False):\n        files1 = X[X.clusters==cluster_num].index\n    if (samples \u003E 0) & (files_bool==False):\n        files1 = np.random.choice(X[X.clusters==cluster_num].index, min(cluster_dict[cluster_num],samples), replace=False)\n    set_spacing(files1)\n    plt.figure(figsize = (14,im_length))\n    os.chdir(os.path.expanduser('~\u002FDocuments\u002FCA_1\u002Fimgs\u002F'))\n    for num, x in enumerate(files1):\n        img = PIL.Image.open(x)\n        plt.subplot(rows,6,num+1)\n        plt.title(x.split('.')[0])\n        plt.axis('off')\n        plt.imshow(img)\n    print('Cluster #' + str(X.ix[x].clusters) + ' -- Cluster Total: ' + str(cluster_dict[X.ix[x].clusters]))\n```\n\n```python\nshow_images(16, samples=12)\n```\n\n    Cluster #16 -- Cluster Total: 3293\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_44_1.png)\n\n```python\nshow_images(46, samples=12)\n```\n\n    Cluster #46 -- Cluster Total: 2993\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_45_1.png)\n\n```python\nshow_images(51, samples=12)\n```\n\n    Cluster #51 -- Cluster Total: 25\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_46_1.png)\n\n```python\nshow_images(18, samples=12)\n```\n\n    Cluster #18 -- Cluster Total: 12\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_47_1.png)\n\n```python\nshow_images(4, samples=12)\n```\n\n    Cluster #4 -- Cluster Total: 302\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_48_1.png)\n\n```python\nshow_images(5, samples=12)\n```\n\n    Cluster #5 -- Cluster Total: 1412\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_49_1.png)\n\n```python\nshow_images(6, samples=12)\n```\n\n    Cluster #6 -- Cluster Total: 35\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_50_1.png)\n\n```python\nshow_images(9, samples=12)\n```\n\n    Cluster #9 -- Cluster Total: 218\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_51_1.png)\n\n```python\nshow_images(12, samples=12)\n```\n\n    Cluster #12 -- Cluster Total: 11\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_52_1.png)\n\nThe next four cluster samples are the largest clusters:\n\n```python\nshow_images(30, samples=12)\n```\n\n    Cluster #30 -- Cluster Total: 45\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_54_1.png)\n\n```python\nshow_images(30, samples=12)\n```\n\n    Cluster #30 -- Cluster Total: 45\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_55_1.png)\n\n```python\nshow_images(0, samples=12)\n```\n\n    Cluster #0 -- Cluster Total: 2752\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_56_1.png)\n\n```python\nshow_images(30, samples=15)\n```\n\n    Cluster #30 -- Cluster Total: 45\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_57_1.png)\n\n```python\nshow_images(63, samples=12)\n```\n\n    Cluster #63 -- Cluster Total: 123\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_58_1.png)\n\n```python\nshow_images(60, samples=12)\n```\n\n    Cluster #60 -- Cluster Total: 30\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_59_1.png)\n\n```python\nshow_images(59, samples=12)\n```\n\n    Cluster #59 -- Cluster Total: 10\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_60_1.png)\n\n```python\nshow_images(57, samples=12)\n```\n\n    Cluster #57 -- Cluster Total: 314\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_61_1.png)\n\n```python\nshow_images(56, samples=12)\n```\n\n    Cluster #56 -- Cluster Total: 1\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_62_1.png)\n\n```python\nshow_images(55, samples=12)\n```\n\n    Cluster #55 -- Cluster Total: 38\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_63_1.png)\n\n```python\nshow_images(54, samples=12)\n```\n\n    Cluster #54 -- Cluster Total: 686\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_64_1.png)\n\n```python\nshow_images(53, samples=12)\n```\n\n    Cluster #53 -- Cluster Total: 8\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_65_1.png)\n\n```python\nshow_images(52, samples=12)\n```\n\n    Cluster #52 -- Cluster Total: 2540\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_66_1.png)\n\n```python\nshow_images(51, samples=12)\n```\n\n    Cluster #51 -- Cluster Total: 25\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_67_1.png)\n\n```python\nshow_images(50, samples=12)\n```\n\n    Cluster #50 -- Cluster Total: 2185\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_68_1.png)\n\n```python\nshow_images(49, samples=12)\n```\n\n    Cluster #49 -- Cluster Total: 178\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_69_1.png)\n\n```python\nshow_images(48, samples=12)\n```\n\n    Cluster #48 -- Cluster Total: 3\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_70_1.png)\n\n```python\nshow_images(47, samples=12)\n```\n\n    Cluster #47 -- Cluster Total: 11\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_71_1.png)\n\n```python\nshow_images(46, samples=12)\n```\n\n    Cluster #46 -- Cluster Total: 2993\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_72_1.png)\n\n```python\nshow_images(45, samples=12)\n```\n\n    Cluster #45 -- Cluster Total: 816\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_73_1.png)\n\n```python\nshow_images(44, samples=12)\n```\n\n    Cluster #44 -- Cluster Total: 791\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_74_1.png)\n\n```python\nshow_images(43, samples=12)\n```\n\n    Cluster #43 -- Cluster Total: 30\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_75_1.png)\n\n```python\nshow_images(42, samples=12)\n```\n\n    Cluster #42 -- Cluster Total: 625\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_76_1.png)\n\n```python\nshow_images(41, samples=12)\n```\n\n    Cluster #41 -- Cluster Total: 6\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_77_1.png)\n\n```python\nshow_images(40, samples=12)\n```\n\n    Cluster #40 -- Cluster Total: 6\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_78_1.png)\n\n```python\nshow_images(39, samples=12)\n```\n\n    Cluster #39 -- Cluster Total: 26\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_79_1.png)\n\n```python\nshow_images(38, samples=12)\n```\n\n    Cluster #38 -- Cluster Total: 345\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_80_1.png)\n\n```python\nshow_images(37, samples=12)\n```\n\n    Cluster #37 -- Cluster Total: 518\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_81_1.png)\n\nThe vast majority of termites seem to form nondescript blobs after 100000 steps. There are perhaps many thousands of termites that didn't yet reach a . Setting the clusters parameter to 75 is probably too high. Many of the groups have similar behaviour. There were several cluster groups that formed 'highways'. It may make more sense to filter out these termites and cluster termites that didn't form highways.\n\n# Outlier Detection\n\nIt could also be interesting to see how many outliers are present in each cluster for various values of k in the k-means algorithm. This may help us choose a more fitting number of clusters by which the termites can be grouped. here's how we could do that:\n\n```python\nfrom sklearn.ensemble import IsolationForest\n```\n\n```python\nX_ = X.loc[X.clusters==37, :] #16\n```\n\n```python\nX_ = X.loc[X.clusters==37, :]\n```\n\n```python\nclf = IsolationForest(max_samples=100, random_state=rng)\nclf.fit(X_)\n\ny_pred_train = clf.predict(X_)\n\n```\n\n```python\ny_pred_train.mean()\n```\n\n    0.79922779922779918\n\nThe following values gives us the average of the predicted values (1 for inlier, -1 for outlier), so this value doesn't correspond to a percentage accuracy. The accuracy is about 89% (the model determined that 89% of termites in cluster 37 are inliers and the remaining 11% are outliers.\n\n```python\nX_['anom'] = y_pred_train\n```\n\n```python\nX_.anom.value_counts()\n```\n\n     1    466\n    -1     52\n    Name: anom, dtype: int64\n\nLet's compare some of the inliers with the outliers:\n\n```python\nfiles_normal = X_[X_.anom==(1)]\nshow_images(0, samples = 24, files_bool=True, files=files_normal)\n```\n\n    Cluster #37 -- Cluster Total: 518\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_92_1.png)\n\n```python\nfiles_abnormal = X_[X_.anom==(-1)]\nshow_images(0, samples = 24, files_bool=True, files=files_abnormal)\n```\n\n    Cluster #37 -- Cluster Total: 518\n\n![png](\u002Fstatic\u002Fants_files\u002Fants_93_1.png)\n\nThis sample of outliers seems to have slightly different characteristics compared with the inlier sample. This can be seen in the patches of solid colors (pink, purple, teal, grey).\n\n# Conclusion\n\nUsing k-means and Isolation Forests with this set of over 30,000 termites offers a quick and easy way to sort out major trends that these deterministic systems display. As you can see in the cluster samples above, the classification is far from perfect. Some near-identical termites are in different clusters. It would be interesting to tweak some aspects of this experiment in the future:\n\n- Larger number of states (\u003E16)\n- More steps (\u003E100000) \u002F bigger grid\n- Random \"noise\" on the grid at step 0\n- Variation on the rules\n- Segmenting 'highway' termites before clustering\n"}}],fetch:{},mutations:[]}}("text","element","span","token","punctuation","\n","operator","number","(",")","\n      "," ",",","=","td","keyword","code",".","div","nuxt-content-highlight","pre","line-numbers","comment","language-python","p","[","]","0",":","language-text","\n    ","th","string","img","png","builtin","12","show_images"," samples","255","==","import","\n\n","1","\n        ","2","boolean","for","in","X","+","if","x","\nplt","def","function"," x ","\n\n    ","clusters","str","global","a","%","*","len","-","tr","6","True","False","100000","4","16","as","return","ant_pos","\n  ","from","width","+=","moves","9","df","value_counts","nofollow","noopener","noreferrer","_blank","int","\u002F","range"," pix_list","\n            ","pixel_colors","break","index","chdir"," df","3","11","5","7","..."," X","X_","else","\n    ant_pos ","d"," color "," direction ","\n            pix_list"," y ","\n                ","last_step","path","os","\ndf","14","15","8","steps_taken","title","files","li","length","150","100"," ant_pos\n    ","and","color ","\n            init ","\n            end "," end "," init\n            ","enumerate","\n                    ","print","{","}","expanduser","37","\u003E","xlabel","ylabel","cluster_num","\n        plt","200","128","130","44","num"," pd"," ant_pos\n","#same idea as above","elif"," ant_pos\n            direction ","y","append"," ant_pos "," index","items","_","dir_path","h1","true",-1,"icon","icon-link","shape\n","10","13","135","shape","loc"," x","45","17","24","figure","hist","'Count'"," samples "," files"," files_bool","\n        files1 ","30","Cluster #30 -- Cluster Total: 45\n","Cluster #37 -- Cluster Total: 518\n","anom",true,"ants"," PIL\n"," PIL "," Image\n"," random\n"," os\n"," sys\n"," pandas "," pd\n"," numpy "," np\n"," scipy\n"," matplotlib","pyplot "," plt\n"," __future__ "," print_function\n"," sklearn "," cluster\n"," seaborn "," sns\n","matplotlib inline\n","iterations","40","50","216","115"," light_blue","num_to_string","\n            moves ","DataFrame","-="," width\n    "," ant_pos\n            "," y"," step ","\u003C"," width "," record ","\n                        ","counter","\n    im1","scale","im1","size","\n    colors_dict ","colors_dict","\n            os","\n        os","'~\u002FDocuments\u002FCA_1\u002Fimgs\u002F'"," end","'~\u002FDocuments\u002FCA_1\u002F'","'ants_hist_.csv'","df1","table",1,"dataframe","thead","text-align: right;","tbody","148","162","222","124","217"," df1","iloc"," df2","drop_duplicates","'steps_taken'","move_len","32","41","85","31","48","20","60","55","47","x ","\nsns","set_style","'whitegrid'","figsize","bins","18"," random_state","fit","None","zip"," np","random","choice","min"," replace","samples ","&","files_bool","cluster_dict","files1","ix","46","Cluster #46 -- Cluster Total: 2993\n","51","Cluster #51 -- Cluster Total: 25\n","X_ "," X_","\nshow_images","2022-06-26T17:55:59.435Z")));