__NUXT_JSONP__("/ru/2022/06/17/deploying-unstoppable-django-applications-with-terraform-aws-ecs-and-github-actions", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak){return {data:[{article:{slug:"deploying-unstoppable-django-applications-with-terraform-aws-ecs-and-github-actions",description:"This article is a deep dive into how to do fast, zero-downtime deployments for highly-scalable and cost-effective serverless Django applications using Terraform, ECS Fargate and GitHub Actions",title:"Building and deploying unstoppable Django applications with Terraform, AWS ECS and GitHub Actions",date:"2022-06-17",tags:["django","terraform",w,"aws","ecs","containers","docker"],draft:e,comments:e,toc:[{id:x,depth:t,text:y},{id:z,depth:t,text:A},{id:B,depth:t,text:C},{id:w,depth:t,text:D},{id:E,depth:t,text:F},{id:G,depth:t,text:H},{id:I,depth:t,text:J},{id:K,depth:q,text:L},{id:M,depth:q,text:N},{id:O,depth:q,text:P},{id:Q,depth:q,text:R},{id:S,depth:q,text:T},{id:U,depth:q,text:V},{id:W,depth:q,text:X},{id:Y,depth:q,text:Z},{id:_,depth:q,text:$},{id:aa,depth:q,text:ab},{id:ac,depth:t,text:ad},{id:ae,depth:q,text:af}],body:{type:"root",children:[{type:b,tag:u,props:{id:x},children:[{type:b,tag:i,props:{href:"#tldr",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:y}]},{type:a,value:c},{type:b,tag:v,props:{},children:[{type:a,value:"Following up on my last article about building ad hoc, or \"on-demand\" environments for testing, QA and demos, this article will focus on how to make Django application \"unstoppable\" with respect to production environment operations: horizontal scaling in response to traffic changes, zero-downtime application deployments, zero-downtime infrastructure updates, catching code and configuration bugs in pre-production environments, and edge cases. Similar to my last article, this will be a technical deep dive on my implementation of a sample application using Terraform, AWS ECS and GitHub Actions. I will use the 12Factor App methodology to guide the design of the application architecture. If any of this interests you, please have a read and let me know what you think."}]},{type:a,value:c},{type:b,tag:"h1",props:{id:"topics-to-cover"},children:[{type:b,tag:i,props:{href:"#topics-to-cover",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:"Topics to cover"}]},{type:a,value:c},{type:b,tag:v,props:{},children:[{type:a,value:"This article will cover production and pre-production environments. As we will see, production and pre-production environments will be absolutely identical in terms of infrastructure, but there will be some differences in configuration (mostly environment variables). I'll cover the following topics:"}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Application code"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Infrastructure code"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"CI\u002FCD pipelines"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Access patterns (application and database)"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:u,props:{id:z},children:[{type:b,tag:i,props:{href:"#infrastructure-code-terraform",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:A}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Discuss Ad Hoc environment work in my last article"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"How I build and version Terraform modules"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:p,props:{},children:[{type:a,value:ag}]},{type:a,value:" for generating "},{type:b,tag:p,props:{},children:[{type:a,value:"CHANGELOG.md"}]},{type:a,value:" files and using conventional commits"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Terraform monorepo for managing modules for multiple environments"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Publishing modules to Terraform Registry"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Creating modules for live infrastructure that consumes a reusable module and re-exposing Terraform variables + tfvars"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"GitHub Actions for Terraform modules"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:u,props:{id:B},children:[{type:b,tag:i,props:{href:"#repos",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:C}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:v,props:{},children:[{type:b,tag:p,props:{},children:[{type:a,value:ah}]}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Django application (Django Templates, DRF and GraphQL implementations of the same application)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Vue.js frontend"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"GitHub Actions for deploying to AWS"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Consumes Terraform modules"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Project documentation with VuePress"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:v,props:{},children:[{type:b,tag:p,props:{},children:[{type:a,value:"terraform-aws-django"}]}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Terraform monorepo for ad hoc and production environments"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"versioned with "},{type:b,tag:p,props:{},children:[{type:a,value:ag}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"published to Terraform Registry"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:u,props:{id:w},children:[{type:b,tag:i,props:{href:"#github-actions",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:D}]},{type:a,value:c},{type:b,tag:j,props:{className:[s]},children:[{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Terraform environment deployment"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" break backend update script into sections with "},{type:b,tag:p,props:{},children:[{type:a,value:"needs"}]}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Slack messages for deployment status"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:u,props:{id:E},children:[{type:b,tag:i,props:{href:"#aws-ecs",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:F}]},{type:a,value:c},{type:b,tag:j,props:{className:[s]},children:[{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Autoscaling policies"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" alarms for triggering autoscaling policies"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Fargate capacity provider"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:u,props:{id:G},children:[{type:b,tag:i,props:{href:"#todo",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:H}]},{type:a,value:c},{type:b,tag:j,props:{className:[s]},children:[{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" figure out what to clean up in "},{type:b,tag:p,props:{},children:[{type:a,value:ah}]},{type:a,value:c},{type:b,tag:j,props:{className:[s]},children:[{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Add Readmes to directories"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Clean up main readme"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Checklist of things to do in local development environment\n"},{type:b,tag:j,props:{className:[s]},children:[{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{checked:e,disabled:e,type:h},children:[]},{type:a,value:" Enable virtualization in Docker desktop"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{checked:e,disabled:e,type:h},children:[]},{type:a,value:" remove "},{type:b,tag:p,props:{},children:[{type:a,value:"--platform"}]},{type:a,value:" from Dockerfile "},{type:b,tag:p,props:{},children:[{type:a,value:"FROM"}]}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{checked:e,disabled:e,type:h},children:[]},{type:a,value:" Add "},{type:b,tag:p,props:{},children:[{type:a,value:"migrate"}]},{type:a,value:" service with "},{type:b,tag:p,props:{},children:[{type:a,value:"restart: \"on-failure\""}]}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{checked:e,disabled:e,type:h},children:[]},{type:a,value:" Use multi stage Dockerfile and remove Dockerfile.dev"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{checked:e,disabled:e,type:h},children:[]},{type:a,value:" Dockerfile.dev -\u003E Dockerfile"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{checked:e,disabled:e,type:h},children:[]},{type:a,value:" Run tests"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Lint code"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{checked:e,disabled:e,type:h},children:[]},{type:a,value:" View coverage report ("},{type:b,tag:p,props:{},children:[{type:a,value:"make htmlcov"}]},{type:a,value:ai}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{checked:e,disabled:e,type:h},children:[]},{type:a,value:" Reset all tags on ECR\n"},{type:b,tag:j,props:{className:[s]},children:[{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{checked:e,disabled:e,type:h},children:[]},{type:a,value:" Update job to build ECR on tags"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Figure out how to setup pipeline for FE ECR image build + push"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" create new scripts for backend update"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" create Terraform CI\u002FCD pipelines in GitHub Actions"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Check to see if S3 permissions are still causing issues for file uploads"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Refactor backend ad hoc update command to use multiple steps in GitHub Actions (break up script to different sections)"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Create management commands for backend update (pre_update, post_update)"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Create middleware for putting Django application into maintenance mode"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:u,props:{id:I},children:[{type:b,tag:i,props:{href:"#introduction",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:J}]},{type:a,value:c},{type:b,tag:v,props:{},children:[{type:a,value:"What is an \"unstoppable\" Django application?"}]},{type:a,value:c},{type:b,tag:r,props:{id:K},children:[{type:b,tag:i,props:{href:"#horizontal-scaling",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:L}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Will not fall over or become unresponsive when there is a large amount of traffic"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Scale out by the process model (12Factor principle: Concurrency - Scale out via the process model)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"How to scale Fargate Services with CloudWatch alarms and autoscaling policies"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:r,props:{id:M},children:[{type:b,tag:i,props:{href:"#zero-downtime-deployments-with-rolling-updates",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:N}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Deployment script step-by-step overview"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Backward-compatible database migrations"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Running migrations on a separate Fargate instance (not in the same container that runs the application)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"AWS CLI commands for doing rolling updates to ECS services"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Why we want to do rolling updates and not blue-green updates"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:r,props:{id:O},children:[{type:b,tag:i,props:{href:"#infrastructure-updates-with-terraform",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:P}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"How to introduce an infrastructure update that changes configuration in our Django application (environment variables, etc.)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Terraform module\u002Fconfiguration separation (network layer, database layer, application layer, etc.)"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:r,props:{id:Q},children:[{type:b,tag:i,props:{href:"#sdlc-and-teamwork",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:R}]},{type:a,value:c},{type:b,tag:v,props:{},children:[{type:a,value:"If you are working on a Django application yourself, you might have a way to rapidly build and push out changes to your application in a safe way. Would this work safely with a large number of developers?"}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Variation in developer environments (M1, Intel Mac, Windows, WSL, Linux, docker vs virtualenv)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:r,props:{id:S},children:[{type:b,tag:i,props:{href:"#avoiding-the-introduction-of-code-and-configuration-bugs",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:T}]},{type:a,value:c},{type:b,tag:v,props:{},children:[{type:a,value:"Another important consideration to make for our unstoppable Django application is how to avoid the introduction of code (and configuration) bugs."}]},{type:a,value:c},{type:b,tag:j,props:{className:[s]},children:[{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Promoting the same image artifact across multiple environments (build once, deploy many times)"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Testing the application in series of pre-production environments (QA, RC, staging, production)"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Allowing developers to test the application in an isolated environment that resembles the production environment (mention ad hoc environments)"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Automated load testing to make sure that code changes are not introducing inefficient database queries"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:r,props:{id:U},children:[{type:b,tag:i,props:{href:"#getting-permission-to-do-deployments",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:V}]},{type:a,value:c},{type:b,tag:j,props:{className:[s]},children:[{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Show how to do deployments with GitHub Actions that require permissions to push changes to production environments (or stage environments) with GitHub environments"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:r,props:{id:W},children:[{type:b,tag:i,props:{href:"#auditing-and-security",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:X}]},{type:a,value:c},{type:b,tag:j,props:{className:[s]},children:[{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Disaster recovery"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Auditing Infrastructure as Code"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Automated application vulnerability scanning as soon as a deployment artifact is created"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:r,props:{id:Y},children:[{type:b,tag:i,props:{href:"#automated-tests-linting-coverage-cyclomatic-complexity-analysis",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:Z}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"[ ]"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:r,props:{id:_},children:[{type:b,tag:i,props:{href:"#stopping-your-unstoppable-django-application",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:$}]},{type:a,value:c},{type:b,tag:j,props:{className:[s]},children:[{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Explain why you would need to do this"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" How to stop your unstoppable Django application"}]},{type:a,value:c},{type:b,tag:d,props:{className:[f]},children:[{type:b,tag:g,props:{disabled:e,type:h},children:[]},{type:a,value:" Restarting you unstoppable Django application"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:r,props:{id:aa},children:[{type:b,tag:i,props:{href:"#shutting-down-your-unstoppable-django-application",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:ab}]},{type:a,value:c},{type:b,tag:v,props:{},children:[{type:a,value:"If for whatever reason your application needs to be shut down, how do you do that?"}]},{type:a,value:c},{type:b,tag:u,props:{id:ac},children:[{type:b,tag:i,props:{href:"#other-ideas",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:ad}]},{type:a,value:c},{type:b,tag:r,props:{id:ae},children:[{type:b,tag:i,props:{href:"#the-base-layer-module-can-be-split-up-further",ariaHidden:k,tabIndex:l},children:[{type:b,tag:m,props:{className:[n,o]},children:[]}]},{type:a,value:af}]},{type:a,value:c},{type:b,tag:j,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This project uses only two modules: one for the base layer architecture and one for the application layer."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The base layer module could be split up into distinct modules that are referenced individually by "},{type:b,tag:p,props:{},children:[{type:a,value:"terraform_remote_state"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"There are other prebuilt official modules that can be used in the base layer module (such as the "},{type:b,tag:p,props:{},children:[{type:a,value:"rds"}]},{type:a,value:" module: "},{type:b,tag:i,props:{href:aj,rel:["nofollow","noopener","noreferrer"],target:"_blank"},children:[{type:a,value:aj}]},{type:a,value:ai}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c}]}]},dir:"\u002F2022\u002F06\u002F17",path:"\u002F2022\u002F06\u002F17\u002Fdeploying-unstoppable-django-applications-with-terraform-aws-ecs-and-github-actions",extension:".md",createdAt:ak,updatedAt:ak,raw:"\n## tl;dr\n\nFollowing up on my last article about building ad hoc, or \"on-demand\" environments for testing, QA and demos, this article will focus on how to make Django application \"unstoppable\" with respect to production environment operations: horizontal scaling in response to traffic changes, zero-downtime application deployments, zero-downtime infrastructure updates, catching code and configuration bugs in pre-production environments, and edge cases. Similar to my last article, this will be a technical deep dive on my implementation of a sample application using Terraform, AWS ECS and GitHub Actions. I will use the 12Factor App methodology to guide the design of the application architecture. If any of this interests you, please have a read and let me know what you think.\n\n# Topics to cover\n\nThis article will cover production and pre-production environments. As we will see, production and pre-production environments will be absolutely identical in terms of infrastructure, but there will be some differences in configuration (mostly environment variables). I'll cover the following topics:\n\n- Application code\n- Infrastructure code\n- CI\u002FCD pipelines\n- Access patterns (application and database)\n\n## Infrastructure code (Terraform)\n\n- Discuss Ad Hoc environment work in my last article\n- How I build and version Terraform modules\n- `release-please` for generating `CHANGELOG.md` files and using conventional commits\n- Terraform monorepo for managing modules for multiple environments\n- Publishing modules to Terraform Registry\n- Creating modules for live infrastructure that consumes a reusable module and re-exposing Terraform variables + tfvars\n- GitHub Actions for Terraform modules\n\n## Repos\n\n- `django-step-by-step`\n  - Django application (Django Templates, DRF and GraphQL implementations of the same application)\n  - Vue.js frontend\n  - GitHub Actions for deploying to AWS\n  - Consumes Terraform modules\n  - Project documentation with VuePress\n\n- `terraform-aws-django`\n  - Terraform monorepo for ad hoc and production environments\n  - versioned with `release-please`\n  - published to Terraform Registry\n\n## GitHub Actions\n\n- [ ] Terraform environment deployment\n- [ ] break backend update script into sections with `needs`\n- [ ] Slack messages for deployment status\n\n\n\n## AWS ECS\n\n- [ ] Autoscaling policies\n- [ ] alarms for triggering autoscaling policies\n- [ ] Fargate capacity provider\n\n## TODO\n\n- [ ] figure out what to clean up in `django-step-by-step`\n  - [ ] Add Readmes to directories\n  - [ ] Clean up main readme\n- [ ] Checklist of things to do in local development environment\n  - [x] Enable virtualization in Docker desktop\n  - [x] remove `--platform` from Dockerfile `FROM`\n  - [x] Add `migrate` service with `restart: \"on-failure\"`\n  - [x] Use multi stage Dockerfile and remove Dockerfile.dev\n  - [x] Dockerfile.dev -\u003E Dockerfile\n  - [x] Run tests\n  - [ ] Lint code\n  - [x] View coverage report (`make htmlcov`)\n- [x] Reset all tags on ECR\n  - [x] Update job to build ECR on tags\n  - [ ] Figure out how to setup pipeline for FE ECR image build + push\n- [ ] create new scripts for backend update\n- [ ] create Terraform CI\u002FCD pipelines in GitHub Actions\n- [ ] Check to see if S3 permissions are still causing issues for file uploads\n- [ ] Refactor backend ad hoc update command to use multiple steps in GitHub Actions (break up script to different sections)\n- [ ] Create management commands for backend update (pre_update, post_update)\n- [ ] Create middleware for putting Django application into maintenance mode\n\n## Introduction\n\nWhat is an \"unstoppable\" Django application?\n\n### Horizontal Scaling\n\n- Will not fall over or become unresponsive when there is a large amount of traffic\n- Scale out by the process model (12Factor principle: Concurrency - Scale out via the process model)\n- How to scale Fargate Services with CloudWatch alarms and autoscaling policies\n\n### Zero-downtime deployments with rolling updates\n\n- Deployment script step-by-step overview\n- Backward-compatible database migrations\n- Running migrations on a separate Fargate instance (not in the same container that runs the application)\n- AWS CLI commands for doing rolling updates to ECS services\n- Why we want to do rolling updates and not blue-green updates\n\n### Infrastructure updates with Terraform\n\n- How to introduce an infrastructure update that changes configuration in our Django application (environment variables, etc.)\n- Terraform module\u002Fconfiguration separation (network layer, database layer, application layer, etc.)\n\n### SDLC and Teamwork\n\nIf you are working on a Django application yourself, you might have a way to rapidly build and push out changes to your application in a safe way. Would this work safely with a large number of developers?\n\n- Variation in developer environments (M1, Intel Mac, Windows, WSL, Linux, docker vs virtualenv)\n-\n\n### Avoiding the introduction of code (and configuration) bugs\n\nAnother important consideration to make for our unstoppable Django application is how to avoid the introduction of code (and configuration) bugs.\n\n- [ ] Promoting the same image artifact across multiple environments (build once, deploy many times)\n- [ ] Testing the application in series of pre-production environments (QA, RC, staging, production)\n- [ ] Allowing developers to test the application in an isolated environment that resembles the production environment (mention ad hoc environments)\n- [ ] Automated load testing to make sure that code changes are not introducing inefficient database queries\n\n### Getting permission to do deployments\n\n- [ ] Show how to do deployments with GitHub Actions that require permissions to push changes to production environments (or stage environments) with GitHub environments\n\n### Auditing and Security\n\n- [ ] Disaster recovery\n- [ ] Auditing Infrastructure as Code\n- [ ] Automated application vulnerability scanning as soon as a deployment artifact is created\n\n### Automated tests, linting, coverage, cyclomatic complexity analysis\n\n- [ ]\n\n### Stopping your unstoppable Django application\n\n- [ ] Explain why you would need to do this\n- [ ] How to stop your unstoppable Django application\n- [ ] Restarting you unstoppable Django application\n\n### Shutting down your unstoppable Django application\n\nIf for whatever reason your application needs to be shut down, how do you do that?\n\n\n## Other ideas\n\n### The base layer module can be split up further\n\n- This project uses only two modules: one for the base layer architecture and one for the application layer.\n- The base layer module could be split up into distinct modules that are referenced individually by `terraform_remote_state`\n- There are other prebuilt official modules that can be used in the base layer module (such as the `rds` module: https:\u002F\u002Fregistry.terraform.io\u002Fmodules\u002Fterraform-aws-modules\u002Frds\u002Faws\u002Flatest)\n-\n"}}],fetch:{},mutations:[]}}("text","element","\n","li",true,"task-list-item","input","checkbox","a","ul","true",-1,"span","icon","icon-link","code",3,"h3","contains-task-list",2,"h2","p","github-actions","tldr","tl;dr","infrastructure-code-terraform","Infrastructure code (Terraform)","repos","Repos","GitHub Actions","aws-ecs","AWS ECS","todo","TODO","introduction","Introduction","horizontal-scaling","Horizontal Scaling","zero-downtime-deployments-with-rolling-updates","Zero-downtime deployments with rolling updates","infrastructure-updates-with-terraform","Infrastructure updates with Terraform","sdlc-and-teamwork","SDLC and Teamwork","avoiding-the-introduction-of-code-and-configuration-bugs","Avoiding the introduction of code (and configuration) bugs","getting-permission-to-do-deployments","Getting permission to do deployments","auditing-and-security","Auditing and Security","automated-tests-linting-coverage-cyclomatic-complexity-analysis","Automated tests, linting, coverage, cyclomatic complexity analysis","stopping-your-unstoppable-django-application","Stopping your unstoppable Django application","shutting-down-your-unstoppable-django-application","Shutting down your unstoppable Django application","other-ideas","Other ideas","the-base-layer-module-can-be-split-up-further","The base layer module can be split up further","release-please","django-step-by-step",")","https:\u002F\u002Fregistry.terraform.io\u002Fmodules\u002Fterraform-aws-modules\u002Frds\u002Faws\u002Flatest","2023-07-25T13:37:31.188Z")));