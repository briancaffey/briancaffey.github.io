[{"data":1,"prerenderedAt":16668},["ShallowReactive",2],{"/blog/tags/ai/":3},[4,3624,9190,9617,11092,13332],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":10,"date":11,"image":12,"tags":13,"draft":7,"external":20,"comments":24,"body":25,"_type":3618,"_id":3619,"_source":3620,"_file":3621,"_stem":3622,"_extension":3623},"/2025/05/27/mediation-simulator-project-for-nvidia-agent-intelligence-toolkit","27",false,"","Mediation Simulator: My submission for the NVIDIA Agent Intelligence Toolkit Hackathon","Mediation Simulator is an AI application designed to help legal students and professionals build dispute resolution skills through simulated mediation sessions","2025-05-27","/static/mediation-simulator/mediation_simulator_title_image.png",[14,15,16,17,18,19],"nvidia","ai","agents","llm","nim","mediation",[21],{"link":22,"site":23},"https://x.com/briancaffey/status/1926036369597510117","x",true,{"type":26,"children":27,"toc":3599},"root",[28,37,51,66,70,77,82,87,122,129,134,168,173,188,197,212,220,226,231,307,313,318,435,448,453,461,467,472,477,484,497,503,508,513,1961,1973,1981,1986,1994,1999,2007,2015,2020,2028,2033,2041,2046,2795,2808,2816,2821,2982,2990,2995,3003,3008,3082,3087,3095,3100,3105,3110,3505,3510,3518,3523,3528,3533,3566,3571,3577,3582,3588,3593],{"type":29,"tag":30,"props":31,"children":33},"element","h1",{"id":32},"building-mediation-simulator-for-the-nvidia-agent-intelligence-toolkit-hackathon",[34],{"type":35,"value":36},"text","Building Mediation Simulator for the NVIDIA Agent Intelligence Toolkit Hackathon!",{"type":29,"tag":38,"props":39,"children":40},"p",{},[41,43,49],{"type":35,"value":42},"I'm excited to share a project I've been building for the NVIDIA Agent Intelligence Toolkit Hackathon: ",{"type":29,"tag":44,"props":45,"children":46},"strong",{},[47],{"type":35,"value":48},"Mediation Simulator",{"type":35,"value":50},"! The NVIDIA Agent Intelligence Toolkit (or AgentIQ Toolkit, as it's often called) is a powerful open-source library designed for connecting, evaluating, and accelerating teams of AI agents. My goal? To see if I could leverage this toolkit to build AI agent teams capable of simulating the entire, complex process of a law school mediation competition.",{"type":29,"tag":38,"props":52,"children":53},{},[54,56,64],{"type":35,"value":55},"Check out my ",{"type":29,"tag":57,"props":58,"children":61},"a",{"href":22,"rel":59},[60],"nofollow",[62],{"type":35,"value":63},"ùïè Post",{"type":35,"value":65}," that introduces the project:",{"type":29,"tag":67,"props":68,"children":69},"mediation-simulator-tweet",{},[],{"type":29,"tag":71,"props":72,"children":74},"h2",{"id":73},"what-is-mediation-simulator-and-why-mediation",[75],{"type":35,"value":76},"What is Mediation Simulator? And Why Mediation?",{"type":29,"tag":38,"props":78,"children":79},{},[80],{"type":35,"value":81},"At its core, Mediation Simulator is my attempt to model the nuanced, semi-structured, three-way conversations that happen in mediation. Law school mediation tournaments are events where students practice negotiation and dispute resolution skills. This seemed like a really interesting challenge! How do you get language models to effectively navigate such a dynamic environment?",{"type":29,"tag":38,"props":83,"children":84},{},[85],{"type":35,"value":86},"Mediation competitions also present some unique data challenges that are perfect for AI:",{"type":29,"tag":88,"props":89,"children":90},"ul",{},[91,102,112],{"type":29,"tag":92,"props":93,"children":94},"li",{},[95,100],{"type":29,"tag":44,"props":96,"children":97},{},[98],{"type":35,"value":99},"Layered Information:",{"type":35,"value":101}," There are \"common facts\" known to everyone, and \"confidential facts\" privy only to one party (and sometimes shared strategically with the mediator or the other side).",{"type":29,"tag":92,"props":103,"children":104},{},[105,110],{"type":29,"tag":44,"props":106,"children":107},{},[108],{"type":35,"value":109},"Dynamic Conversations:",{"type":35,"value":111}," The main discussion involves all three parties (mediator and two disputants), but it also features \"caucuses\"‚Äîprivate, two-way conversations between the mediator and one party.",{"type":29,"tag":92,"props":113,"children":114},{},[115,120],{"type":29,"tag":44,"props":116,"children":117},{},[118],{"type":35,"value":119},"Creative Scenarios:",{"type":35,"value":121}," The cases are entirely fictional, often involving made-up companies, fictional countries, and even fictional currencies! This is a deliberate choice to help students avoid real-world biases. And guess what? AI is really good at generating fake data!",{"type":29,"tag":123,"props":124,"children":126},"h3",{"id":125},"what-i-built",[127],{"type":35,"value":128},"What I built",{"type":29,"tag":38,"props":130,"children":131},{},[132],{"type":35,"value":133},"Mediation Simulator consists of three main components:",{"type":29,"tag":135,"props":136,"children":137},"ol",{},[138,148,158],{"type":29,"tag":92,"props":139,"children":140},{},[141,146],{"type":29,"tag":44,"props":142,"children":143},{},[144],{"type":35,"value":145},"Case Generation Workflow",{"type":35,"value":147},": A CLI tool that uses LLMs to generate realistic mediation case scenarios, complete with common facts, confidential information for each party, and supporting documents. This workflow creates the foundation for all mediation simulations. The data for the case scenarios is saved in both YAML files and in my Redis database. I'll talk about why I did chose to store data in local files and on Redis later in this article.",{"type":29,"tag":92,"props":149,"children":150},{},[151,156],{"type":29,"tag":44,"props":152,"children":153},{},[154],{"type":35,"value":155},"Automated Mediation Workflow",{"type":35,"value":157},": Another CLI tool that orchestrates a full mediation session between three AI agents (mediator, requesting party, and responding party). This workflow simulates the entire mediation process, from opening statements through negotiation to conclusion, with the AI agents engaging in realistic dialogue based on their roles and the case information. A clerk agent helps to guide the converstaion, controlling who the next speaker should be based on a summary of what has already been said by different parties.",{"type":29,"tag":92,"props":159,"children":160},{},[161,166],{"type":29,"tag":44,"props":162,"children":163},{},[164],{"type":35,"value":165},"Interactive Mediation API",{"type":35,"value":167},": A REST API that allows a human user to participate in a mediation session by taking on the role of either the requesting or responding party. The API manages the session state and coordinates the interaction between the human participant and the AI mediator and opposing party. The conversation history for the mediation session is stored in Redis using a memory backend that I implemented with NVIDIA Agent Intelligence Toolkit.",{"type":29,"tag":38,"props":169,"children":170},{},[171],{"type":35,"value":172},"To make the results of these workflows easily viewable, I also built two web interfaces:",{"type":29,"tag":88,"props":174,"children":175},{},[176],{"type":29,"tag":92,"props":177,"children":178},{},[179,181,186],{"type":35,"value":180},"A ",{"type":29,"tag":44,"props":182,"children":183},{},[184],{"type":35,"value":185},"Viewer Interface",{"type":35,"value":187}," that displays the full three-party dialogue from automated mediation sessions, making it easy to review and analyze the AI agents' interactions.",{"type":29,"tag":38,"props":189,"children":190},{},[191],{"type":29,"tag":192,"props":193,"children":196},"img",{"alt":194,"src":195},"Mediation Simulator Viewer","/static/mediation-simulator/mediation_simulator_viewer.png",[],{"type":29,"tag":88,"props":198,"children":199},{},[200],{"type":29,"tag":92,"props":201,"children":202},{},[203,205,210],{"type":35,"value":204},"An ",{"type":29,"tag":44,"props":206,"children":207},{},[208],{"type":35,"value":209},"Interactive Interface",{"type":35,"value":211}," that provides a chat-like experience for human participants in the interactive mediation mode, with real-time updates and a clean, intuitive design.",{"type":29,"tag":38,"props":213,"children":214},{},[215],{"type":29,"tag":192,"props":216,"children":219},{"alt":217,"src":218},"Mediation Simulator Interactive","/static/mediation-simulator/interactive_mediation_screenshot.png",[],{"type":29,"tag":123,"props":221,"children":223},{"id":222},"the-genesis-from-idea-to-data",[224],{"type":35,"value":225},"The Genesis: From Idea to Data",{"type":29,"tag":38,"props":227,"children":228},{},[229],{"type":35,"value":230},"The first major hurdle was generating the foundational case data. Here's how that unfolded:",{"type":29,"tag":135,"props":232,"children":233},{},[234,244,254,264,297],{"type":29,"tag":92,"props":235,"children":236},{},[237,242],{"type":29,"tag":44,"props":238,"children":239},{},[240],{"type":35,"value":241},"Deep Dive Research:",{"type":35,"value":243}," I started by brainstorming with an LLM (OpenAI's o3, in this case) to get a comprehensive understanding of law school mediation competitions. I wanted to know everything: the rules, structure, participants, judging criteria and different types of cases.",{"type":29,"tag":92,"props":245,"children":246},{},[247,252],{"type":29,"tag":44,"props":248,"children":249},{},[250],{"type":35,"value":251},"Prompt Engineering for Cases:",{"type":35,"value":253}," With that knowledge, I tasked another LLM (GPT-4o) with generating prompts to be used for creating diverse and realistic (albeit fictional) mediation case scenarios.",{"type":29,"tag":92,"props":255,"children":256},{},[257,262],{"type":29,"tag":44,"props":258,"children":259},{},[260],{"type":35,"value":261},"Case Generation:",{"type":35,"value":263}," Using these prompts, I generated sets of distinct cases facts and related documents.",{"type":29,"tag":92,"props":265,"children":266},{},[267,272,274],{"type":29,"tag":44,"props":268,"children":269},{},[270],{"type":35,"value":271},"Structuring with LangGraph:",{"type":35,"value":273}," To manage the data for each case, I used LangGraph. I designed a state object to encapsulate all crucial elements:\n",{"type":29,"tag":88,"props":275,"children":276},{},[277,282,287],{"type":29,"tag":92,"props":278,"children":279},{},[280],{"type":35,"value":281},"Common facts.",{"type":29,"tag":92,"props":283,"children":284},{},[285],{"type":35,"value":286},"Confidential facts for both the requesting and responding parties.",{"type":29,"tag":92,"props":288,"children":289},{},[290,295],{"type":29,"tag":44,"props":291,"children":292},{},[293],{"type":35,"value":294},"Related Documents!",{"type":35,"value":296}," This was my own little twist. I wanted to test RAG (Retrieval Augmented Generation) integration within the agentic workflow. Could parties use tools to search for information in these documents to bolster their arguments during mediation? Ultimately I couldn't really get this to work. I'll share more on why later in this article.",{"type":29,"tag":92,"props":298,"children":299},{},[300,305],{"type":29,"tag":44,"props":301,"children":302},{},[303],{"type":35,"value":304},"Data Persistence:",{"type":35,"value":306}," With the data structured, I saved it in accessible formats: the LangGraph state was serialized to YAML, and the case details (like facts and documents) were stored in Markdown files. I also stored same LangGraph state to Redis using a simple JSON string.",{"type":29,"tag":123,"props":308,"children":310},{"id":309},"orchestrating-the-simulation",[311],{"type":35,"value":312},"Orchestrating the Simulation",{"type":29,"tag":38,"props":314,"children":315},{},[316],{"type":35,"value":317},"With the case data ready, the next step was to build out the mediation simulation itself:",{"type":29,"tag":135,"props":319,"children":320},{},[321,359,406,416],{"type":29,"tag":92,"props":322,"children":323},{},[324,329,331],{"type":29,"tag":44,"props":325,"children":326},{},[327],{"type":35,"value":328},"Defining the Flow:",{"type":35,"value":330}," I broke down the mediation process into its typical phases:\n",{"type":29,"tag":88,"props":332,"children":333},{},[334,339,344,349,354],{"type":29,"tag":92,"props":335,"children":336},{},[337],{"type":35,"value":338},"Opening Statements",{"type":29,"tag":92,"props":340,"children":341},{},[342],{"type":35,"value":343},"Information Gathering",{"type":29,"tag":92,"props":345,"children":346},{},[347],{"type":35,"value":348},"Caucuses (for each party)",{"type":29,"tag":92,"props":350,"children":351},{},[352],{"type":35,"value":353},"Negotiation",{"type":29,"tag":92,"props":355,"children":356},{},[357],{"type":35,"value":358},"Conclusion",{"type":29,"tag":92,"props":360,"children":361},{},[362,367,369],{"type":29,"tag":44,"props":363,"children":364},{},[365],{"type":35,"value":366},"Assembling the Agent Team:",{"type":35,"value":368}," I set up a LangGraph graph consisting of:\n",{"type":29,"tag":88,"props":370,"children":371},{},[372,383,395],{"type":29,"tag":92,"props":373,"children":374},{},[375,376,381],{"type":35,"value":180},{"type":29,"tag":44,"props":377,"children":378},{},[379],{"type":35,"value":380},"Mediator",{"type":35,"value":382}," agent",{"type":29,"tag":92,"props":384,"children":385},{},[386,388,393],{"type":35,"value":387},"Two ",{"type":29,"tag":44,"props":389,"children":390},{},[391],{"type":35,"value":392},"Party",{"type":35,"value":394}," agents (Requesting and Responding parties)",{"type":29,"tag":92,"props":396,"children":397},{},[398,399,404],{"type":35,"value":180},{"type":29,"tag":44,"props":400,"children":401},{},[402],{"type":35,"value":403},"Clerk",{"type":35,"value":405}," agent, whose job is to help manage the conversation flow and transition the simulation between the different phases.",{"type":29,"tag":92,"props":407,"children":408},{},[409,414],{"type":29,"tag":44,"props":410,"children":411},{},[412],{"type":35,"value":413},"Dynamic Prompting:",{"type":35,"value":415}," The prompts for the mediator and the parties (both when initiating a statement and when responding) change significantly based on the current phase of the mediation. Critically, these prompts also dynamically include a summary log of what has already been said, providing context.",{"type":29,"tag":92,"props":417,"children":418},{},[419,424,426,433],{"type":29,"tag":44,"props":420,"children":421},{},[422],{"type":35,"value":423},"Message Logging:",{"type":35,"value":425}," Each time a party speaks, I store the message using my Redis backend and also store additional metadata in the ",{"type":29,"tag":427,"props":428,"children":430},"code",{"className":429},[],[431],{"type":35,"value":432},"additional_kwargs",{"type":35,"value":434}," section of each message, such as the speaker, the current phase of mediation and a summary of the message (the summary is generated by another LLM call that just summarizes the response.)",{"type":29,"tag":38,"props":436,"children":437},{},[438,440,446],{"type":35,"value":439},"Getting to a functional mediation workflow was crucial! It allowed me to see the actual dialogue unfold and immediately highlighted areas for improvement. For instance, I realized that prompts needed to guide parties to ask one clear question at a time, directed at a specific participant, rather than posing multiple questions to several people at once. This really helps keep the simulated conversation straightforward and more realistic. I also had to instruct the LLM to use the names of the differnt parties, and I had to provide the names of the parties to the prompt. Without this instruction the LLM would give responses like this: \"Hello ",{"type":29,"tag":441,"props":442,"children":443},"span",{},[444],{"type":35,"value":445},"Requesting Party Name",{"type":35,"value":447},", thank you for sharing your opinion.\"",{"type":29,"tag":38,"props":449,"children":450},{},[451],{"type":35,"value":452},"Here's a look at the main workflow generated from the LangGraph code:",{"type":29,"tag":38,"props":454,"children":455},{},[456],{"type":29,"tag":192,"props":457,"children":460},{"alt":458,"src":459},"Mediation Simulator Workflow with LangGraph","/static/mediation-simulator/mediation_workflow.png",[],{"type":29,"tag":123,"props":462,"children":464},{"id":463},"bringing-it-to-life-the-vibe-coding-web-viewer",[465],{"type":35,"value":466},"Bringing it to Life: The \"Vibe Coding\" Web Viewer!",{"type":29,"tag":38,"props":468,"children":469},{},[470],{"type":35,"value":471},"Reading through raw Markdown files or terminal output to follow a complex, multi-turn mediation isn't ideal. I needed a better way to visualize the results! And this is where a bit of \"vibe coding\" came in incredibly handy.",{"type":29,"tag":38,"props":473,"children":474},{},[475],{"type":35,"value":476},"I prompted an LLM to generate a single HTML page using Vue.js and Tailwind CSS. My requirements were simple: list all generated mediation cases, and when a case is selected, display the full dialogue. The amazing part? I never actually looked at the generated code in detail! I was able to make incremental improvements by simply describing changes or new features I wanted, and the LLM iterated until it was almost exactly what I envisioned. This was super easy and fast! I also made a page that lists all of the different mediation sessions with cover images that I generated with the NVIDIA Flux.1 Dev NIM:",{"type":29,"tag":38,"props":478,"children":479},{},[480],{"type":29,"tag":192,"props":481,"children":483},{"alt":194,"src":482},"/static/mediation-simulator/viewer.png",[],{"type":29,"tag":38,"props":485,"children":486},{},[487,489,495],{"type":35,"value":488},"Having this simple web interface has been a game-changer for reviewing simulations. Plus, keeping it in my project repository means I can easily host it on GitHub Pages at ",{"type":29,"tag":427,"props":490,"children":492},{"className":491},[],[493],{"type":35,"value":494},"briancaffey.github.io/mediation-simulator",{"type":35,"value":496}," to share the results of my project. It's just so much better than staring at text files, and took just a few minutes to put together.",{"type":29,"tag":71,"props":498,"children":500},{"id":499},"a-deeper-look-into-the-nvidia-agent-intelligence-toolkit",[501],{"type":35,"value":502},"A deeper look into the NVIDIA Agent Intelligence Toolkit",{"type":29,"tag":38,"props":504,"children":505},{},[506],{"type":35,"value":507},"Now, I know what some developers think about LLM frameworks like LangChain/LangGraph, LlamaIndex, and CrewAI‚Äîthere's often a bit of \"framework fatigue.\" But hear me out! The NVIDIA Agent Intelligence Toolkit brings all of these Frameworks together in a manageable way and it makes it really easy to not only write an agentic program, but it also makes it really easy to read other programs written with the framework.",{"type":29,"tag":38,"props":509,"children":510},{},[511],{"type":35,"value":512},"The key to understanding the AIQ Toolkit is the config files. These are YAML files that neatly list out all of the dependencies of your agentic application. Let's take a look at the config file I made for mediation simulator. It's a long file, so I'll share it and then break down the important sections:",{"type":29,"tag":514,"props":515,"children":519},"pre",{"code":516,"language":517,"meta":8,"className":518,"style":8},"general:\n  use_uvloop: true\n  front_end:\n    _type: fastapi\n    cors:\n      allow_origins: ['*']\n      allow_methods:\n        - GET\n        - POST\n        - OPTIONS\n    endpoints:\n      - path: /case/{case_id}\n        method: GET\n        description: Gets the mediation case for the given case ID.\n        function_name: get_mediation_case\n      - path: /case/{case_id}/session/{session_id}\n        method: GET\n        description: Gets the mediation session data for the given case ID and session ID.\n        function_name: get_mediation_session\n      - path: /case/{case_id}/session/{session_id}/send\n        method: POST\n        description: Sends a message to the mediation session for the given case ID and session ID.\n        function_name: send_message_to_mediation_session\n  telemetry:\n    enabled: false\n    tracing:\n      phoenix:\n        _type: phoenix\n        endpoint: http://localhost:6006/v1/traces\n        project: default\n\nretrievers:\n  milvus_retriever:\n    _type: milvus_retriever\n    uri: \"http://localhost:19530\"\n    embedding_model: \"nv-embedqa-e5-v5\"\n    collection_name: \"aiq_case_documents\"\n    vector_field: \"embedding\"\n    search_params:\n      metric_type: \"IP\" # works best with nv-embedqa-e5-v5\n\nllms:\n  nim_llm:\n    _type: nim\n    base_url: http://192.168.5.96:1234/v1\n    model_name: qwen3-8b\n    max_tokens: 10000\n    temperature: 0.7\n  mediation_llm:\n    _type: nim\n    base_url: http://192.168.5.96:1234/v1\n    model_name: qwen3-8b\n    max_tokens: 10000\n    temperature: 0.7\n\nmemory:\n  redis_memory:\n    _type: redis_memory\n    connection_url: redis://localhost:6379/0\n\nfunctions:\n  case_document_rag:\n    _type: case_document_rag\n    retriever: milvus_retriever\n    llm_name: nim_llm\n    collection_name: \"mediation_simulator_case_documents\"\n    top_k: 5\n  case_query_agent:\n    _type: case_query_agent\n    llm_name: nim_llm\n    tool_names:\n      - case_document_rag\n    verbose: true\n    max_iterations: 5\n\n  # server route functions\n  get_mediation_case:\n    _type: server/get_mediation_case\n  get_mediation_session:\n    _type: server/get_mediation_session\n  send_message_to_mediation_session:\n    _type: mediation\n\nembedders:\n  nv-embedqa-e5-v5:\n    _type: nim\n    base_url: http://192.168.5.96:8000/v1\n    model_name: nvidia/nv-embedqa-e5-v5\n\nworkflow:\n  _type: mediation\n  llm: mediation_llm\n  data_dir: ./data\n","yaml","language-yaml shiki shiki-themes github-light github-dark monokai",[520],{"type":29,"tag":427,"props":521,"children":522},{"__ignoreMap":8},[523,540,560,573,592,605,629,642,656,669,682,695,718,735,753,771,792,808,825,842,863,879,896,913,926,944,957,970,988,1006,1024,1033,1046,1059,1076,1094,1112,1130,1148,1161,1185,1193,1206,1219,1236,1254,1272,1290,1308,1321,1337,1353,1369,1385,1401,1409,1422,1435,1452,1470,1478,1491,1504,1521,1538,1556,1573,1591,1604,1621,1637,1650,1662,1679,1696,1704,1713,1726,1743,1756,1773,1786,1803,1811,1824,1837,1853,1870,1887,1895,1908,1925,1943],{"type":29,"tag":441,"props":524,"children":527},{"class":525,"line":526},"line",1,[528,534],{"type":29,"tag":441,"props":529,"children":531},{"style":530},"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672",[532],{"type":35,"value":533},"general",{"type":29,"tag":441,"props":535,"children":537},{"style":536},"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[538],{"type":35,"value":539},":\n",{"type":29,"tag":441,"props":541,"children":543},{"class":525,"line":542},2,[544,549,554],{"type":29,"tag":441,"props":545,"children":546},{"style":530},[547],{"type":35,"value":548},"  use_uvloop",{"type":29,"tag":441,"props":550,"children":551},{"style":536},[552],{"type":35,"value":553},": ",{"type":29,"tag":441,"props":555,"children":557},{"style":556},"--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[558],{"type":35,"value":559},"true\n",{"type":29,"tag":441,"props":561,"children":563},{"class":525,"line":562},3,[564,569],{"type":29,"tag":441,"props":565,"children":566},{"style":530},[567],{"type":35,"value":568},"  front_end",{"type":29,"tag":441,"props":570,"children":571},{"style":536},[572],{"type":35,"value":539},{"type":29,"tag":441,"props":574,"children":576},{"class":525,"line":575},4,[577,582,586],{"type":29,"tag":441,"props":578,"children":579},{"style":530},[580],{"type":35,"value":581},"    _type",{"type":29,"tag":441,"props":583,"children":584},{"style":536},[585],{"type":35,"value":553},{"type":29,"tag":441,"props":587,"children":589},{"style":588},"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[590],{"type":35,"value":591},"fastapi\n",{"type":29,"tag":441,"props":593,"children":595},{"class":525,"line":594},5,[596,601],{"type":29,"tag":441,"props":597,"children":598},{"style":530},[599],{"type":35,"value":600},"    cors",{"type":29,"tag":441,"props":602,"children":603},{"style":536},[604],{"type":35,"value":539},{"type":29,"tag":441,"props":606,"children":608},{"class":525,"line":607},6,[609,614,619,624],{"type":29,"tag":441,"props":610,"children":611},{"style":530},[612],{"type":35,"value":613},"      allow_origins",{"type":29,"tag":441,"props":615,"children":616},{"style":536},[617],{"type":35,"value":618},": [",{"type":29,"tag":441,"props":620,"children":621},{"style":588},[622],{"type":35,"value":623},"'*'",{"type":29,"tag":441,"props":625,"children":626},{"style":536},[627],{"type":35,"value":628},"]\n",{"type":29,"tag":441,"props":630,"children":632},{"class":525,"line":631},7,[633,638],{"type":29,"tag":441,"props":634,"children":635},{"style":530},[636],{"type":35,"value":637},"      allow_methods",{"type":29,"tag":441,"props":639,"children":640},{"style":536},[641],{"type":35,"value":539},{"type":29,"tag":441,"props":643,"children":645},{"class":525,"line":644},8,[646,651],{"type":29,"tag":441,"props":647,"children":648},{"style":536},[649],{"type":35,"value":650},"        - ",{"type":29,"tag":441,"props":652,"children":653},{"style":588},[654],{"type":35,"value":655},"GET\n",{"type":29,"tag":441,"props":657,"children":659},{"class":525,"line":658},9,[660,664],{"type":29,"tag":441,"props":661,"children":662},{"style":536},[663],{"type":35,"value":650},{"type":29,"tag":441,"props":665,"children":666},{"style":588},[667],{"type":35,"value":668},"POST\n",{"type":29,"tag":441,"props":670,"children":672},{"class":525,"line":671},10,[673,677],{"type":29,"tag":441,"props":674,"children":675},{"style":536},[676],{"type":35,"value":650},{"type":29,"tag":441,"props":678,"children":679},{"style":588},[680],{"type":35,"value":681},"OPTIONS\n",{"type":29,"tag":441,"props":683,"children":685},{"class":525,"line":684},11,[686,691],{"type":29,"tag":441,"props":687,"children":688},{"style":530},[689],{"type":35,"value":690},"    endpoints",{"type":29,"tag":441,"props":692,"children":693},{"style":536},[694],{"type":35,"value":539},{"type":29,"tag":441,"props":696,"children":698},{"class":525,"line":697},12,[699,704,709,713],{"type":29,"tag":441,"props":700,"children":701},{"style":536},[702],{"type":35,"value":703},"      - ",{"type":29,"tag":441,"props":705,"children":706},{"style":530},[707],{"type":35,"value":708},"path",{"type":29,"tag":441,"props":710,"children":711},{"style":536},[712],{"type":35,"value":553},{"type":29,"tag":441,"props":714,"children":715},{"style":588},[716],{"type":35,"value":717},"/case/{case_id}\n",{"type":29,"tag":441,"props":719,"children":721},{"class":525,"line":720},13,[722,727,731],{"type":29,"tag":441,"props":723,"children":724},{"style":530},[725],{"type":35,"value":726},"        method",{"type":29,"tag":441,"props":728,"children":729},{"style":536},[730],{"type":35,"value":553},{"type":29,"tag":441,"props":732,"children":733},{"style":588},[734],{"type":35,"value":655},{"type":29,"tag":441,"props":736,"children":738},{"class":525,"line":737},14,[739,744,748],{"type":29,"tag":441,"props":740,"children":741},{"style":530},[742],{"type":35,"value":743},"        description",{"type":29,"tag":441,"props":745,"children":746},{"style":536},[747],{"type":35,"value":553},{"type":29,"tag":441,"props":749,"children":750},{"style":588},[751],{"type":35,"value":752},"Gets the mediation case for the given case ID.\n",{"type":29,"tag":441,"props":754,"children":756},{"class":525,"line":755},15,[757,762,766],{"type":29,"tag":441,"props":758,"children":759},{"style":530},[760],{"type":35,"value":761},"        function_name",{"type":29,"tag":441,"props":763,"children":764},{"style":536},[765],{"type":35,"value":553},{"type":29,"tag":441,"props":767,"children":768},{"style":588},[769],{"type":35,"value":770},"get_mediation_case\n",{"type":29,"tag":441,"props":772,"children":774},{"class":525,"line":773},16,[775,779,783,787],{"type":29,"tag":441,"props":776,"children":777},{"style":536},[778],{"type":35,"value":703},{"type":29,"tag":441,"props":780,"children":781},{"style":530},[782],{"type":35,"value":708},{"type":29,"tag":441,"props":784,"children":785},{"style":536},[786],{"type":35,"value":553},{"type":29,"tag":441,"props":788,"children":789},{"style":588},[790],{"type":35,"value":791},"/case/{case_id}/session/{session_id}\n",{"type":29,"tag":441,"props":793,"children":795},{"class":525,"line":794},17,[796,800,804],{"type":29,"tag":441,"props":797,"children":798},{"style":530},[799],{"type":35,"value":726},{"type":29,"tag":441,"props":801,"children":802},{"style":536},[803],{"type":35,"value":553},{"type":29,"tag":441,"props":805,"children":806},{"style":588},[807],{"type":35,"value":655},{"type":29,"tag":441,"props":809,"children":811},{"class":525,"line":810},18,[812,816,820],{"type":29,"tag":441,"props":813,"children":814},{"style":530},[815],{"type":35,"value":743},{"type":29,"tag":441,"props":817,"children":818},{"style":536},[819],{"type":35,"value":553},{"type":29,"tag":441,"props":821,"children":822},{"style":588},[823],{"type":35,"value":824},"Gets the mediation session data for the given case ID and session ID.\n",{"type":29,"tag":441,"props":826,"children":828},{"class":525,"line":827},19,[829,833,837],{"type":29,"tag":441,"props":830,"children":831},{"style":530},[832],{"type":35,"value":761},{"type":29,"tag":441,"props":834,"children":835},{"style":536},[836],{"type":35,"value":553},{"type":29,"tag":441,"props":838,"children":839},{"style":588},[840],{"type":35,"value":841},"get_mediation_session\n",{"type":29,"tag":441,"props":843,"children":845},{"class":525,"line":844},20,[846,850,854,858],{"type":29,"tag":441,"props":847,"children":848},{"style":536},[849],{"type":35,"value":703},{"type":29,"tag":441,"props":851,"children":852},{"style":530},[853],{"type":35,"value":708},{"type":29,"tag":441,"props":855,"children":856},{"style":536},[857],{"type":35,"value":553},{"type":29,"tag":441,"props":859,"children":860},{"style":588},[861],{"type":35,"value":862},"/case/{case_id}/session/{session_id}/send\n",{"type":29,"tag":441,"props":864,"children":866},{"class":525,"line":865},21,[867,871,875],{"type":29,"tag":441,"props":868,"children":869},{"style":530},[870],{"type":35,"value":726},{"type":29,"tag":441,"props":872,"children":873},{"style":536},[874],{"type":35,"value":553},{"type":29,"tag":441,"props":876,"children":877},{"style":588},[878],{"type":35,"value":668},{"type":29,"tag":441,"props":880,"children":882},{"class":525,"line":881},22,[883,887,891],{"type":29,"tag":441,"props":884,"children":885},{"style":530},[886],{"type":35,"value":743},{"type":29,"tag":441,"props":888,"children":889},{"style":536},[890],{"type":35,"value":553},{"type":29,"tag":441,"props":892,"children":893},{"style":588},[894],{"type":35,"value":895},"Sends a message to the mediation session for the given case ID and session ID.\n",{"type":29,"tag":441,"props":897,"children":899},{"class":525,"line":898},23,[900,904,908],{"type":29,"tag":441,"props":901,"children":902},{"style":530},[903],{"type":35,"value":761},{"type":29,"tag":441,"props":905,"children":906},{"style":536},[907],{"type":35,"value":553},{"type":29,"tag":441,"props":909,"children":910},{"style":588},[911],{"type":35,"value":912},"send_message_to_mediation_session\n",{"type":29,"tag":441,"props":914,"children":916},{"class":525,"line":915},24,[917,922],{"type":29,"tag":441,"props":918,"children":919},{"style":530},[920],{"type":35,"value":921},"  telemetry",{"type":29,"tag":441,"props":923,"children":924},{"style":536},[925],{"type":35,"value":539},{"type":29,"tag":441,"props":927,"children":929},{"class":525,"line":928},25,[930,935,939],{"type":29,"tag":441,"props":931,"children":932},{"style":530},[933],{"type":35,"value":934},"    enabled",{"type":29,"tag":441,"props":936,"children":937},{"style":536},[938],{"type":35,"value":553},{"type":29,"tag":441,"props":940,"children":941},{"style":556},[942],{"type":35,"value":943},"false\n",{"type":29,"tag":441,"props":945,"children":947},{"class":525,"line":946},26,[948,953],{"type":29,"tag":441,"props":949,"children":950},{"style":530},[951],{"type":35,"value":952},"    tracing",{"type":29,"tag":441,"props":954,"children":955},{"style":536},[956],{"type":35,"value":539},{"type":29,"tag":441,"props":958,"children":960},{"class":525,"line":959},27,[961,966],{"type":29,"tag":441,"props":962,"children":963},{"style":530},[964],{"type":35,"value":965},"      phoenix",{"type":29,"tag":441,"props":967,"children":968},{"style":536},[969],{"type":35,"value":539},{"type":29,"tag":441,"props":971,"children":973},{"class":525,"line":972},28,[974,979,983],{"type":29,"tag":441,"props":975,"children":976},{"style":530},[977],{"type":35,"value":978},"        _type",{"type":29,"tag":441,"props":980,"children":981},{"style":536},[982],{"type":35,"value":553},{"type":29,"tag":441,"props":984,"children":985},{"style":588},[986],{"type":35,"value":987},"phoenix\n",{"type":29,"tag":441,"props":989,"children":991},{"class":525,"line":990},29,[992,997,1001],{"type":29,"tag":441,"props":993,"children":994},{"style":530},[995],{"type":35,"value":996},"        endpoint",{"type":29,"tag":441,"props":998,"children":999},{"style":536},[1000],{"type":35,"value":553},{"type":29,"tag":441,"props":1002,"children":1003},{"style":588},[1004],{"type":35,"value":1005},"http://localhost:6006/v1/traces\n",{"type":29,"tag":441,"props":1007,"children":1009},{"class":525,"line":1008},30,[1010,1015,1019],{"type":29,"tag":441,"props":1011,"children":1012},{"style":530},[1013],{"type":35,"value":1014},"        project",{"type":29,"tag":441,"props":1016,"children":1017},{"style":536},[1018],{"type":35,"value":553},{"type":29,"tag":441,"props":1020,"children":1021},{"style":588},[1022],{"type":35,"value":1023},"default\n",{"type":29,"tag":441,"props":1025,"children":1027},{"class":525,"line":1026},31,[1028],{"type":29,"tag":441,"props":1029,"children":1030},{"emptyLinePlaceholder":24},[1031],{"type":35,"value":1032},"\n",{"type":29,"tag":441,"props":1034,"children":1036},{"class":525,"line":1035},32,[1037,1042],{"type":29,"tag":441,"props":1038,"children":1039},{"style":530},[1040],{"type":35,"value":1041},"retrievers",{"type":29,"tag":441,"props":1043,"children":1044},{"style":536},[1045],{"type":35,"value":539},{"type":29,"tag":441,"props":1047,"children":1049},{"class":525,"line":1048},33,[1050,1055],{"type":29,"tag":441,"props":1051,"children":1052},{"style":530},[1053],{"type":35,"value":1054},"  milvus_retriever",{"type":29,"tag":441,"props":1056,"children":1057},{"style":536},[1058],{"type":35,"value":539},{"type":29,"tag":441,"props":1060,"children":1062},{"class":525,"line":1061},34,[1063,1067,1071],{"type":29,"tag":441,"props":1064,"children":1065},{"style":530},[1066],{"type":35,"value":581},{"type":29,"tag":441,"props":1068,"children":1069},{"style":536},[1070],{"type":35,"value":553},{"type":29,"tag":441,"props":1072,"children":1073},{"style":588},[1074],{"type":35,"value":1075},"milvus_retriever\n",{"type":29,"tag":441,"props":1077,"children":1079},{"class":525,"line":1078},35,[1080,1085,1089],{"type":29,"tag":441,"props":1081,"children":1082},{"style":530},[1083],{"type":35,"value":1084},"    uri",{"type":29,"tag":441,"props":1086,"children":1087},{"style":536},[1088],{"type":35,"value":553},{"type":29,"tag":441,"props":1090,"children":1091},{"style":588},[1092],{"type":35,"value":1093},"\"http://localhost:19530\"\n",{"type":29,"tag":441,"props":1095,"children":1097},{"class":525,"line":1096},36,[1098,1103,1107],{"type":29,"tag":441,"props":1099,"children":1100},{"style":530},[1101],{"type":35,"value":1102},"    embedding_model",{"type":29,"tag":441,"props":1104,"children":1105},{"style":536},[1106],{"type":35,"value":553},{"type":29,"tag":441,"props":1108,"children":1109},{"style":588},[1110],{"type":35,"value":1111},"\"nv-embedqa-e5-v5\"\n",{"type":29,"tag":441,"props":1113,"children":1115},{"class":525,"line":1114},37,[1116,1121,1125],{"type":29,"tag":441,"props":1117,"children":1118},{"style":530},[1119],{"type":35,"value":1120},"    collection_name",{"type":29,"tag":441,"props":1122,"children":1123},{"style":536},[1124],{"type":35,"value":553},{"type":29,"tag":441,"props":1126,"children":1127},{"style":588},[1128],{"type":35,"value":1129},"\"aiq_case_documents\"\n",{"type":29,"tag":441,"props":1131,"children":1133},{"class":525,"line":1132},38,[1134,1139,1143],{"type":29,"tag":441,"props":1135,"children":1136},{"style":530},[1137],{"type":35,"value":1138},"    vector_field",{"type":29,"tag":441,"props":1140,"children":1141},{"style":536},[1142],{"type":35,"value":553},{"type":29,"tag":441,"props":1144,"children":1145},{"style":588},[1146],{"type":35,"value":1147},"\"embedding\"\n",{"type":29,"tag":441,"props":1149,"children":1151},{"class":525,"line":1150},39,[1152,1157],{"type":29,"tag":441,"props":1153,"children":1154},{"style":530},[1155],{"type":35,"value":1156},"    search_params",{"type":29,"tag":441,"props":1158,"children":1159},{"style":536},[1160],{"type":35,"value":539},{"type":29,"tag":441,"props":1162,"children":1164},{"class":525,"line":1163},40,[1165,1170,1174,1179],{"type":29,"tag":441,"props":1166,"children":1167},{"style":530},[1168],{"type":35,"value":1169},"      metric_type",{"type":29,"tag":441,"props":1171,"children":1172},{"style":536},[1173],{"type":35,"value":553},{"type":29,"tag":441,"props":1175,"children":1176},{"style":588},[1177],{"type":35,"value":1178},"\"IP\"",{"type":29,"tag":441,"props":1180,"children":1182},{"style":1181},"--shiki-default:#6A737D;--shiki-dark:#6A737D;--shiki-sepia:#88846F",[1183],{"type":35,"value":1184}," # works best with nv-embedqa-e5-v5\n",{"type":29,"tag":441,"props":1186,"children":1188},{"class":525,"line":1187},41,[1189],{"type":29,"tag":441,"props":1190,"children":1191},{"emptyLinePlaceholder":24},[1192],{"type":35,"value":1032},{"type":29,"tag":441,"props":1194,"children":1196},{"class":525,"line":1195},42,[1197,1202],{"type":29,"tag":441,"props":1198,"children":1199},{"style":530},[1200],{"type":35,"value":1201},"llms",{"type":29,"tag":441,"props":1203,"children":1204},{"style":536},[1205],{"type":35,"value":539},{"type":29,"tag":441,"props":1207,"children":1209},{"class":525,"line":1208},43,[1210,1215],{"type":29,"tag":441,"props":1211,"children":1212},{"style":530},[1213],{"type":35,"value":1214},"  nim_llm",{"type":29,"tag":441,"props":1216,"children":1217},{"style":536},[1218],{"type":35,"value":539},{"type":29,"tag":441,"props":1220,"children":1222},{"class":525,"line":1221},44,[1223,1227,1231],{"type":29,"tag":441,"props":1224,"children":1225},{"style":530},[1226],{"type":35,"value":581},{"type":29,"tag":441,"props":1228,"children":1229},{"style":536},[1230],{"type":35,"value":553},{"type":29,"tag":441,"props":1232,"children":1233},{"style":588},[1234],{"type":35,"value":1235},"nim\n",{"type":29,"tag":441,"props":1237,"children":1239},{"class":525,"line":1238},45,[1240,1245,1249],{"type":29,"tag":441,"props":1241,"children":1242},{"style":530},[1243],{"type":35,"value":1244},"    base_url",{"type":29,"tag":441,"props":1246,"children":1247},{"style":536},[1248],{"type":35,"value":553},{"type":29,"tag":441,"props":1250,"children":1251},{"style":588},[1252],{"type":35,"value":1253},"http://192.168.5.96:1234/v1\n",{"type":29,"tag":441,"props":1255,"children":1257},{"class":525,"line":1256},46,[1258,1263,1267],{"type":29,"tag":441,"props":1259,"children":1260},{"style":530},[1261],{"type":35,"value":1262},"    model_name",{"type":29,"tag":441,"props":1264,"children":1265},{"style":536},[1266],{"type":35,"value":553},{"type":29,"tag":441,"props":1268,"children":1269},{"style":588},[1270],{"type":35,"value":1271},"qwen3-8b\n",{"type":29,"tag":441,"props":1273,"children":1275},{"class":525,"line":1274},47,[1276,1281,1285],{"type":29,"tag":441,"props":1277,"children":1278},{"style":530},[1279],{"type":35,"value":1280},"    max_tokens",{"type":29,"tag":441,"props":1282,"children":1283},{"style":536},[1284],{"type":35,"value":553},{"type":29,"tag":441,"props":1286,"children":1287},{"style":556},[1288],{"type":35,"value":1289},"10000\n",{"type":29,"tag":441,"props":1291,"children":1293},{"class":525,"line":1292},48,[1294,1299,1303],{"type":29,"tag":441,"props":1295,"children":1296},{"style":530},[1297],{"type":35,"value":1298},"    temperature",{"type":29,"tag":441,"props":1300,"children":1301},{"style":536},[1302],{"type":35,"value":553},{"type":29,"tag":441,"props":1304,"children":1305},{"style":556},[1306],{"type":35,"value":1307},"0.7\n",{"type":29,"tag":441,"props":1309,"children":1311},{"class":525,"line":1310},49,[1312,1317],{"type":29,"tag":441,"props":1313,"children":1314},{"style":530},[1315],{"type":35,"value":1316},"  mediation_llm",{"type":29,"tag":441,"props":1318,"children":1319},{"style":536},[1320],{"type":35,"value":539},{"type":29,"tag":441,"props":1322,"children":1324},{"class":525,"line":1323},50,[1325,1329,1333],{"type":29,"tag":441,"props":1326,"children":1327},{"style":530},[1328],{"type":35,"value":581},{"type":29,"tag":441,"props":1330,"children":1331},{"style":536},[1332],{"type":35,"value":553},{"type":29,"tag":441,"props":1334,"children":1335},{"style":588},[1336],{"type":35,"value":1235},{"type":29,"tag":441,"props":1338,"children":1340},{"class":525,"line":1339},51,[1341,1345,1349],{"type":29,"tag":441,"props":1342,"children":1343},{"style":530},[1344],{"type":35,"value":1244},{"type":29,"tag":441,"props":1346,"children":1347},{"style":536},[1348],{"type":35,"value":553},{"type":29,"tag":441,"props":1350,"children":1351},{"style":588},[1352],{"type":35,"value":1253},{"type":29,"tag":441,"props":1354,"children":1356},{"class":525,"line":1355},52,[1357,1361,1365],{"type":29,"tag":441,"props":1358,"children":1359},{"style":530},[1360],{"type":35,"value":1262},{"type":29,"tag":441,"props":1362,"children":1363},{"style":536},[1364],{"type":35,"value":553},{"type":29,"tag":441,"props":1366,"children":1367},{"style":588},[1368],{"type":35,"value":1271},{"type":29,"tag":441,"props":1370,"children":1372},{"class":525,"line":1371},53,[1373,1377,1381],{"type":29,"tag":441,"props":1374,"children":1375},{"style":530},[1376],{"type":35,"value":1280},{"type":29,"tag":441,"props":1378,"children":1379},{"style":536},[1380],{"type":35,"value":553},{"type":29,"tag":441,"props":1382,"children":1383},{"style":556},[1384],{"type":35,"value":1289},{"type":29,"tag":441,"props":1386,"children":1388},{"class":525,"line":1387},54,[1389,1393,1397],{"type":29,"tag":441,"props":1390,"children":1391},{"style":530},[1392],{"type":35,"value":1298},{"type":29,"tag":441,"props":1394,"children":1395},{"style":536},[1396],{"type":35,"value":553},{"type":29,"tag":441,"props":1398,"children":1399},{"style":556},[1400],{"type":35,"value":1307},{"type":29,"tag":441,"props":1402,"children":1404},{"class":525,"line":1403},55,[1405],{"type":29,"tag":441,"props":1406,"children":1407},{"emptyLinePlaceholder":24},[1408],{"type":35,"value":1032},{"type":29,"tag":441,"props":1410,"children":1412},{"class":525,"line":1411},56,[1413,1418],{"type":29,"tag":441,"props":1414,"children":1415},{"style":530},[1416],{"type":35,"value":1417},"memory",{"type":29,"tag":441,"props":1419,"children":1420},{"style":536},[1421],{"type":35,"value":539},{"type":29,"tag":441,"props":1423,"children":1425},{"class":525,"line":1424},57,[1426,1431],{"type":29,"tag":441,"props":1427,"children":1428},{"style":530},[1429],{"type":35,"value":1430},"  redis_memory",{"type":29,"tag":441,"props":1432,"children":1433},{"style":536},[1434],{"type":35,"value":539},{"type":29,"tag":441,"props":1436,"children":1438},{"class":525,"line":1437},58,[1439,1443,1447],{"type":29,"tag":441,"props":1440,"children":1441},{"style":530},[1442],{"type":35,"value":581},{"type":29,"tag":441,"props":1444,"children":1445},{"style":536},[1446],{"type":35,"value":553},{"type":29,"tag":441,"props":1448,"children":1449},{"style":588},[1450],{"type":35,"value":1451},"redis_memory\n",{"type":29,"tag":441,"props":1453,"children":1455},{"class":525,"line":1454},59,[1456,1461,1465],{"type":29,"tag":441,"props":1457,"children":1458},{"style":530},[1459],{"type":35,"value":1460},"    connection_url",{"type":29,"tag":441,"props":1462,"children":1463},{"style":536},[1464],{"type":35,"value":553},{"type":29,"tag":441,"props":1466,"children":1467},{"style":588},[1468],{"type":35,"value":1469},"redis://localhost:6379/0\n",{"type":29,"tag":441,"props":1471,"children":1473},{"class":525,"line":1472},60,[1474],{"type":29,"tag":441,"props":1475,"children":1476},{"emptyLinePlaceholder":24},[1477],{"type":35,"value":1032},{"type":29,"tag":441,"props":1479,"children":1481},{"class":525,"line":1480},61,[1482,1487],{"type":29,"tag":441,"props":1483,"children":1484},{"style":530},[1485],{"type":35,"value":1486},"functions",{"type":29,"tag":441,"props":1488,"children":1489},{"style":536},[1490],{"type":35,"value":539},{"type":29,"tag":441,"props":1492,"children":1494},{"class":525,"line":1493},62,[1495,1500],{"type":29,"tag":441,"props":1496,"children":1497},{"style":530},[1498],{"type":35,"value":1499},"  case_document_rag",{"type":29,"tag":441,"props":1501,"children":1502},{"style":536},[1503],{"type":35,"value":539},{"type":29,"tag":441,"props":1505,"children":1507},{"class":525,"line":1506},63,[1508,1512,1516],{"type":29,"tag":441,"props":1509,"children":1510},{"style":530},[1511],{"type":35,"value":581},{"type":29,"tag":441,"props":1513,"children":1514},{"style":536},[1515],{"type":35,"value":553},{"type":29,"tag":441,"props":1517,"children":1518},{"style":588},[1519],{"type":35,"value":1520},"case_document_rag\n",{"type":29,"tag":441,"props":1522,"children":1524},{"class":525,"line":1523},64,[1525,1530,1534],{"type":29,"tag":441,"props":1526,"children":1527},{"style":530},[1528],{"type":35,"value":1529},"    retriever",{"type":29,"tag":441,"props":1531,"children":1532},{"style":536},[1533],{"type":35,"value":553},{"type":29,"tag":441,"props":1535,"children":1536},{"style":588},[1537],{"type":35,"value":1075},{"type":29,"tag":441,"props":1539,"children":1541},{"class":525,"line":1540},65,[1542,1547,1551],{"type":29,"tag":441,"props":1543,"children":1544},{"style":530},[1545],{"type":35,"value":1546},"    llm_name",{"type":29,"tag":441,"props":1548,"children":1549},{"style":536},[1550],{"type":35,"value":553},{"type":29,"tag":441,"props":1552,"children":1553},{"style":588},[1554],{"type":35,"value":1555},"nim_llm\n",{"type":29,"tag":441,"props":1557,"children":1559},{"class":525,"line":1558},66,[1560,1564,1568],{"type":29,"tag":441,"props":1561,"children":1562},{"style":530},[1563],{"type":35,"value":1120},{"type":29,"tag":441,"props":1565,"children":1566},{"style":536},[1567],{"type":35,"value":553},{"type":29,"tag":441,"props":1569,"children":1570},{"style":588},[1571],{"type":35,"value":1572},"\"mediation_simulator_case_documents\"\n",{"type":29,"tag":441,"props":1574,"children":1576},{"class":525,"line":1575},67,[1577,1582,1586],{"type":29,"tag":441,"props":1578,"children":1579},{"style":530},[1580],{"type":35,"value":1581},"    top_k",{"type":29,"tag":441,"props":1583,"children":1584},{"style":536},[1585],{"type":35,"value":553},{"type":29,"tag":441,"props":1587,"children":1588},{"style":556},[1589],{"type":35,"value":1590},"5\n",{"type":29,"tag":441,"props":1592,"children":1594},{"class":525,"line":1593},68,[1595,1600],{"type":29,"tag":441,"props":1596,"children":1597},{"style":530},[1598],{"type":35,"value":1599},"  case_query_agent",{"type":29,"tag":441,"props":1601,"children":1602},{"style":536},[1603],{"type":35,"value":539},{"type":29,"tag":441,"props":1605,"children":1607},{"class":525,"line":1606},69,[1608,1612,1616],{"type":29,"tag":441,"props":1609,"children":1610},{"style":530},[1611],{"type":35,"value":581},{"type":29,"tag":441,"props":1613,"children":1614},{"style":536},[1615],{"type":35,"value":553},{"type":29,"tag":441,"props":1617,"children":1618},{"style":588},[1619],{"type":35,"value":1620},"case_query_agent\n",{"type":29,"tag":441,"props":1622,"children":1624},{"class":525,"line":1623},70,[1625,1629,1633],{"type":29,"tag":441,"props":1626,"children":1627},{"style":530},[1628],{"type":35,"value":1546},{"type":29,"tag":441,"props":1630,"children":1631},{"style":536},[1632],{"type":35,"value":553},{"type":29,"tag":441,"props":1634,"children":1635},{"style":588},[1636],{"type":35,"value":1555},{"type":29,"tag":441,"props":1638,"children":1640},{"class":525,"line":1639},71,[1641,1646],{"type":29,"tag":441,"props":1642,"children":1643},{"style":530},[1644],{"type":35,"value":1645},"    tool_names",{"type":29,"tag":441,"props":1647,"children":1648},{"style":536},[1649],{"type":35,"value":539},{"type":29,"tag":441,"props":1651,"children":1653},{"class":525,"line":1652},72,[1654,1658],{"type":29,"tag":441,"props":1655,"children":1656},{"style":536},[1657],{"type":35,"value":703},{"type":29,"tag":441,"props":1659,"children":1660},{"style":588},[1661],{"type":35,"value":1520},{"type":29,"tag":441,"props":1663,"children":1665},{"class":525,"line":1664},73,[1666,1671,1675],{"type":29,"tag":441,"props":1667,"children":1668},{"style":530},[1669],{"type":35,"value":1670},"    verbose",{"type":29,"tag":441,"props":1672,"children":1673},{"style":536},[1674],{"type":35,"value":553},{"type":29,"tag":441,"props":1676,"children":1677},{"style":556},[1678],{"type":35,"value":559},{"type":29,"tag":441,"props":1680,"children":1682},{"class":525,"line":1681},74,[1683,1688,1692],{"type":29,"tag":441,"props":1684,"children":1685},{"style":530},[1686],{"type":35,"value":1687},"    max_iterations",{"type":29,"tag":441,"props":1689,"children":1690},{"style":536},[1691],{"type":35,"value":553},{"type":29,"tag":441,"props":1693,"children":1694},{"style":556},[1695],{"type":35,"value":1590},{"type":29,"tag":441,"props":1697,"children":1699},{"class":525,"line":1698},75,[1700],{"type":29,"tag":441,"props":1701,"children":1702},{"emptyLinePlaceholder":24},[1703],{"type":35,"value":1032},{"type":29,"tag":441,"props":1705,"children":1707},{"class":525,"line":1706},76,[1708],{"type":29,"tag":441,"props":1709,"children":1710},{"style":1181},[1711],{"type":35,"value":1712},"  # server route functions\n",{"type":29,"tag":441,"props":1714,"children":1716},{"class":525,"line":1715},77,[1717,1722],{"type":29,"tag":441,"props":1718,"children":1719},{"style":530},[1720],{"type":35,"value":1721},"  get_mediation_case",{"type":29,"tag":441,"props":1723,"children":1724},{"style":536},[1725],{"type":35,"value":539},{"type":29,"tag":441,"props":1727,"children":1729},{"class":525,"line":1728},78,[1730,1734,1738],{"type":29,"tag":441,"props":1731,"children":1732},{"style":530},[1733],{"type":35,"value":581},{"type":29,"tag":441,"props":1735,"children":1736},{"style":536},[1737],{"type":35,"value":553},{"type":29,"tag":441,"props":1739,"children":1740},{"style":588},[1741],{"type":35,"value":1742},"server/get_mediation_case\n",{"type":29,"tag":441,"props":1744,"children":1746},{"class":525,"line":1745},79,[1747,1752],{"type":29,"tag":441,"props":1748,"children":1749},{"style":530},[1750],{"type":35,"value":1751},"  get_mediation_session",{"type":29,"tag":441,"props":1753,"children":1754},{"style":536},[1755],{"type":35,"value":539},{"type":29,"tag":441,"props":1757,"children":1759},{"class":525,"line":1758},80,[1760,1764,1768],{"type":29,"tag":441,"props":1761,"children":1762},{"style":530},[1763],{"type":35,"value":581},{"type":29,"tag":441,"props":1765,"children":1766},{"style":536},[1767],{"type":35,"value":553},{"type":29,"tag":441,"props":1769,"children":1770},{"style":588},[1771],{"type":35,"value":1772},"server/get_mediation_session\n",{"type":29,"tag":441,"props":1774,"children":1776},{"class":525,"line":1775},81,[1777,1782],{"type":29,"tag":441,"props":1778,"children":1779},{"style":530},[1780],{"type":35,"value":1781},"  send_message_to_mediation_session",{"type":29,"tag":441,"props":1783,"children":1784},{"style":536},[1785],{"type":35,"value":539},{"type":29,"tag":441,"props":1787,"children":1789},{"class":525,"line":1788},82,[1790,1794,1798],{"type":29,"tag":441,"props":1791,"children":1792},{"style":530},[1793],{"type":35,"value":581},{"type":29,"tag":441,"props":1795,"children":1796},{"style":536},[1797],{"type":35,"value":553},{"type":29,"tag":441,"props":1799,"children":1800},{"style":588},[1801],{"type":35,"value":1802},"mediation\n",{"type":29,"tag":441,"props":1804,"children":1806},{"class":525,"line":1805},83,[1807],{"type":29,"tag":441,"props":1808,"children":1809},{"emptyLinePlaceholder":24},[1810],{"type":35,"value":1032},{"type":29,"tag":441,"props":1812,"children":1814},{"class":525,"line":1813},84,[1815,1820],{"type":29,"tag":441,"props":1816,"children":1817},{"style":530},[1818],{"type":35,"value":1819},"embedders",{"type":29,"tag":441,"props":1821,"children":1822},{"style":536},[1823],{"type":35,"value":539},{"type":29,"tag":441,"props":1825,"children":1827},{"class":525,"line":1826},85,[1828,1833],{"type":29,"tag":441,"props":1829,"children":1830},{"style":530},[1831],{"type":35,"value":1832},"  nv-embedqa-e5-v5",{"type":29,"tag":441,"props":1834,"children":1835},{"style":536},[1836],{"type":35,"value":539},{"type":29,"tag":441,"props":1838,"children":1840},{"class":525,"line":1839},86,[1841,1845,1849],{"type":29,"tag":441,"props":1842,"children":1843},{"style":530},[1844],{"type":35,"value":581},{"type":29,"tag":441,"props":1846,"children":1847},{"style":536},[1848],{"type":35,"value":553},{"type":29,"tag":441,"props":1850,"children":1851},{"style":588},[1852],{"type":35,"value":1235},{"type":29,"tag":441,"props":1854,"children":1856},{"class":525,"line":1855},87,[1857,1861,1865],{"type":29,"tag":441,"props":1858,"children":1859},{"style":530},[1860],{"type":35,"value":1244},{"type":29,"tag":441,"props":1862,"children":1863},{"style":536},[1864],{"type":35,"value":553},{"type":29,"tag":441,"props":1866,"children":1867},{"style":588},[1868],{"type":35,"value":1869},"http://192.168.5.96:8000/v1\n",{"type":29,"tag":441,"props":1871,"children":1873},{"class":525,"line":1872},88,[1874,1878,1882],{"type":29,"tag":441,"props":1875,"children":1876},{"style":530},[1877],{"type":35,"value":1262},{"type":29,"tag":441,"props":1879,"children":1880},{"style":536},[1881],{"type":35,"value":553},{"type":29,"tag":441,"props":1883,"children":1884},{"style":588},[1885],{"type":35,"value":1886},"nvidia/nv-embedqa-e5-v5\n",{"type":29,"tag":441,"props":1888,"children":1890},{"class":525,"line":1889},89,[1891],{"type":29,"tag":441,"props":1892,"children":1893},{"emptyLinePlaceholder":24},[1894],{"type":35,"value":1032},{"type":29,"tag":441,"props":1896,"children":1898},{"class":525,"line":1897},90,[1899,1904],{"type":29,"tag":441,"props":1900,"children":1901},{"style":530},[1902],{"type":35,"value":1903},"workflow",{"type":29,"tag":441,"props":1905,"children":1906},{"style":536},[1907],{"type":35,"value":539},{"type":29,"tag":441,"props":1909,"children":1911},{"class":525,"line":1910},91,[1912,1917,1921],{"type":29,"tag":441,"props":1913,"children":1914},{"style":530},[1915],{"type":35,"value":1916},"  _type",{"type":29,"tag":441,"props":1918,"children":1919},{"style":536},[1920],{"type":35,"value":553},{"type":29,"tag":441,"props":1922,"children":1923},{"style":588},[1924],{"type":35,"value":1802},{"type":29,"tag":441,"props":1926,"children":1928},{"class":525,"line":1927},92,[1929,1934,1938],{"type":29,"tag":441,"props":1930,"children":1931},{"style":530},[1932],{"type":35,"value":1933},"  llm",{"type":29,"tag":441,"props":1935,"children":1936},{"style":536},[1937],{"type":35,"value":553},{"type":29,"tag":441,"props":1939,"children":1940},{"style":588},[1941],{"type":35,"value":1942},"mediation_llm\n",{"type":29,"tag":441,"props":1944,"children":1946},{"class":525,"line":1945},93,[1947,1952,1956],{"type":29,"tag":441,"props":1948,"children":1949},{"style":530},[1950],{"type":35,"value":1951},"  data_dir",{"type":29,"tag":441,"props":1953,"children":1954},{"style":536},[1955],{"type":35,"value":553},{"type":29,"tag":441,"props":1957,"children":1958},{"style":588},[1959],{"type":35,"value":1960},"./data\n",{"type":29,"tag":38,"props":1962,"children":1963},{},[1964,1966,1971],{"type":35,"value":1965},"Let's start at the top with ",{"type":29,"tag":427,"props":1967,"children":1969},{"className":1968},[],[1970],{"type":35,"value":533},{"type":35,"value":1972}," key",{"type":29,"tag":123,"props":1974,"children":1975},{"id":533},[1976],{"type":29,"tag":427,"props":1977,"children":1979},{"className":1978},[],[1980],{"type":35,"value":533},{"type":29,"tag":38,"props":1982,"children":1983},{},[1984],{"type":35,"value":1985},"This section mainly defines the API routes for the FastAPI integration and the telemetry options I set up to view all of my programs traces. When building applications with LLMs, instrumenting for observability is key! Agent Intelligence Toolkit makes it really easy to hook up not just one observability tool, but really any number of observability tools! It all works through asynchronous calls, so it doesn't slow down the application.",{"type":29,"tag":38,"props":1987,"children":1988},{},[1989],{"type":29,"tag":192,"props":1990,"children":1993},{"alt":1991,"src":1992},"LLM observability","/static/mediation-simulator/Phoenix.png",[],{"type":29,"tag":38,"props":1995,"children":1996},{},[1997],{"type":35,"value":1998},"Defining the API routes was pretty straightforward. You define an AIQ Toolkit function that handles the route's behavior. These routes are also automatically added to the API's documentation page using OpenAPI/Swagger:",{"type":29,"tag":38,"props":2000,"children":2001},{},[2002],{"type":29,"tag":192,"props":2003,"children":2006},{"alt":2004,"src":2005},"API documentation","/static/mediation-simulator/fastapi.png",[],{"type":29,"tag":123,"props":2008,"children":2009},{"id":1041},[2010],{"type":29,"tag":427,"props":2011,"children":2013},{"className":2012},[],[2014],{"type":35,"value":1041},{"type":29,"tag":38,"props":2016,"children":2017},{},[2018],{"type":35,"value":2019},"This section allows you to define different vector storage databases that your application uses. I used Milvus to store embeddings of case documents. Ultimately I wasn't able to incorporate these embeddings into my application.",{"type":29,"tag":123,"props":2021,"children":2022},{"id":1201},[2023],{"type":29,"tag":427,"props":2024,"children":2026},{"className":2025},[],[2027],{"type":35,"value":1201},{"type":29,"tag":38,"props":2029,"children":2030},{},[2031],{"type":35,"value":2032},"The LLMs section allows you to plug in to any LLM. I used a combination of LM Studio and NVIDIA NIMs to test my application. You can pretty much use any LLM that provides an OpenAI API interface. Local models have come a long way! New models like Qwen3 and Llama 3.1 have massive context windows (130k tokens!) which is a total game changer. These models are also getting a lot smarter. I was really impressed with how well these models followed my prompts. Using local models is nice because you will not be rate limited. I processed about 2 million prompt tokens and generated about 1.5 million completion tokens during the development of Mediation Simulator. As amazing as these new frontier models are now, I'm still bullish on the capabilities of (small) large language models that can run on consumer hardware like NVIDIA RTX GPUs.",{"type":29,"tag":123,"props":2034,"children":2035},{"id":1417},[2036],{"type":29,"tag":427,"props":2037,"children":2039},{"className":2038},[],[2040],{"type":35,"value":1417},{"type":29,"tag":38,"props":2042,"children":2043},{},[2044],{"type":35,"value":2045},"Figure out how memory works in the AIQ toolkit was a big \"ah-ha!\" moment for me. It allows for persisting chat messages between generations, and also storing arbitrary data that you can use in your workflows. I decided to use Redis (Redis Stack) to build a memory backend. Here's a quick look at what that code looks like:",{"type":29,"tag":514,"props":2047,"children":2051},{"code":2048,"language":2049,"meta":8,"className":2050,"style":8},"@register_memory(config_type=RedisMemoryConfig)\nasync def redis_memory(config: RedisMemoryConfig, builder: Builder):\n\n    class RedisMemoryEditor(MemoryEditor):\n        def __init__(self, config: RedisMemoryConfig):\n            self._conn_url = config.connection_url\n            self.redis = Redis.from_url(self._conn_url)\n\n        async def get_client(self, session_id: str) -> RedisChatMessageHistory:\n            conn = RedisChatMessageHistory(\n                session_id=session_id, redis_url=self._conn_url\n            )\n            return conn\n\n        # mediation session state management\n        async def add_messages(\n            self, items: Sequence[BaseMessage], session_id: str\n        ) -> None:\n            client = await self.get_client(session_id)\n            await client.aadd_messages(items)\n\n        async def get_messages(self, session_id: str) -> Sequence[BaseMessage]:\n            client = await self.get_client(session_id)\n            messages = await client.aget_messages()\n            return messages\n\n        # case generation state management\n        async def save_case_description(\n            self, case_description: str, case_id: str\n        ) -> None:\n            \"\"\"\n            sets the case description using the \u003Ccase_id>_case_description as the redis key\n            \"\"\"\n            self.redis.set(f\"{case_id}_case_description\", case_description)\n\n        ...\n","python","language-python shiki shiki-themes github-light github-dark monokai",[2052],{"type":29,"tag":427,"props":2053,"children":2054},{"__ignoreMap":8},[2055,2086,2130,2137,2166,2203,2226,2256,2263,2312,2329,2364,2372,2385,2392,2400,2421,2455,2472,2499,2512,2519,2564,2587,2608,2620,2627,2635,2655,2696,2711,2719,2727,2734,2780,2787],{"type":29,"tag":441,"props":2056,"children":2057},{"class":525,"line":526},[2058,2064,2069,2075,2081],{"type":29,"tag":441,"props":2059,"children":2061},{"style":2060},"--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[2062],{"type":35,"value":2063},"@register_memory",{"type":29,"tag":441,"props":2065,"children":2066},{"style":536},[2067],{"type":35,"value":2068},"(",{"type":29,"tag":441,"props":2070,"children":2072},{"style":2071},"--shiki-default:#E36209;--shiki-dark:#FFAB70;--shiki-sepia:#FD971F;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[2073],{"type":35,"value":2074},"config_type",{"type":29,"tag":441,"props":2076,"children":2078},{"style":2077},"--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[2079],{"type":35,"value":2080},"=",{"type":29,"tag":441,"props":2082,"children":2083},{"style":536},[2084],{"type":35,"value":2085},"RedisMemoryConfig)\n",{"type":29,"tag":441,"props":2087,"children":2088},{"class":525,"line":542},[2089,2095,2100,2105,2109,2115,2120,2125],{"type":29,"tag":441,"props":2090,"children":2092},{"style":2091},"--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#66D9EF;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[2093],{"type":35,"value":2094},"async",{"type":29,"tag":441,"props":2096,"children":2097},{"style":2091},[2098],{"type":35,"value":2099}," def",{"type":29,"tag":441,"props":2101,"children":2102},{"style":2060},[2103],{"type":35,"value":2104}," redis_memory",{"type":29,"tag":441,"props":2106,"children":2107},{"style":536},[2108],{"type":35,"value":2068},{"type":29,"tag":441,"props":2110,"children":2112},{"style":2111},"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#FD971F;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[2113],{"type":35,"value":2114},"config",{"type":29,"tag":441,"props":2116,"children":2117},{"style":536},[2118],{"type":35,"value":2119},": RedisMemoryConfig, ",{"type":29,"tag":441,"props":2121,"children":2122},{"style":2111},[2123],{"type":35,"value":2124},"builder",{"type":29,"tag":441,"props":2126,"children":2127},{"style":536},[2128],{"type":35,"value":2129},": Builder):\n",{"type":29,"tag":441,"props":2131,"children":2132},{"class":525,"line":562},[2133],{"type":29,"tag":441,"props":2134,"children":2135},{"emptyLinePlaceholder":24},[2136],{"type":35,"value":1032},{"type":29,"tag":441,"props":2138,"children":2139},{"class":525,"line":575},[2140,2145,2151,2155,2161],{"type":29,"tag":441,"props":2141,"children":2142},{"style":2091},[2143],{"type":35,"value":2144},"    class",{"type":29,"tag":441,"props":2146,"children":2148},{"style":2147},"--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E;--shiki-default-text-decoration:inherit;--shiki-dark-text-decoration:inherit;--shiki-sepia-text-decoration:underline",[2149],{"type":35,"value":2150}," RedisMemoryEditor",{"type":29,"tag":441,"props":2152,"children":2153},{"style":536},[2154],{"type":35,"value":2068},{"type":29,"tag":441,"props":2156,"children":2158},{"style":2157},"--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic;--shiki-default-text-decoration:inherit;--shiki-dark-text-decoration:inherit;--shiki-sepia-text-decoration:underline",[2159],{"type":35,"value":2160},"MemoryEditor",{"type":29,"tag":441,"props":2162,"children":2163},{"style":536},[2164],{"type":35,"value":2165},"):\n",{"type":29,"tag":441,"props":2167,"children":2168},{"class":525,"line":594},[2169,2174,2180,2184,2189,2194,2198],{"type":29,"tag":441,"props":2170,"children":2171},{"style":2091},[2172],{"type":35,"value":2173},"        def",{"type":29,"tag":441,"props":2175,"children":2177},{"style":2176},"--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#66D9EF",[2178],{"type":35,"value":2179}," __init__",{"type":29,"tag":441,"props":2181,"children":2182},{"style":536},[2183],{"type":35,"value":2068},{"type":29,"tag":441,"props":2185,"children":2186},{"style":2111},[2187],{"type":35,"value":2188},"self",{"type":29,"tag":441,"props":2190,"children":2191},{"style":536},[2192],{"type":35,"value":2193},", ",{"type":29,"tag":441,"props":2195,"children":2196},{"style":2111},[2197],{"type":35,"value":2114},{"type":29,"tag":441,"props":2199,"children":2200},{"style":536},[2201],{"type":35,"value":2202},": RedisMemoryConfig):\n",{"type":29,"tag":441,"props":2204,"children":2205},{"class":525,"line":607},[2206,2212,2217,2221],{"type":29,"tag":441,"props":2207,"children":2209},{"style":2208},"--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[2210],{"type":35,"value":2211},"            self",{"type":29,"tag":441,"props":2213,"children":2214},{"style":536},[2215],{"type":35,"value":2216},"._conn_url ",{"type":29,"tag":441,"props":2218,"children":2219},{"style":2077},[2220],{"type":35,"value":2080},{"type":29,"tag":441,"props":2222,"children":2223},{"style":536},[2224],{"type":35,"value":2225}," config.connection_url\n",{"type":29,"tag":441,"props":2227,"children":2228},{"class":525,"line":631},[2229,2233,2238,2242,2247,2251],{"type":29,"tag":441,"props":2230,"children":2231},{"style":2208},[2232],{"type":35,"value":2211},{"type":29,"tag":441,"props":2234,"children":2235},{"style":536},[2236],{"type":35,"value":2237},".redis ",{"type":29,"tag":441,"props":2239,"children":2240},{"style":2077},[2241],{"type":35,"value":2080},{"type":29,"tag":441,"props":2243,"children":2244},{"style":536},[2245],{"type":35,"value":2246}," Redis.from_url(",{"type":29,"tag":441,"props":2248,"children":2249},{"style":2208},[2250],{"type":35,"value":2188},{"type":29,"tag":441,"props":2252,"children":2253},{"style":536},[2254],{"type":35,"value":2255},"._conn_url)\n",{"type":29,"tag":441,"props":2257,"children":2258},{"class":525,"line":644},[2259],{"type":29,"tag":441,"props":2260,"children":2261},{"emptyLinePlaceholder":24},[2262],{"type":35,"value":1032},{"type":29,"tag":441,"props":2264,"children":2265},{"class":525,"line":658},[2266,2271,2275,2280,2284,2288,2292,2297,2301,2307],{"type":29,"tag":441,"props":2267,"children":2268},{"style":2091},[2269],{"type":35,"value":2270},"        async",{"type":29,"tag":441,"props":2272,"children":2273},{"style":2091},[2274],{"type":35,"value":2099},{"type":29,"tag":441,"props":2276,"children":2277},{"style":2060},[2278],{"type":35,"value":2279}," get_client",{"type":29,"tag":441,"props":2281,"children":2282},{"style":536},[2283],{"type":35,"value":2068},{"type":29,"tag":441,"props":2285,"children":2286},{"style":2111},[2287],{"type":35,"value":2188},{"type":29,"tag":441,"props":2289,"children":2290},{"style":536},[2291],{"type":35,"value":2193},{"type":29,"tag":441,"props":2293,"children":2294},{"style":2111},[2295],{"type":35,"value":2296},"session_id",{"type":29,"tag":441,"props":2298,"children":2299},{"style":536},[2300],{"type":35,"value":553},{"type":29,"tag":441,"props":2302,"children":2304},{"style":2303},"--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#66D9EF;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[2305],{"type":35,"value":2306},"str",{"type":29,"tag":441,"props":2308,"children":2309},{"style":536},[2310],{"type":35,"value":2311},") -> RedisChatMessageHistory:\n",{"type":29,"tag":441,"props":2313,"children":2314},{"class":525,"line":671},[2315,2320,2324],{"type":29,"tag":441,"props":2316,"children":2317},{"style":536},[2318],{"type":35,"value":2319},"            conn ",{"type":29,"tag":441,"props":2321,"children":2322},{"style":2077},[2323],{"type":35,"value":2080},{"type":29,"tag":441,"props":2325,"children":2326},{"style":536},[2327],{"type":35,"value":2328}," RedisChatMessageHistory(\n",{"type":29,"tag":441,"props":2330,"children":2331},{"class":525,"line":684},[2332,2337,2341,2346,2351,2355,2359],{"type":29,"tag":441,"props":2333,"children":2334},{"style":2071},[2335],{"type":35,"value":2336},"                session_id",{"type":29,"tag":441,"props":2338,"children":2339},{"style":2077},[2340],{"type":35,"value":2080},{"type":29,"tag":441,"props":2342,"children":2343},{"style":536},[2344],{"type":35,"value":2345},"session_id, ",{"type":29,"tag":441,"props":2347,"children":2348},{"style":2071},[2349],{"type":35,"value":2350},"redis_url",{"type":29,"tag":441,"props":2352,"children":2353},{"style":2077},[2354],{"type":35,"value":2080},{"type":29,"tag":441,"props":2356,"children":2357},{"style":2208},[2358],{"type":35,"value":2188},{"type":29,"tag":441,"props":2360,"children":2361},{"style":536},[2362],{"type":35,"value":2363},"._conn_url\n",{"type":29,"tag":441,"props":2365,"children":2366},{"class":525,"line":697},[2367],{"type":29,"tag":441,"props":2368,"children":2369},{"style":536},[2370],{"type":35,"value":2371},"            )\n",{"type":29,"tag":441,"props":2373,"children":2374},{"class":525,"line":720},[2375,2380],{"type":29,"tag":441,"props":2376,"children":2377},{"style":2077},[2378],{"type":35,"value":2379},"            return",{"type":29,"tag":441,"props":2381,"children":2382},{"style":536},[2383],{"type":35,"value":2384}," conn\n",{"type":29,"tag":441,"props":2386,"children":2387},{"class":525,"line":737},[2388],{"type":29,"tag":441,"props":2389,"children":2390},{"emptyLinePlaceholder":24},[2391],{"type":35,"value":1032},{"type":29,"tag":441,"props":2393,"children":2394},{"class":525,"line":755},[2395],{"type":29,"tag":441,"props":2396,"children":2397},{"style":1181},[2398],{"type":35,"value":2399},"        # mediation session state management\n",{"type":29,"tag":441,"props":2401,"children":2402},{"class":525,"line":773},[2403,2407,2411,2416],{"type":29,"tag":441,"props":2404,"children":2405},{"style":2091},[2406],{"type":35,"value":2270},{"type":29,"tag":441,"props":2408,"children":2409},{"style":2091},[2410],{"type":35,"value":2099},{"type":29,"tag":441,"props":2412,"children":2413},{"style":2060},[2414],{"type":35,"value":2415}," add_messages",{"type":29,"tag":441,"props":2417,"children":2418},{"style":536},[2419],{"type":35,"value":2420},"(\n",{"type":29,"tag":441,"props":2422,"children":2423},{"class":525,"line":794},[2424,2428,2432,2437,2442,2446,2450],{"type":29,"tag":441,"props":2425,"children":2426},{"style":2111},[2427],{"type":35,"value":2211},{"type":29,"tag":441,"props":2429,"children":2430},{"style":536},[2431],{"type":35,"value":2193},{"type":29,"tag":441,"props":2433,"children":2434},{"style":2111},[2435],{"type":35,"value":2436},"items",{"type":29,"tag":441,"props":2438,"children":2439},{"style":536},[2440],{"type":35,"value":2441},": Sequence[BaseMessage], ",{"type":29,"tag":441,"props":2443,"children":2444},{"style":2111},[2445],{"type":35,"value":2296},{"type":29,"tag":441,"props":2447,"children":2448},{"style":536},[2449],{"type":35,"value":553},{"type":29,"tag":441,"props":2451,"children":2452},{"style":2303},[2453],{"type":35,"value":2454},"str\n",{"type":29,"tag":441,"props":2456,"children":2457},{"class":525,"line":810},[2458,2463,2468],{"type":29,"tag":441,"props":2459,"children":2460},{"style":536},[2461],{"type":35,"value":2462},"        ) -> ",{"type":29,"tag":441,"props":2464,"children":2465},{"style":556},[2466],{"type":35,"value":2467},"None",{"type":29,"tag":441,"props":2469,"children":2470},{"style":536},[2471],{"type":35,"value":539},{"type":29,"tag":441,"props":2473,"children":2474},{"class":525,"line":827},[2475,2480,2484,2489,2494],{"type":29,"tag":441,"props":2476,"children":2477},{"style":536},[2478],{"type":35,"value":2479},"            client ",{"type":29,"tag":441,"props":2481,"children":2482},{"style":2077},[2483],{"type":35,"value":2080},{"type":29,"tag":441,"props":2485,"children":2486},{"style":2077},[2487],{"type":35,"value":2488}," await",{"type":29,"tag":441,"props":2490,"children":2491},{"style":2208},[2492],{"type":35,"value":2493}," self",{"type":29,"tag":441,"props":2495,"children":2496},{"style":536},[2497],{"type":35,"value":2498},".get_client(session_id)\n",{"type":29,"tag":441,"props":2500,"children":2501},{"class":525,"line":844},[2502,2507],{"type":29,"tag":441,"props":2503,"children":2504},{"style":2077},[2505],{"type":35,"value":2506},"            await",{"type":29,"tag":441,"props":2508,"children":2509},{"style":536},[2510],{"type":35,"value":2511}," client.aadd_messages(items)\n",{"type":29,"tag":441,"props":2513,"children":2514},{"class":525,"line":865},[2515],{"type":29,"tag":441,"props":2516,"children":2517},{"emptyLinePlaceholder":24},[2518],{"type":35,"value":1032},{"type":29,"tag":441,"props":2520,"children":2521},{"class":525,"line":881},[2522,2526,2530,2535,2539,2543,2547,2551,2555,2559],{"type":29,"tag":441,"props":2523,"children":2524},{"style":2091},[2525],{"type":35,"value":2270},{"type":29,"tag":441,"props":2527,"children":2528},{"style":2091},[2529],{"type":35,"value":2099},{"type":29,"tag":441,"props":2531,"children":2532},{"style":2060},[2533],{"type":35,"value":2534}," get_messages",{"type":29,"tag":441,"props":2536,"children":2537},{"style":536},[2538],{"type":35,"value":2068},{"type":29,"tag":441,"props":2540,"children":2541},{"style":2111},[2542],{"type":35,"value":2188},{"type":29,"tag":441,"props":2544,"children":2545},{"style":536},[2546],{"type":35,"value":2193},{"type":29,"tag":441,"props":2548,"children":2549},{"style":2111},[2550],{"type":35,"value":2296},{"type":29,"tag":441,"props":2552,"children":2553},{"style":536},[2554],{"type":35,"value":553},{"type":29,"tag":441,"props":2556,"children":2557},{"style":2303},[2558],{"type":35,"value":2306},{"type":29,"tag":441,"props":2560,"children":2561},{"style":536},[2562],{"type":35,"value":2563},") -> Sequence[BaseMessage]:\n",{"type":29,"tag":441,"props":2565,"children":2566},{"class":525,"line":898},[2567,2571,2575,2579,2583],{"type":29,"tag":441,"props":2568,"children":2569},{"style":536},[2570],{"type":35,"value":2479},{"type":29,"tag":441,"props":2572,"children":2573},{"style":2077},[2574],{"type":35,"value":2080},{"type":29,"tag":441,"props":2576,"children":2577},{"style":2077},[2578],{"type":35,"value":2488},{"type":29,"tag":441,"props":2580,"children":2581},{"style":2208},[2582],{"type":35,"value":2493},{"type":29,"tag":441,"props":2584,"children":2585},{"style":536},[2586],{"type":35,"value":2498},{"type":29,"tag":441,"props":2588,"children":2589},{"class":525,"line":915},[2590,2595,2599,2603],{"type":29,"tag":441,"props":2591,"children":2592},{"style":536},[2593],{"type":35,"value":2594},"            messages ",{"type":29,"tag":441,"props":2596,"children":2597},{"style":2077},[2598],{"type":35,"value":2080},{"type":29,"tag":441,"props":2600,"children":2601},{"style":2077},[2602],{"type":35,"value":2488},{"type":29,"tag":441,"props":2604,"children":2605},{"style":536},[2606],{"type":35,"value":2607}," client.aget_messages()\n",{"type":29,"tag":441,"props":2609,"children":2610},{"class":525,"line":928},[2611,2615],{"type":29,"tag":441,"props":2612,"children":2613},{"style":2077},[2614],{"type":35,"value":2379},{"type":29,"tag":441,"props":2616,"children":2617},{"style":536},[2618],{"type":35,"value":2619}," messages\n",{"type":29,"tag":441,"props":2621,"children":2622},{"class":525,"line":946},[2623],{"type":29,"tag":441,"props":2624,"children":2625},{"emptyLinePlaceholder":24},[2626],{"type":35,"value":1032},{"type":29,"tag":441,"props":2628,"children":2629},{"class":525,"line":959},[2630],{"type":29,"tag":441,"props":2631,"children":2632},{"style":1181},[2633],{"type":35,"value":2634},"        # case generation state management\n",{"type":29,"tag":441,"props":2636,"children":2637},{"class":525,"line":972},[2638,2642,2646,2651],{"type":29,"tag":441,"props":2639,"children":2640},{"style":2091},[2641],{"type":35,"value":2270},{"type":29,"tag":441,"props":2643,"children":2644},{"style":2091},[2645],{"type":35,"value":2099},{"type":29,"tag":441,"props":2647,"children":2648},{"style":2060},[2649],{"type":35,"value":2650}," save_case_description",{"type":29,"tag":441,"props":2652,"children":2653},{"style":536},[2654],{"type":35,"value":2420},{"type":29,"tag":441,"props":2656,"children":2657},{"class":525,"line":990},[2658,2662,2666,2671,2675,2679,2683,2688,2692],{"type":29,"tag":441,"props":2659,"children":2660},{"style":2111},[2661],{"type":35,"value":2211},{"type":29,"tag":441,"props":2663,"children":2664},{"style":536},[2665],{"type":35,"value":2193},{"type":29,"tag":441,"props":2667,"children":2668},{"style":2111},[2669],{"type":35,"value":2670},"case_description",{"type":29,"tag":441,"props":2672,"children":2673},{"style":536},[2674],{"type":35,"value":553},{"type":29,"tag":441,"props":2676,"children":2677},{"style":2303},[2678],{"type":35,"value":2306},{"type":29,"tag":441,"props":2680,"children":2681},{"style":536},[2682],{"type":35,"value":2193},{"type":29,"tag":441,"props":2684,"children":2685},{"style":2111},[2686],{"type":35,"value":2687},"case_id",{"type":29,"tag":441,"props":2689,"children":2690},{"style":536},[2691],{"type":35,"value":553},{"type":29,"tag":441,"props":2693,"children":2694},{"style":2303},[2695],{"type":35,"value":2454},{"type":29,"tag":441,"props":2697,"children":2698},{"class":525,"line":1008},[2699,2703,2707],{"type":29,"tag":441,"props":2700,"children":2701},{"style":536},[2702],{"type":35,"value":2462},{"type":29,"tag":441,"props":2704,"children":2705},{"style":556},[2706],{"type":35,"value":2467},{"type":29,"tag":441,"props":2708,"children":2709},{"style":536},[2710],{"type":35,"value":539},{"type":29,"tag":441,"props":2712,"children":2713},{"class":525,"line":1026},[2714],{"type":29,"tag":441,"props":2715,"children":2716},{"style":588},[2717],{"type":35,"value":2718},"            \"\"\"\n",{"type":29,"tag":441,"props":2720,"children":2721},{"class":525,"line":1035},[2722],{"type":29,"tag":441,"props":2723,"children":2724},{"style":588},[2725],{"type":35,"value":2726},"            sets the case description using the \u003Ccase_id>_case_description as the redis key\n",{"type":29,"tag":441,"props":2728,"children":2729},{"class":525,"line":1048},[2730],{"type":29,"tag":441,"props":2731,"children":2732},{"style":588},[2733],{"type":35,"value":2718},{"type":29,"tag":441,"props":2735,"children":2736},{"class":525,"line":1061},[2737,2741,2746,2751,2756,2761,2765,2770,2775],{"type":29,"tag":441,"props":2738,"children":2739},{"style":2208},[2740],{"type":35,"value":2211},{"type":29,"tag":441,"props":2742,"children":2743},{"style":536},[2744],{"type":35,"value":2745},".redis.set(",{"type":29,"tag":441,"props":2747,"children":2748},{"style":2091},[2749],{"type":35,"value":2750},"f",{"type":29,"tag":441,"props":2752,"children":2753},{"style":588},[2754],{"type":35,"value":2755},"\"",{"type":29,"tag":441,"props":2757,"children":2758},{"style":556},[2759],{"type":35,"value":2760},"{",{"type":29,"tag":441,"props":2762,"children":2763},{"style":536},[2764],{"type":35,"value":2687},{"type":29,"tag":441,"props":2766,"children":2767},{"style":556},[2768],{"type":35,"value":2769},"}",{"type":29,"tag":441,"props":2771,"children":2772},{"style":588},[2773],{"type":35,"value":2774},"_case_description\"",{"type":29,"tag":441,"props":2776,"children":2777},{"style":536},[2778],{"type":35,"value":2779},", case_description)\n",{"type":29,"tag":441,"props":2781,"children":2782},{"class":525,"line":1078},[2783],{"type":29,"tag":441,"props":2784,"children":2785},{"emptyLinePlaceholder":24},[2786],{"type":35,"value":1032},{"type":29,"tag":441,"props":2788,"children":2789},{"class":525,"line":1096},[2790],{"type":29,"tag":441,"props":2791,"children":2792},{"style":556},[2793],{"type":35,"value":2794},"        ...\n",{"type":29,"tag":38,"props":2796,"children":2797},{},[2798,2800,2806],{"type":35,"value":2799},"I found that LangChain has a ",{"type":29,"tag":427,"props":2801,"children":2803},{"className":2802},[],[2804],{"type":35,"value":2805},"RedisChatMessageHistory",{"type":35,"value":2807}," class that made putting this backend together almost trivial. Redis Stack also ships with a web viewer which really came in handy for debugging my memory backend:",{"type":29,"tag":38,"props":2809,"children":2810},{},[2811],{"type":29,"tag":192,"props":2812,"children":2815},{"alt":2813,"src":2814},"Reis Memory Backend","/static/mediation-simulator/redis.png",[],{"type":29,"tag":38,"props":2817,"children":2818},{},[2819],{"type":35,"value":2820},"For storing other types of data, I was able to implement my own methods and store things like case data or other metadata for a mediation simulator session for things like current_speaker, number of session, current session, etc. I love Redis! The setup is also really easy, I just added a docker compose file:",{"type":29,"tag":514,"props":2822,"children":2824},{"code":2823,"language":517,"meta":8,"className":518,"style":8},"services:\n  redis:\n    image: redis/redis-stack:latest\n    volumes:\n      - redis-data:/data\n    container_name: redis\n    ports:\n      - 6379:6379\n      - 8001:8001  # RedisInsight port\n\nvolumes:\n  redis-data:\n",[2825],{"type":29,"tag":427,"props":2826,"children":2827},{"__ignoreMap":8},[2828,2840,2852,2869,2881,2893,2910,2922,2934,2951,2958,2970],{"type":29,"tag":441,"props":2829,"children":2830},{"class":525,"line":526},[2831,2836],{"type":29,"tag":441,"props":2832,"children":2833},{"style":530},[2834],{"type":35,"value":2835},"services",{"type":29,"tag":441,"props":2837,"children":2838},{"style":536},[2839],{"type":35,"value":539},{"type":29,"tag":441,"props":2841,"children":2842},{"class":525,"line":542},[2843,2848],{"type":29,"tag":441,"props":2844,"children":2845},{"style":530},[2846],{"type":35,"value":2847},"  redis",{"type":29,"tag":441,"props":2849,"children":2850},{"style":536},[2851],{"type":35,"value":539},{"type":29,"tag":441,"props":2853,"children":2854},{"class":525,"line":562},[2855,2860,2864],{"type":29,"tag":441,"props":2856,"children":2857},{"style":530},[2858],{"type":35,"value":2859},"    image",{"type":29,"tag":441,"props":2861,"children":2862},{"style":536},[2863],{"type":35,"value":553},{"type":29,"tag":441,"props":2865,"children":2866},{"style":588},[2867],{"type":35,"value":2868},"redis/redis-stack:latest\n",{"type":29,"tag":441,"props":2870,"children":2871},{"class":525,"line":575},[2872,2877],{"type":29,"tag":441,"props":2873,"children":2874},{"style":530},[2875],{"type":35,"value":2876},"    volumes",{"type":29,"tag":441,"props":2878,"children":2879},{"style":536},[2880],{"type":35,"value":539},{"type":29,"tag":441,"props":2882,"children":2883},{"class":525,"line":594},[2884,2888],{"type":29,"tag":441,"props":2885,"children":2886},{"style":536},[2887],{"type":35,"value":703},{"type":29,"tag":441,"props":2889,"children":2890},{"style":588},[2891],{"type":35,"value":2892},"redis-data:/data\n",{"type":29,"tag":441,"props":2894,"children":2895},{"class":525,"line":607},[2896,2901,2905],{"type":29,"tag":441,"props":2897,"children":2898},{"style":530},[2899],{"type":35,"value":2900},"    container_name",{"type":29,"tag":441,"props":2902,"children":2903},{"style":536},[2904],{"type":35,"value":553},{"type":29,"tag":441,"props":2906,"children":2907},{"style":588},[2908],{"type":35,"value":2909},"redis\n",{"type":29,"tag":441,"props":2911,"children":2912},{"class":525,"line":631},[2913,2918],{"type":29,"tag":441,"props":2914,"children":2915},{"style":530},[2916],{"type":35,"value":2917},"    ports",{"type":29,"tag":441,"props":2919,"children":2920},{"style":536},[2921],{"type":35,"value":539},{"type":29,"tag":441,"props":2923,"children":2924},{"class":525,"line":644},[2925,2929],{"type":29,"tag":441,"props":2926,"children":2927},{"style":536},[2928],{"type":35,"value":703},{"type":29,"tag":441,"props":2930,"children":2931},{"style":588},[2932],{"type":35,"value":2933},"6379:6379\n",{"type":29,"tag":441,"props":2935,"children":2936},{"class":525,"line":658},[2937,2941,2946],{"type":29,"tag":441,"props":2938,"children":2939},{"style":536},[2940],{"type":35,"value":703},{"type":29,"tag":441,"props":2942,"children":2943},{"style":588},[2944],{"type":35,"value":2945},"8001:8001",{"type":29,"tag":441,"props":2947,"children":2948},{"style":1181},[2949],{"type":35,"value":2950},"  # RedisInsight port\n",{"type":29,"tag":441,"props":2952,"children":2953},{"class":525,"line":671},[2954],{"type":29,"tag":441,"props":2955,"children":2956},{"emptyLinePlaceholder":24},[2957],{"type":35,"value":1032},{"type":29,"tag":441,"props":2959,"children":2960},{"class":525,"line":684},[2961,2966],{"type":29,"tag":441,"props":2962,"children":2963},{"style":530},[2964],{"type":35,"value":2965},"volumes",{"type":29,"tag":441,"props":2967,"children":2968},{"style":536},[2969],{"type":35,"value":539},{"type":29,"tag":441,"props":2971,"children":2972},{"class":525,"line":697},[2973,2978],{"type":29,"tag":441,"props":2974,"children":2975},{"style":530},[2976],{"type":35,"value":2977},"  redis-data",{"type":29,"tag":441,"props":2979,"children":2980},{"style":536},[2981],{"type":35,"value":539},{"type":29,"tag":123,"props":2983,"children":2984},{"id":1486},[2985],{"type":29,"tag":427,"props":2986,"children":2988},{"className":2987},[],[2989],{"type":35,"value":1486},{"type":29,"tag":38,"props":2991,"children":2992},{},[2993],{"type":35,"value":2994},"Functions are the building blocks of the AIQ Toolkit. You need to register the functions in your config file, then you can use them for different things, like the function that handles an API route, or the function that handles an agentic workflow. I defined some functions for RAG to allow my agents to look up case data, but I wasn't able to fully implement this in my main mediation simualator workflow. But the setup was easy!",{"type":29,"tag":123,"props":2996,"children":2997},{"id":1819},[2998],{"type":29,"tag":427,"props":2999,"children":3001},{"className":3000},[],[3002],{"type":35,"value":1819},{"type":29,"tag":38,"props":3004,"children":3005},{},[3006],{"type":35,"value":3007},"Embedders is a section that allows you to define embedding models that you would use together with RAG (for converting text to a vector embedding). Since I needed to make a lot of embeddings for all of the documents I generated for case facts, I used a locally hosted NVIDIA NIM:",{"type":29,"tag":514,"props":3009,"children":3011},{"code":3010,"language":517,"meta":8,"className":518,"style":8},"embedders:\n  nv-embedqa-e5-v5:\n    _type: nim\n    base_url: http://192.168.5.96:8000/v1\n    model_name: nvidia/nv-embedqa-e5-v5\n",[3012],{"type":29,"tag":427,"props":3013,"children":3014},{"__ignoreMap":8},[3015,3026,3037,3052,3067],{"type":29,"tag":441,"props":3016,"children":3017},{"class":525,"line":526},[3018,3022],{"type":29,"tag":441,"props":3019,"children":3020},{"style":530},[3021],{"type":35,"value":1819},{"type":29,"tag":441,"props":3023,"children":3024},{"style":536},[3025],{"type":35,"value":539},{"type":29,"tag":441,"props":3027,"children":3028},{"class":525,"line":542},[3029,3033],{"type":29,"tag":441,"props":3030,"children":3031},{"style":530},[3032],{"type":35,"value":1832},{"type":29,"tag":441,"props":3034,"children":3035},{"style":536},[3036],{"type":35,"value":539},{"type":29,"tag":441,"props":3038,"children":3039},{"class":525,"line":562},[3040,3044,3048],{"type":29,"tag":441,"props":3041,"children":3042},{"style":530},[3043],{"type":35,"value":581},{"type":29,"tag":441,"props":3045,"children":3046},{"style":536},[3047],{"type":35,"value":553},{"type":29,"tag":441,"props":3049,"children":3050},{"style":588},[3051],{"type":35,"value":1235},{"type":29,"tag":441,"props":3053,"children":3054},{"class":525,"line":575},[3055,3059,3063],{"type":29,"tag":441,"props":3056,"children":3057},{"style":530},[3058],{"type":35,"value":1244},{"type":29,"tag":441,"props":3060,"children":3061},{"style":536},[3062],{"type":35,"value":553},{"type":29,"tag":441,"props":3064,"children":3065},{"style":588},[3066],{"type":35,"value":1869},{"type":29,"tag":441,"props":3068,"children":3069},{"class":525,"line":594},[3070,3074,3078],{"type":29,"tag":441,"props":3071,"children":3072},{"style":530},[3073],{"type":35,"value":1262},{"type":29,"tag":441,"props":3075,"children":3076},{"style":536},[3077],{"type":35,"value":553},{"type":29,"tag":441,"props":3079,"children":3080},{"style":588},[3081],{"type":35,"value":1886},{"type":29,"tag":38,"props":3083,"children":3084},{},[3085],{"type":35,"value":3086},"I would have run into rate limits if I was using the hosted version, so being able to run this locally was important for my use case.",{"type":29,"tag":123,"props":3088,"children":3089},{"id":1903},[3090],{"type":29,"tag":427,"props":3091,"children":3093},{"className":3092},[],[3094],{"type":35,"value":1903},{"type":29,"tag":38,"props":3096,"children":3097},{},[3098],{"type":35,"value":3099},"The workflow is the main \"application\" part of the config file. It is the entrypoint for your application. In my case, the workflow invokes a LangGraph that does my simulation. First it loads data from my memory backend and when I'm using the interactive mode it gathers information from the request like path parameters so it knows what data fetch from memory (like the case id and session id).",{"type":29,"tag":38,"props":3101,"children":3102},{},[3103],{"type":35,"value":3104},"My mediation workflow code is a little bit messy. I tried to keep all of my prompting logic in separate files for simplicity. The trickiest part for me was serializing data between different formats: langgraph state, YAML files and Redis memory. I'm happy to have something now that is functional, but there are a lot of improvements and further refactoring that would make the code easier to read and maintain.",{"type":29,"tag":38,"props":3106,"children":3107},{},[3108],{"type":35,"value":3109},"That wraps up the tour of my main config file for mediation simulator! I also had another smaller config file for case generation. Here's a quick look at that:",{"type":29,"tag":514,"props":3111,"children":3113},{"code":3112,"language":517,"meta":8,"className":518,"style":8},"general:\n  use_uvloop: true\n  telemetry:\n    enabled: false\n    tracing:\n      phoenix:\n        _type: phoenix\n        endpoint: http://localhost:6006/v1/traces\n        project: mediation-simulator\n\nllms:\n  nim_llm:\n    _type: nim\n    base_url: http://192.168.5.96:1234/v1\n    model_name: qwen3-8b\n    max_tokens: 10000\n    temperature: 0.7\n  # nim_llm:\n  #   _type: nim\n  #   model_name: meta/llama-3.1-70b-instruct\n  #   max_tokens: 10000\n  #   temperature: 0.7\n\nmemory:\n  redis_memory:\n    _type: redis_memory\n    connection_url: redis://localhost:6379/0\n\nworkflow:\n  _type: case_generation\n  llm_name: nim_llm\n  data_dir: ./data\n",[3114],{"type":29,"tag":427,"props":3115,"children":3116},{"__ignoreMap":8},[3117,3128,3143,3154,3169,3180,3191,3206,3221,3237,3244,3255,3266,3281,3296,3311,3326,3341,3349,3357,3365,3373,3381,3388,3399,3410,3425,3440,3447,3458,3474,3490],{"type":29,"tag":441,"props":3118,"children":3119},{"class":525,"line":526},[3120,3124],{"type":29,"tag":441,"props":3121,"children":3122},{"style":530},[3123],{"type":35,"value":533},{"type":29,"tag":441,"props":3125,"children":3126},{"style":536},[3127],{"type":35,"value":539},{"type":29,"tag":441,"props":3129,"children":3130},{"class":525,"line":542},[3131,3135,3139],{"type":29,"tag":441,"props":3132,"children":3133},{"style":530},[3134],{"type":35,"value":548},{"type":29,"tag":441,"props":3136,"children":3137},{"style":536},[3138],{"type":35,"value":553},{"type":29,"tag":441,"props":3140,"children":3141},{"style":556},[3142],{"type":35,"value":559},{"type":29,"tag":441,"props":3144,"children":3145},{"class":525,"line":562},[3146,3150],{"type":29,"tag":441,"props":3147,"children":3148},{"style":530},[3149],{"type":35,"value":921},{"type":29,"tag":441,"props":3151,"children":3152},{"style":536},[3153],{"type":35,"value":539},{"type":29,"tag":441,"props":3155,"children":3156},{"class":525,"line":575},[3157,3161,3165],{"type":29,"tag":441,"props":3158,"children":3159},{"style":530},[3160],{"type":35,"value":934},{"type":29,"tag":441,"props":3162,"children":3163},{"style":536},[3164],{"type":35,"value":553},{"type":29,"tag":441,"props":3166,"children":3167},{"style":556},[3168],{"type":35,"value":943},{"type":29,"tag":441,"props":3170,"children":3171},{"class":525,"line":594},[3172,3176],{"type":29,"tag":441,"props":3173,"children":3174},{"style":530},[3175],{"type":35,"value":952},{"type":29,"tag":441,"props":3177,"children":3178},{"style":536},[3179],{"type":35,"value":539},{"type":29,"tag":441,"props":3181,"children":3182},{"class":525,"line":607},[3183,3187],{"type":29,"tag":441,"props":3184,"children":3185},{"style":530},[3186],{"type":35,"value":965},{"type":29,"tag":441,"props":3188,"children":3189},{"style":536},[3190],{"type":35,"value":539},{"type":29,"tag":441,"props":3192,"children":3193},{"class":525,"line":631},[3194,3198,3202],{"type":29,"tag":441,"props":3195,"children":3196},{"style":530},[3197],{"type":35,"value":978},{"type":29,"tag":441,"props":3199,"children":3200},{"style":536},[3201],{"type":35,"value":553},{"type":29,"tag":441,"props":3203,"children":3204},{"style":588},[3205],{"type":35,"value":987},{"type":29,"tag":441,"props":3207,"children":3208},{"class":525,"line":644},[3209,3213,3217],{"type":29,"tag":441,"props":3210,"children":3211},{"style":530},[3212],{"type":35,"value":996},{"type":29,"tag":441,"props":3214,"children":3215},{"style":536},[3216],{"type":35,"value":553},{"type":29,"tag":441,"props":3218,"children":3219},{"style":588},[3220],{"type":35,"value":1005},{"type":29,"tag":441,"props":3222,"children":3223},{"class":525,"line":658},[3224,3228,3232],{"type":29,"tag":441,"props":3225,"children":3226},{"style":530},[3227],{"type":35,"value":1014},{"type":29,"tag":441,"props":3229,"children":3230},{"style":536},[3231],{"type":35,"value":553},{"type":29,"tag":441,"props":3233,"children":3234},{"style":588},[3235],{"type":35,"value":3236},"mediation-simulator\n",{"type":29,"tag":441,"props":3238,"children":3239},{"class":525,"line":671},[3240],{"type":29,"tag":441,"props":3241,"children":3242},{"emptyLinePlaceholder":24},[3243],{"type":35,"value":1032},{"type":29,"tag":441,"props":3245,"children":3246},{"class":525,"line":684},[3247,3251],{"type":29,"tag":441,"props":3248,"children":3249},{"style":530},[3250],{"type":35,"value":1201},{"type":29,"tag":441,"props":3252,"children":3253},{"style":536},[3254],{"type":35,"value":539},{"type":29,"tag":441,"props":3256,"children":3257},{"class":525,"line":697},[3258,3262],{"type":29,"tag":441,"props":3259,"children":3260},{"style":530},[3261],{"type":35,"value":1214},{"type":29,"tag":441,"props":3263,"children":3264},{"style":536},[3265],{"type":35,"value":539},{"type":29,"tag":441,"props":3267,"children":3268},{"class":525,"line":720},[3269,3273,3277],{"type":29,"tag":441,"props":3270,"children":3271},{"style":530},[3272],{"type":35,"value":581},{"type":29,"tag":441,"props":3274,"children":3275},{"style":536},[3276],{"type":35,"value":553},{"type":29,"tag":441,"props":3278,"children":3279},{"style":588},[3280],{"type":35,"value":1235},{"type":29,"tag":441,"props":3282,"children":3283},{"class":525,"line":737},[3284,3288,3292],{"type":29,"tag":441,"props":3285,"children":3286},{"style":530},[3287],{"type":35,"value":1244},{"type":29,"tag":441,"props":3289,"children":3290},{"style":536},[3291],{"type":35,"value":553},{"type":29,"tag":441,"props":3293,"children":3294},{"style":588},[3295],{"type":35,"value":1253},{"type":29,"tag":441,"props":3297,"children":3298},{"class":525,"line":755},[3299,3303,3307],{"type":29,"tag":441,"props":3300,"children":3301},{"style":530},[3302],{"type":35,"value":1262},{"type":29,"tag":441,"props":3304,"children":3305},{"style":536},[3306],{"type":35,"value":553},{"type":29,"tag":441,"props":3308,"children":3309},{"style":588},[3310],{"type":35,"value":1271},{"type":29,"tag":441,"props":3312,"children":3313},{"class":525,"line":773},[3314,3318,3322],{"type":29,"tag":441,"props":3315,"children":3316},{"style":530},[3317],{"type":35,"value":1280},{"type":29,"tag":441,"props":3319,"children":3320},{"style":536},[3321],{"type":35,"value":553},{"type":29,"tag":441,"props":3323,"children":3324},{"style":556},[3325],{"type":35,"value":1289},{"type":29,"tag":441,"props":3327,"children":3328},{"class":525,"line":794},[3329,3333,3337],{"type":29,"tag":441,"props":3330,"children":3331},{"style":530},[3332],{"type":35,"value":1298},{"type":29,"tag":441,"props":3334,"children":3335},{"style":536},[3336],{"type":35,"value":553},{"type":29,"tag":441,"props":3338,"children":3339},{"style":556},[3340],{"type":35,"value":1307},{"type":29,"tag":441,"props":3342,"children":3343},{"class":525,"line":810},[3344],{"type":29,"tag":441,"props":3345,"children":3346},{"style":1181},[3347],{"type":35,"value":3348},"  # nim_llm:\n",{"type":29,"tag":441,"props":3350,"children":3351},{"class":525,"line":827},[3352],{"type":29,"tag":441,"props":3353,"children":3354},{"style":1181},[3355],{"type":35,"value":3356},"  #   _type: nim\n",{"type":29,"tag":441,"props":3358,"children":3359},{"class":525,"line":844},[3360],{"type":29,"tag":441,"props":3361,"children":3362},{"style":1181},[3363],{"type":35,"value":3364},"  #   model_name: meta/llama-3.1-70b-instruct\n",{"type":29,"tag":441,"props":3366,"children":3367},{"class":525,"line":865},[3368],{"type":29,"tag":441,"props":3369,"children":3370},{"style":1181},[3371],{"type":35,"value":3372},"  #   max_tokens: 10000\n",{"type":29,"tag":441,"props":3374,"children":3375},{"class":525,"line":881},[3376],{"type":29,"tag":441,"props":3377,"children":3378},{"style":1181},[3379],{"type":35,"value":3380},"  #   temperature: 0.7\n",{"type":29,"tag":441,"props":3382,"children":3383},{"class":525,"line":898},[3384],{"type":29,"tag":441,"props":3385,"children":3386},{"emptyLinePlaceholder":24},[3387],{"type":35,"value":1032},{"type":29,"tag":441,"props":3389,"children":3390},{"class":525,"line":915},[3391,3395],{"type":29,"tag":441,"props":3392,"children":3393},{"style":530},[3394],{"type":35,"value":1417},{"type":29,"tag":441,"props":3396,"children":3397},{"style":536},[3398],{"type":35,"value":539},{"type":29,"tag":441,"props":3400,"children":3401},{"class":525,"line":928},[3402,3406],{"type":29,"tag":441,"props":3403,"children":3404},{"style":530},[3405],{"type":35,"value":1430},{"type":29,"tag":441,"props":3407,"children":3408},{"style":536},[3409],{"type":35,"value":539},{"type":29,"tag":441,"props":3411,"children":3412},{"class":525,"line":946},[3413,3417,3421],{"type":29,"tag":441,"props":3414,"children":3415},{"style":530},[3416],{"type":35,"value":581},{"type":29,"tag":441,"props":3418,"children":3419},{"style":536},[3420],{"type":35,"value":553},{"type":29,"tag":441,"props":3422,"children":3423},{"style":588},[3424],{"type":35,"value":1451},{"type":29,"tag":441,"props":3426,"children":3427},{"class":525,"line":959},[3428,3432,3436],{"type":29,"tag":441,"props":3429,"children":3430},{"style":530},[3431],{"type":35,"value":1460},{"type":29,"tag":441,"props":3433,"children":3434},{"style":536},[3435],{"type":35,"value":553},{"type":29,"tag":441,"props":3437,"children":3438},{"style":588},[3439],{"type":35,"value":1469},{"type":29,"tag":441,"props":3441,"children":3442},{"class":525,"line":972},[3443],{"type":29,"tag":441,"props":3444,"children":3445},{"emptyLinePlaceholder":24},[3446],{"type":35,"value":1032},{"type":29,"tag":441,"props":3448,"children":3449},{"class":525,"line":990},[3450,3454],{"type":29,"tag":441,"props":3451,"children":3452},{"style":530},[3453],{"type":35,"value":1903},{"type":29,"tag":441,"props":3455,"children":3456},{"style":536},[3457],{"type":35,"value":539},{"type":29,"tag":441,"props":3459,"children":3460},{"class":525,"line":1008},[3461,3465,3469],{"type":29,"tag":441,"props":3462,"children":3463},{"style":530},[3464],{"type":35,"value":1916},{"type":29,"tag":441,"props":3466,"children":3467},{"style":536},[3468],{"type":35,"value":553},{"type":29,"tag":441,"props":3470,"children":3471},{"style":588},[3472],{"type":35,"value":3473},"case_generation\n",{"type":29,"tag":441,"props":3475,"children":3476},{"class":525,"line":1026},[3477,3482,3486],{"type":29,"tag":441,"props":3478,"children":3479},{"style":530},[3480],{"type":35,"value":3481},"  llm_name",{"type":29,"tag":441,"props":3483,"children":3484},{"style":536},[3485],{"type":35,"value":553},{"type":29,"tag":441,"props":3487,"children":3488},{"style":588},[3489],{"type":35,"value":1555},{"type":29,"tag":441,"props":3491,"children":3492},{"class":525,"line":1035},[3493,3497,3501],{"type":29,"tag":441,"props":3494,"children":3495},{"style":530},[3496],{"type":35,"value":1951},{"type":29,"tag":441,"props":3498,"children":3499},{"style":536},[3500],{"type":35,"value":553},{"type":29,"tag":441,"props":3502,"children":3503},{"style":588},[3504],{"type":35,"value":1960},{"type":29,"tag":38,"props":3506,"children":3507},{},[3508],{"type":35,"value":3509},"I added a lot of logging to my workflow in order to keep an eye on how the workflows progressed. Here's a sample of the logs from the CLI invocation of the mediation simulator program:",{"type":29,"tag":514,"props":3511,"children":3513},{"code":3512},"12:08:48 mediation.register INFO   ‚öñÔ∏è [MEDIATOR]: Mediator node called\n12:08:56 mediation.register INFO   üë§ [CLERK] Starting clerk node - Phase: JOINT_DISCUSSION_INFO_GATHERING, Turn: 3\n12:08:56 mediation.register INFO   ü§î [CLERK] Using LLM to decide next speaker\n12:09:12 mediation.register INFO   üéØ [CLERK] LLM selected next speaker: RESPONDING_PARTY\n12:09:12 mediation.register INFO   üìä [CLERK] Updated counters - Turn: 4, Phase turns: 4\n12:09:12 mediation.register INFO   üåö Responding party node called\n12:09:20 mediation.register INFO   üë§ [CLERK] Starting clerk node - Phase: JOINT_DISCUSSION_INFO_GATHERING, Turn: 4\n12:09:20 mediation.register INFO   ü§î [CLERK] Using LLM to decide next speaker\n12:09:23 mediation.register INFO   üéØ [CLERK] LLM selected next speaker: REQUESTING_PARTY\n12:09:23 mediation.register INFO   üìä [CLERK] Updated counters - Turn: 5, Phase turns: 5\n12:09:23 mediation.register INFO   üåù Requesting party node called\n12:09:31 mediation.register INFO   üë§ [CLERK] Starting clerk node - Phase: JOINT_DISCUSSION_INFO_GATHERING, Turn: 5\n12:09:31 mediation.register INFO   ‚è∞ [CLERK] Max turns (5) reached for current phase\n12:09:31 mediation.register INFO   üîÑ [CLERK] Transitioning from joint discussion to negotiation\n12:09:31 mediation.register INFO   üë®‚Äç‚öñÔ∏è [CLERK] Mediator will start the new phase\n12:09:31 mediation.register INFO   ‚öñÔ∏è [MEDIATOR]: Mediator node called\n12:09:40 mediation.register INFO   üë§ [CLERK] Starting clerk node - Phase: NEGOTIATION_BARGAINING, Turn: 5\n12:09:40 mediation.register INFO   ü§î [CLERK] Using LLM to decide next speaker\n12:09:48 mediation.register INFO   üéØ [CLERK] LLM selected next speaker: REQUESTING_PARTY\n12:09:48 mediation.register INFO   üìä [CLERK] Updated counters - Turn: 6, Phase turns: 1\n12:09:48 mediation.register INFO   üåù Requesting party node called\n12:09:56 mediation.register INFO   üë§ [CLERK] Starting clerk node - Phase: NEGOTIATION_BARGAINING, Turn: 6\n12:09:56 mediation.register INFO   ü§î [CLERK] Using LLM to decide next speaker\n12:09:58 mediation.register INFO   üéØ [CLERK] LLM selected next speaker: RESPONDING_PARTY\n12:09:58 mediation.register INFO   üìä [CLERK] Updated counters - Turn: 7, Phase turns: 2\n",[3514],{"type":29,"tag":427,"props":3515,"children":3516},{"__ignoreMap":8},[3517],{"type":35,"value":3512},{"type":29,"tag":38,"props":3519,"children":3520},{},[3521],{"type":35,"value":3522},"Config files can be as simple or as complex as they need to be depending on your workflow.",{"type":29,"tag":38,"props":3524,"children":3525},{},[3526],{"type":35,"value":3527},"The AgentIQ Toolkit is doing something really valuable by bringing patterns and components from these (and other) frameworks into a cohesive system. This allows for some truly interesting and powerful combinations. The examples provided are excellent and taught me a lot about new patterns for building agentic workflows. ReWOO agents, for instance, were a new concept for me, as was seeing how to effectively combine LangGraph with LlamaIndex.",{"type":29,"tag":38,"props":3529,"children":3530},{},[3531],{"type":35,"value":3532},"What I particularly appreciated was:",{"type":29,"tag":88,"props":3534,"children":3535},{},[3536,3546,3556],{"type":29,"tag":92,"props":3537,"children":3538},{},[3539,3544],{"type":29,"tag":44,"props":3540,"children":3541},{},[3542],{"type":35,"value":3543},"Standardized Patterns:",{"type":35,"value":3545}," AgentIQ promotes good practices for crucial aspects of AI development, like evaluations and telemetry/tracing.",{"type":29,"tag":92,"props":3547,"children":3548},{},[3549,3554],{"type":29,"tag":44,"props":3550,"children":3551},{},[3552],{"type":35,"value":3553},"YAML Configuration:",{"type":35,"value":3555}," I really like using YAML for configuring development environments, similar to Docker Compose. It standardizes things and vastly improves readability. The way AgentIQ allows registering functions that can be included in workflows via YAML config files is a great example of this.",{"type":29,"tag":92,"props":3557,"children":3558},{},[3559,3564],{"type":29,"tag":44,"props":3560,"children":3561},{},[3562],{"type":35,"value":3563},"A Learning Goldmine:",{"type":35,"value":3565}," Working through as many examples as possible was incredibly beneficial. Reading the code helped me grasp the patterns underpinning AgentIQ. You are pretty much guaranteed to learn something new!",{"type":29,"tag":38,"props":3567,"children":3568},{},[3569],{"type":35,"value":3570},"I'm so glad I took the plunge and got my feet wet with the AgentIQ Toolkit. It's been a fantastic learning resource.",{"type":29,"tag":123,"props":3572,"children":3574},{"id":3573},"mediation-competitions-but-for-llms",[3575],{"type":35,"value":3576},"Mediation Competitions, But for LLMs?",{"type":29,"tag":38,"props":3578,"children":3579},{},[3580],{"type":35,"value":3581},"One of the fun, forward-looking ideas this project sparks is the concept of \"mediation competitions, but for LLMs.\" Imagine pitting different LLMs against each other, representing the requesting and responding parties, to see how they fare in these complex negotiation scenarios!",{"type":29,"tag":123,"props":3583,"children":3585},{"id":3584},"whats-next",[3586],{"type":35,"value":3587},"What's Next?",{"type":29,"tag":38,"props":3589,"children":3590},{},[3591],{"type":35,"value":3592},"This hackathon project has been an incredible learning journey. Building Mediation Simulator has not only been a fun technical challenge but has also opened my eyes to the potential of AI agents in simulating complex human interactions. I'm excited to continue refining it and exploring more possibilities with the AgentIQ Toolkit!",{"type":29,"tag":3594,"props":3595,"children":3596},"style",{},[3597],{"type":35,"value":3598},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":8,"searchDepth":542,"depth":542,"links":3600},[3601,3607],{"id":73,"depth":542,"text":76,"children":3602},[3603,3604,3605,3606],{"id":125,"depth":562,"text":128},{"id":222,"depth":562,"text":225},{"id":309,"depth":562,"text":312},{"id":463,"depth":562,"text":466},{"id":499,"depth":542,"text":502,"children":3608},[3609,3610,3611,3612,3613,3614,3615,3616,3617],{"id":533,"depth":562,"text":533},{"id":1041,"depth":562,"text":1041},{"id":1201,"depth":562,"text":1201},{"id":1417,"depth":562,"text":1417},{"id":1486,"depth":562,"text":1486},{"id":1819,"depth":562,"text":1819},{"id":1903,"depth":562,"text":1903},{"id":3573,"depth":562,"text":3576},{"id":3584,"depth":562,"text":3587},"markdown","content:2025:05:27:mediation-simulator-project-for-nvidia-agent-intelligence-toolkit.md","content","2025/05/27/mediation-simulator-project-for-nvidia-agent-intelligence-toolkit.md","2025/05/27/mediation-simulator-project-for-nvidia-agent-intelligence-toolkit","md",{"_path":3625,"_dir":3626,"_draft":7,"_partial":7,"_locale":8,"title":3627,"description":3628,"date":3629,"image":3630,"tags":3631,"draft":7,"external":3637,"comments":24,"body":3643,"_type":3618,"_id":9187,"_source":3620,"_file":9188,"_stem":9189,"_extension":3623},"/2024/10/09/redlm-ai-application-for-studying-chinese-literature-redology-nvidia-llama-index-developer-contest","09","RedLM: My submission for the NVIDIA and LlamaIndex Developer Contest","RedLM is an AI-powered application for the study of China's greatest classical novel: Dream of the Red Chamber","2024-11-09","/static/redlm/title.png",[14,3632,15,17,3633,3634,3635,3636],"llama-index","rag","tensorrt-llm","chinese","redology",[3638,3640],{"link":3639,"site":23},"https://x.com/briancaffey/status/1855186768452321330",{"link":3641,"site":3642},"https://dev.to/briancaffey/redlm-my-submission-for-the-nvidia-and-llamaindex-developer-contest-1c3k","dev",{"type":26,"children":3644,"toc":9149},[3645,3651,3656,3661,3667,3671,3692,3698,3703,3710,3715,3733,3739,3744,3751,3765,3769,3775,3780,3785,3798,3804,3809,3817,3822,3827,3835,3857,3865,3870,4050,4055,4168,4173,4201,4237,4243,4248,4256,4269,4277,4282,4290,4301,4314,4880,4886,4891,5686,5699,5705,5710,5718,5736,5744,5758,5764,5769,6044,6064,6341,6349,6354,6367,6373,6378,6392,6415,6423,6428,6433,6438,6446,6451,6499,6517,6546,6551,6599,6604,6609,6617,6622,6630,6635,6641,6646,6651,6659,6664,6705,6713,6718,6723,6731,6736,6795,6800,7107,7112,7117,7122,7127,7516,7521,7527,7532,7537,7550,7558,7566,7580,7588,7596,7601,7609,7617,7623,7628,7760,7770,7784,7813,8255,8267,8273,8285,8315,8327,8335,8340,8345,8353,8358,8366,8371,8379,8385,8397,8405,8419,8427,8432,8438,8443,8451,8456,8463,8468,8474,8482,8510,8515,8529,8537,8550,8558,8571,8579,8584,8590,8595,8611,8647,8661,8671,8676,8686,8691,8700,8705,8719,8740,8749,8769,8784,8797,8805,8811,8816,8821,8829,8834,8840,8849,8853,8858,8888,8893,8901,8906,8914,8919,8925,8930,8938,8943,8951,8986,8992,8997,9005,9010,9015,9035,9043,9055,9063,9068,9076,9090,9098,9103,9111,9116,9121,9129,9137,9145],{"type":29,"tag":71,"props":3646,"children":3648},{"id":3647},"tddr",[3649],{"type":35,"value":3650},"td;dr",{"type":29,"tag":38,"props":3652,"children":3653},{},[3654],{"type":35,"value":3655},"RedLM is a new way to study art and literature powered by artificial intelligence. It is an application that applies LLMs to the study of one of China‚Äôs most famous literary works: Dream of the Red Chamber. It uses leading language and vision models from Chinese AI groups including Alibaba‚Äôs Qwen, Baichuan Intelligence Technology and 01.AI. RedLM uses tools, techniques and services from NVIDIA and LlamaIndex including NVIDIA NIMs, Retrieval Augmented Generation and Multi-Modal RAG with vision language models. This project is my submission for the NVIDIA and LlamaIndex Developer Contest.",{"type":29,"tag":38,"props":3657,"children":3658},{},[3659],{"type":35,"value":3660},"This article will cover how I built the project, challenges I faced and some of the lessons I learned while working with NVIDIA and LlamaIndex technologies.",{"type":29,"tag":123,"props":3662,"children":3664},{"id":3663},"links",[3665],{"type":35,"value":3666},"Links",{"type":29,"tag":3668,"props":3669,"children":3670},"red-lm-tweet",{},[],{"type":29,"tag":88,"props":3672,"children":3673},{},[3674,3682],{"type":29,"tag":92,"props":3675,"children":3676},{},[3677],{"type":29,"tag":57,"props":3678,"children":3680},{"href":3639,"rel":3679},[60],[3681],{"type":35,"value":63},{"type":29,"tag":92,"props":3683,"children":3684},{},[3685],{"type":29,"tag":57,"props":3686,"children":3689},{"href":3687,"rel":3688},"https://github.com/briancaffey/RedLM",[60],[3690],{"type":35,"value":3691},"RedLM GitHub repository",{"type":29,"tag":71,"props":3693,"children":3695},{"id":3694},"what-is-redlm",[3696],{"type":35,"value":3697},"What is RedLM?",{"type":29,"tag":38,"props":3699,"children":3700},{},[3701],{"type":35,"value":3702},"RedLM is a combination of the word ‚ÄúRed‚Äù and LM, an abbreviation for ‚Äúlanguage model‚Äù. Dream of the Red Chamber is such an important book in Chinese literature that it has its own field of study called Á∫¢Â≠¶ (literally ‚Äúthe study of red‚Äù), or Redology. So, RedLM is an application that uses language models for the study of Redology.",{"type":29,"tag":38,"props":3704,"children":3705},{},[3706],{"type":29,"tag":192,"props":3707,"children":3709},{"alt":3708,"src":3630},"RedLM",[],{"type":29,"tag":38,"props":3711,"children":3712},{},[3713],{"type":35,"value":3714},"In this project I focused on three applications of language models:",{"type":29,"tag":135,"props":3716,"children":3717},{},[3718,3723,3728],{"type":29,"tag":92,"props":3719,"children":3720},{},[3721],{"type":35,"value":3722},"Summary and translation of the source text",{"type":29,"tag":92,"props":3724,"children":3725},{},[3726],{"type":35,"value":3727},"A Q&A bot that can answer questions about the book providing references to the specific paragraphs used to give answers",{"type":29,"tag":92,"props":3729,"children":3730},{},[3731],{"type":35,"value":3732},"An image-based Q&A bot that can answer questions about sections of paintings that depict scenes from each of the book‚Äôs chapters.",{"type":29,"tag":71,"props":3734,"children":3736},{"id":3735},"notebooklm",[3737],{"type":35,"value":3738},"NotebookLM",{"type":29,"tag":38,"props":3740,"children":3741},{},[3742],{"type":35,"value":3743},"I used this article to create a \"Deep Dive\" podcast episode for RedLM using Google's NotebookLM.",{"type":29,"tag":38,"props":3745,"children":3746},{},[3747],{"type":29,"tag":192,"props":3748,"children":3750},{"alt":3738,"src":3749},"/static/redlm/notebooklm.png",[],{"type":29,"tag":38,"props":3752,"children":3753},{},[3754,3756,3763],{"type":35,"value":3755},"You can ",{"type":29,"tag":57,"props":3757,"children":3760},{"href":3758,"rel":3759},"https://x.com/briancaffey/status/1855186771409244491",[60],[3761],{"type":35,"value":3762},"listen to this podcast episode here on ùïè",{"type":35,"value":3764},".",{"type":29,"tag":3766,"props":3767,"children":3768},"red-lm-deep-dive-video",{},[],{"type":29,"tag":71,"props":3770,"children":3772},{"id":3771},"how-i-built-redlm",[3773],{"type":35,"value":3774},"How I built RedLM",{"type":29,"tag":38,"props":3776,"children":3777},{},[3778],{"type":35,"value":3779},"RedLM consists of two parts: a web UI built with Vue 3 using the Nuxt Framework and a backend API built with Python, FastAPI and LlamaIndex. There are lots of great tools for building full-stack AI applications such as Gradio and Streamlit, but I wanted to build with the web tools that I‚Äôm most familiar with and that provide the most flexibility. These frameworks (Nuxt and FastAPI) are simple and effective and they allowed me to develop quickly.",{"type":29,"tag":38,"props":3781,"children":3782},{},[3783],{"type":35,"value":3784},"Most of the code for this project was written by AI. I used OpenAI‚Äôs ChatGPT 4o, Anthropic‚Äôs Claude 3.5 Sonnet and 01.AI‚Äôs Yi-1.5-9B-Chat model. In my development process with AI, I prompted for one logical piece of the application at a time, such as one API route, one Vue component, one pinia store or one utility function, for example. In this article I'll share some of the prompts I used in my development workflow.",{"type":29,"tag":38,"props":3786,"children":3787},{},[3788,3790,3796],{"type":35,"value":3789},"This project embraces a hybrid AI inference model, meaning that the AI inference can be done either on local RTX PCs or using NVIDIA‚Äôs Cloud APIs from ",{"type":29,"tag":427,"props":3791,"children":3793},{"className":3792},[],[3794],{"type":35,"value":3795},"build.nvidia.com",{"type":35,"value":3797}," depending on configuration via environment variables. I used PCs with NVIDIA GeForce RTX 4090 GPUs to do inference with language and vision models, and with a change of configuration, I was able to do similar inference using NVIDIA‚Äôs API endpoints. This allowed me to develop the project both on powerful RTX desktop workstations and Mac laptops.",{"type":29,"tag":71,"props":3799,"children":3801},{"id":3800},"translating-dream-of-the-red-chamber-with-tensorrt-llm",[3802],{"type":35,"value":3803},"Translating Dream of the Red Chamber with TensorRT-LLM",{"type":29,"tag":38,"props":3805,"children":3806},{},[3807],{"type":35,"value":3808},"Translation is often mentioned as one of the capabilities of bilingual LLMs from China. I wanted to try translating this book from Chinese to English, but I also wanted to better understand the meaning of the original text written in vernacular Chinese. Written vernacular Chinese is essentially a form of Chinese that closely resembles the way Chinese was spoken in imperial China by common people. The use of vernacular Chinese (Baihua) in literary works marked a significant cultural shift that started to make literature and education more accessible. Before the emergence of written vernacular Chinese, Chinese literature was dominated by Classical Chinese (Wenyanwen) which is a more concise, ambiguous and specialized for of languages that assumes an understanding of ancient texts and Confucian classics. The difference between vernacular Chinese and modern Mandarin Chinese is somewhat analogous to the different between Shakespearian English (Early Modern English) and Modern English.",{"type":29,"tag":38,"props":3810,"children":3811},{},[3812],{"type":29,"tag":192,"props":3813,"children":3816},{"alt":3814,"src":3815},"Baihua, Mandarin and English","/static/redlm/translations.png",[],{"type":29,"tag":38,"props":3818,"children":3819},{},[3820],{"type":35,"value":3821},"Chinese large language models are well versed in Classical Chinese, written Chinese vernacular and modern Mandarin Chinese. I decided to rewrite the original vernacular text in simple, modern Mandarin Chinese and then using this new modern Mandarin version, translate the story into English.",{"type":29,"tag":38,"props":3823,"children":3824},{},[3825],{"type":35,"value":3826},"Dream of the Red Chamber is a large book. It is composed of over 800,000 Chinese characters, using 4303 unique Chinese characters. It has 120 chapters and a total of 3996 paragraphs. Here is a histogram showing the number of characters per paragraph.",{"type":29,"tag":38,"props":3828,"children":3829},{},[3830],{"type":29,"tag":192,"props":3831,"children":3834},{"alt":3832,"src":3833},"Paragraph lengths","/static/redlm/paragraphs.png",[],{"type":29,"tag":38,"props":3836,"children":3837},{},[3838,3840,3847,3849,3855],{"type":35,"value":3839},"I rented a large multi-GPU instance from AWS using some of the credits I get as a member of the AWS Community Builders program. The g5.12xlarge instance I selected has 4 A10G Tensor Core GPUs. The TensorRT-LLM LLM API is a relatively new part of the TensorRT-LLM library. It provides a very simple, high-level interface for doing inference. Following the ",{"type":29,"tag":57,"props":3841,"children":3844},{"href":3842,"rel":3843},"https://nvidia.github.io/TensorRT-LLM/llm-api-examples/llm_inference_distributed.html",[60],[3845],{"type":35,"value":3846},"LLM Generate Distributed example",{"type":35,"value":3848}," from the TensorRT-LLM documentation, I was able to translate the entire book into simple Mandarin and then from Mandarin into English in about an hour and 15 minutes. The ",{"type":29,"tag":427,"props":3850,"children":3852},{"className":3851},[],[3853],{"type":35,"value":3854},"tensor_parallel_size",{"type":35,"value":3856}," option in the LLM API allows for distributed inference, this meant that up to 4 paragraphs could be translated at the same time on different GPUs on the same EC2 instance.",{"type":29,"tag":514,"props":3858,"children":3860},{"code":3859},"Translating: data/book/22.json\nProcessed requests: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 38/38 [00:15\u003C00:00,  2.41it/s]\nProcessed requests: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 38/38 [00:24\u003C00:00,  1.54it/s]\nTranslated: data/book/22.json\nTranslating: data/book/114.json\nProcessed requests: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:11\u003C00:00,  1.81it/s]\nProcessed requests: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:12\u003C00:00,  1.58it/s]\nTranslated: data/book/114.json\n[TensorRT-LLM][INFO] Refreshed the MPI local session\n[TensorRT-LLM][INFO] Refreshed the MPI local session\n[TensorRT-LLM][INFO] Refreshed the MPI local session\n[TensorRT-LLM][INFO] Refreshed the MPI local session\n\nreal    74m1.578s\nuser    0m45.936s\nsys 0m36.283s\n",[3861],{"type":29,"tag":427,"props":3862,"children":3863},{"__ignoreMap":8},[3864],{"type":35,"value":3859},{"type":29,"tag":38,"props":3866,"children":3867},{},[3868],{"type":35,"value":3869},"Getting good results required a bit of experimentation with parameters. The LLM API makes this very easy. The following code configures settings and builds the inference engine that can be used for doing completions:",{"type":29,"tag":514,"props":3871,"children":3873},{"code":3872,"language":2049,"meta":8,"className":2050,"style":8},"sampling_params = SamplingParams(temperature=0.7, top_p=0.95, max_tokens=256)\nbuild_config = BuildConfig(max_seq_len=2048)\nllm = LLM(model=MODEL, build_config=build_config, tensor_parallel_size=4)\n",[3874],{"type":29,"tag":427,"props":3875,"children":3876},{"__ignoreMap":8},[3877,3949,3984],{"type":29,"tag":441,"props":3878,"children":3879},{"class":525,"line":526},[3880,3885,3889,3894,3899,3903,3908,3912,3917,3921,3926,3930,3935,3939,3944],{"type":29,"tag":441,"props":3881,"children":3882},{"style":536},[3883],{"type":35,"value":3884},"sampling_params ",{"type":29,"tag":441,"props":3886,"children":3887},{"style":2077},[3888],{"type":35,"value":2080},{"type":29,"tag":441,"props":3890,"children":3891},{"style":536},[3892],{"type":35,"value":3893}," SamplingParams(",{"type":29,"tag":441,"props":3895,"children":3896},{"style":2071},[3897],{"type":35,"value":3898},"temperature",{"type":29,"tag":441,"props":3900,"children":3901},{"style":2077},[3902],{"type":35,"value":2080},{"type":29,"tag":441,"props":3904,"children":3905},{"style":556},[3906],{"type":35,"value":3907},"0.7",{"type":29,"tag":441,"props":3909,"children":3910},{"style":536},[3911],{"type":35,"value":2193},{"type":29,"tag":441,"props":3913,"children":3914},{"style":2071},[3915],{"type":35,"value":3916},"top_p",{"type":29,"tag":441,"props":3918,"children":3919},{"style":2077},[3920],{"type":35,"value":2080},{"type":29,"tag":441,"props":3922,"children":3923},{"style":556},[3924],{"type":35,"value":3925},"0.95",{"type":29,"tag":441,"props":3927,"children":3928},{"style":536},[3929],{"type":35,"value":2193},{"type":29,"tag":441,"props":3931,"children":3932},{"style":2071},[3933],{"type":35,"value":3934},"max_tokens",{"type":29,"tag":441,"props":3936,"children":3937},{"style":2077},[3938],{"type":35,"value":2080},{"type":29,"tag":441,"props":3940,"children":3941},{"style":556},[3942],{"type":35,"value":3943},"256",{"type":29,"tag":441,"props":3945,"children":3946},{"style":536},[3947],{"type":35,"value":3948},")\n",{"type":29,"tag":441,"props":3950,"children":3951},{"class":525,"line":542},[3952,3957,3961,3966,3971,3975,3980],{"type":29,"tag":441,"props":3953,"children":3954},{"style":536},[3955],{"type":35,"value":3956},"build_config ",{"type":29,"tag":441,"props":3958,"children":3959},{"style":2077},[3960],{"type":35,"value":2080},{"type":29,"tag":441,"props":3962,"children":3963},{"style":536},[3964],{"type":35,"value":3965}," BuildConfig(",{"type":29,"tag":441,"props":3967,"children":3968},{"style":2071},[3969],{"type":35,"value":3970},"max_seq_len",{"type":29,"tag":441,"props":3972,"children":3973},{"style":2077},[3974],{"type":35,"value":2080},{"type":29,"tag":441,"props":3976,"children":3977},{"style":556},[3978],{"type":35,"value":3979},"2048",{"type":29,"tag":441,"props":3981,"children":3982},{"style":536},[3983],{"type":35,"value":3948},{"type":29,"tag":441,"props":3985,"children":3986},{"class":525,"line":562},[3987,3992,3996,4001,4006,4010,4015,4019,4024,4028,4033,4037,4041,4046],{"type":29,"tag":441,"props":3988,"children":3989},{"style":536},[3990],{"type":35,"value":3991},"llm ",{"type":29,"tag":441,"props":3993,"children":3994},{"style":2077},[3995],{"type":35,"value":2080},{"type":29,"tag":441,"props":3997,"children":3998},{"style":536},[3999],{"type":35,"value":4000}," LLM(",{"type":29,"tag":441,"props":4002,"children":4003},{"style":2071},[4004],{"type":35,"value":4005},"model",{"type":29,"tag":441,"props":4007,"children":4008},{"style":2077},[4009],{"type":35,"value":2080},{"type":29,"tag":441,"props":4011,"children":4012},{"style":556},[4013],{"type":35,"value":4014},"MODEL",{"type":29,"tag":441,"props":4016,"children":4017},{"style":536},[4018],{"type":35,"value":2193},{"type":29,"tag":441,"props":4020,"children":4021},{"style":2071},[4022],{"type":35,"value":4023},"build_config",{"type":29,"tag":441,"props":4025,"children":4026},{"style":2077},[4027],{"type":35,"value":2080},{"type":29,"tag":441,"props":4029,"children":4030},{"style":536},[4031],{"type":35,"value":4032},"build_config, ",{"type":29,"tag":441,"props":4034,"children":4035},{"style":2071},[4036],{"type":35,"value":3854},{"type":29,"tag":441,"props":4038,"children":4039},{"style":2077},[4040],{"type":35,"value":2080},{"type":29,"tag":441,"props":4042,"children":4043},{"style":556},[4044],{"type":35,"value":4045},"4",{"type":29,"tag":441,"props":4047,"children":4048},{"style":536},[4049],{"type":35,"value":3948},{"type":29,"tag":38,"props":4051,"children":4052},{},[4053],{"type":35,"value":4054},"I used the following prompts to rewrite each paragraph of the original text in simple, modern Mandarin Chinese:",{"type":29,"tag":514,"props":4056,"children":4058},{"code":4057,"language":2049,"meta":8,"className":2050,"style":8},"bai_prompts = [\n    # Here are examples of how to rewrite Chinese vernacular into simple modern Mandarin.\\n\\nChinese vernacular:\\n\\n{p}\\n\\nSimple modern Mandarin\n    f\"‰ª•‰∏ãÊòØÂ¶Ç‰ΩïÂ∞Ü‰∏≠ÂõΩÁôΩËØùÊîπÂÜô‰∏∫ÁÆÄÂçïÁöÑÁé∞‰ª£ÊôÆÈÄöËØùÁöÑÁ§∫‰æã„ÄÇ\\n\\n‰∏≠ÊñáÁôΩËØùÔºö\\n\\n{p}\\n\\nÁÆÄÂçïÁöÑÁé∞‰ª£ÊôÆÈÄöËØùÔºö\\n\\n\"\n    for p in flat_bai\n]\n",[4059],{"type":29,"tag":427,"props":4060,"children":4061},{"__ignoreMap":8},[4062,4079,4087,4138,4161],{"type":29,"tag":441,"props":4063,"children":4064},{"class":525,"line":526},[4065,4070,4074],{"type":29,"tag":441,"props":4066,"children":4067},{"style":536},[4068],{"type":35,"value":4069},"bai_prompts ",{"type":29,"tag":441,"props":4071,"children":4072},{"style":2077},[4073],{"type":35,"value":2080},{"type":29,"tag":441,"props":4075,"children":4076},{"style":536},[4077],{"type":35,"value":4078}," [\n",{"type":29,"tag":441,"props":4080,"children":4081},{"class":525,"line":542},[4082],{"type":29,"tag":441,"props":4083,"children":4084},{"style":1181},[4085],{"type":35,"value":4086},"    # Here are examples of how to rewrite Chinese vernacular into simple modern Mandarin.\\n\\nChinese vernacular:\\n\\n{p}\\n\\nSimple modern Mandarin\n",{"type":29,"tag":441,"props":4088,"children":4089},{"class":525,"line":562},[4090,4095,4100,4105,4110,4115,4119,4124,4129,4133],{"type":29,"tag":441,"props":4091,"children":4092},{"style":2091},[4093],{"type":35,"value":4094},"    f",{"type":29,"tag":441,"props":4096,"children":4097},{"style":588},[4098],{"type":35,"value":4099},"\"‰ª•‰∏ãÊòØÂ¶Ç‰ΩïÂ∞Ü‰∏≠ÂõΩÁôΩËØùÊîπÂÜô‰∏∫ÁÆÄÂçïÁöÑÁé∞‰ª£ÊôÆÈÄöËØùÁöÑÁ§∫‰æã„ÄÇ",{"type":29,"tag":441,"props":4101,"children":4102},{"style":556},[4103],{"type":35,"value":4104},"\\n\\n",{"type":29,"tag":441,"props":4106,"children":4107},{"style":588},[4108],{"type":35,"value":4109},"‰∏≠ÊñáÁôΩËØùÔºö",{"type":29,"tag":441,"props":4111,"children":4112},{"style":556},[4113],{"type":35,"value":4114},"\\n\\n{",{"type":29,"tag":441,"props":4116,"children":4117},{"style":536},[4118],{"type":35,"value":38},{"type":29,"tag":441,"props":4120,"children":4121},{"style":556},[4122],{"type":35,"value":4123},"}\\n\\n",{"type":29,"tag":441,"props":4125,"children":4126},{"style":588},[4127],{"type":35,"value":4128},"ÁÆÄÂçïÁöÑÁé∞‰ª£ÊôÆÈÄöËØùÔºö",{"type":29,"tag":441,"props":4130,"children":4131},{"style":556},[4132],{"type":35,"value":4104},{"type":29,"tag":441,"props":4134,"children":4135},{"style":588},[4136],{"type":35,"value":4137},"\"\n",{"type":29,"tag":441,"props":4139,"children":4140},{"class":525,"line":575},[4141,4146,4151,4156],{"type":29,"tag":441,"props":4142,"children":4143},{"style":2077},[4144],{"type":35,"value":4145},"    for",{"type":29,"tag":441,"props":4147,"children":4148},{"style":536},[4149],{"type":35,"value":4150}," p ",{"type":29,"tag":441,"props":4152,"children":4153},{"style":2077},[4154],{"type":35,"value":4155},"in",{"type":29,"tag":441,"props":4157,"children":4158},{"style":536},[4159],{"type":35,"value":4160}," flat_bai\n",{"type":29,"tag":441,"props":4162,"children":4163},{"class":525,"line":594},[4164],{"type":29,"tag":441,"props":4165,"children":4166},{"style":536},[4167],{"type":35,"value":628},{"type":29,"tag":38,"props":4169,"children":4170},{},[4171],{"type":35,"value":4172},"It was difficult to get good results consistently. Here are some observations I had:",{"type":29,"tag":88,"props":4174,"children":4175},{},[4176,4181,4186,4191,4196],{"type":29,"tag":92,"props":4177,"children":4178},{},[4179],{"type":35,"value":4180},"Some of the translated paragraphs were perfect",{"type":29,"tag":92,"props":4182,"children":4183},{},[4184],{"type":35,"value":4185},"some translated paragraphs would randomly hallucinate the same phrase over and over again",{"type":29,"tag":92,"props":4187,"children":4188},{},[4189],{"type":35,"value":4190},"Some requests to translate text to English would reply in Mandarin Chinese rather than in English",{"type":29,"tag":92,"props":4192,"children":4193},{},[4194],{"type":35,"value":4195},"Sometimes I would even see computer code generated when asking for a translation",{"type":29,"tag":92,"props":4197,"children":4198},{},[4199],{"type":35,"value":4200},"The names of characters were sometimes translated inconsistently, sometimes literally and sometimes using differing versions of pinyin, the Romanization system for transcribing the sounds of Mandarin Chinese",{"type":29,"tag":38,"props":4202,"children":4203},{},[4204,4206,4212,4214,4220,4222,4228,4230,4235],{"type":35,"value":4205},"I found that ChatGPT 4o could handle any Chinese translation task flawlessly, but the ",{"type":29,"tag":427,"props":4207,"children":4209},{"className":4208},[],[4210],{"type":35,"value":4211},"Qwen2-7B",{"type":35,"value":4213}," model I used had mixed results! The change that I made that seemed to have the biggest impact on translation quality was setting ",{"type":29,"tag":427,"props":4215,"children":4217},{"className":4216},[],[4218],{"type":35,"value":4219},"*max_tokens*=256",{"type":35,"value":4221}," in ",{"type":29,"tag":427,"props":4223,"children":4225},{"className":4224},[],[4226],{"type":35,"value":4227},"SamplingParams",{"type":35,"value":4229},". I probably could have used a dynamic value for ",{"type":29,"tag":427,"props":4231,"children":4233},{"className":4232},[],[4234],{"type":35,"value":3934},{"type":35,"value":4236}," based on the size of the current paragraph being translated. I also would have like to set up side-by-side comparisons of translations using different sized models, but rather than spend time and AWS credits on optimizing translation with TensorRT-LLM, I wanted to focus on the main part of this project: retrieval augmented generation (RAG) with LlamaIndex.",{"type":29,"tag":71,"props":4238,"children":4240},{"id":4239},"building-qa-bots-with-rag-using-llamaindex",[4241],{"type":35,"value":4242},"Building Q&A bots with RAG using LlamaIndex",{"type":29,"tag":38,"props":4244,"children":4245},{},[4246],{"type":35,"value":4247},"My primary objective with this project was to implement a simple chat bot that responds to questions about the book with references to the specific paragraphs used in the response. The following shows images of the UI I built with one of the examples I included in the video I made for this project.",{"type":29,"tag":38,"props":4249,"children":4250},{},[4251],{"type":29,"tag":192,"props":4252,"children":4255},{"alt":4253,"src":4254},"RAG Example","/static/redlm/rag_example.png",[],{"type":29,"tag":38,"props":4257,"children":4258},{},[4259,4261,4267],{"type":35,"value":4260},"I haven't read that much of the book before working on this project, but I have read a lot ",{"type":29,"tag":4262,"props":4263,"children":4264},"em",{},[4265],{"type":35,"value":4266},"about",{"type":35,"value":4268}," this book's characters, major themes and plot. This Q&A bot was a very interesting entrypoint to explore specific passages of the book starting with questions coming from my knowledge about the book. The question in the screenshots above is: ‚ÄúWhat does Jia Baoyu‚Äôs father think about him?‚Äù The response includes references to paragraphs where Jia Zheng (Baoyu‚Äôs father) is discussing his son. I was pretty amazed that the RAG query was able to pull out these two paragraphs.",{"type":29,"tag":38,"props":4270,"children":4271},{},[4272],{"type":29,"tag":4262,"props":4273,"children":4274},{},[4275],{"type":35,"value":4276},"In Dream of the Red Chamber, the relationship between protagonist Jia Baoyu and his father, Jia Zheng, is complex and fraught with tension. Jia Zheng, a strict, traditional Confucian patriarch, embodies values of discipline, scholarly rigor, and duty. He expects his son to excel in his studies and uphold the family‚Äôs honor by pursuing an official career in government. Baoyu, however, is sensitive, imaginative, and inclined toward poetry and the company of women, especially his cousins Lin Daiyu and Xue Baochai. This preference clashes with Jia Zheng‚Äôs expectations, leading to frequent misunderstandings and disappointment.",{"type":29,"tag":38,"props":4278,"children":4279},{},[4280],{"type":35,"value":4281},"By default, LlamaIndex uses cosine similarity as the distance metric for finding the vectors representing the documents (paragraphs) that are ‚Äúclosest‚Äù to the vector representing the user query. This is the central mechanism by which RAG works. LlamaIndex provides an abstraction of this process, hiding the implementation details and allowing rapid development of retrieval systems.",{"type":29,"tag":38,"props":4283,"children":4284},{},[4285],{"type":29,"tag":192,"props":4286,"children":4289},{"alt":4287,"src":4288},"Cosine Similarity","/static/redlm/cosine_similarity.png",[],{"type":29,"tag":38,"props":4291,"children":4292},{},[4293,4295],{"type":35,"value":4294},"Source: ",{"type":29,"tag":57,"props":4296,"children":4299},{"href":4297,"rel":4298},"https://medium.com/@kbdhunga/a-beginners-guide-to-similarity-search-vector-indexing-part-one-9cf5e9171976",[60],[4300],{"type":35,"value":4297},{"type":29,"tag":38,"props":4302,"children":4303},{},[4304,4306,4312],{"type":35,"value":4305},"Here is some of the code I wrote for the text-based Q&A bot using LlamaIndex‚Äôs ",{"type":29,"tag":427,"props":4307,"children":4309},{"className":4308},[],[4310],{"type":35,"value":4311},"CustomQueryEngine",{"type":35,"value":4313}," class to fetch the nodes from which I get the referenced paragraph text, chapter number and paragraph number.",{"type":29,"tag":514,"props":4315,"children":4317},{"code":4316,"language":2049,"meta":8,"className":2050,"style":8},"class QAndAQueryEngine(CustomQueryEngine):\n    \"\"\"RAG Completion Query Engine optimized for Q&A\"\"\"\n\n    retriever: BaseRetriever\n    response_synthesizer: BaseSynthesizer\n    llm: OpenAILike\n    qa_prompt: PromptTemplate\n\n    def custom_query(self, query_str: str):\n        nodes = self.retriever.retrieve(query_str)\n        metadata = []\n        # Collect the metadata into a list of dicts so that it can be sent to UI for references\n        for node in nodes:\n            metadata_dict = {}\n            node_metadata = node.node.metadata\n            metadata_dict[\"content\"] = node.node.text\n            metadata_dict[\"chapter\"] = int(node_metadata.get(\"chapter\"))\n            metadata_dict[\"paragraph\"] = int(node_metadata.get(\"paragraph\"))\n\n            metadata.append(metadata_dict)\n\n        context_str = \"\\n\\n\".join([n.node.get_content() for n in nodes])\n        response = self.llm.chat(\n            [\n                ChatMessage(\n                    role=\"user\",\n                    content=q_and_a_prompt.format( # the English and Chinese prompt templates are discussed below\n                        context_str=context_str, query_str=query_str\n                    ),\n                )\n            ]\n        )\n\n        return response, metadata\n",[4318],{"type":29,"tag":427,"props":4319,"children":4320},{"__ignoreMap":8},[4321,4346,4354,4361,4369,4377,4385,4393,4400,4442,4463,4480,4488,4510,4527,4544,4571,4610,4646,4653,4661,4668,4717,4738,4746,4754,4776,4798,4828,4836,4844,4852,4860,4867],{"type":29,"tag":441,"props":4322,"children":4323},{"class":525,"line":526},[4324,4329,4334,4338,4342],{"type":29,"tag":441,"props":4325,"children":4326},{"style":2091},[4327],{"type":35,"value":4328},"class",{"type":29,"tag":441,"props":4330,"children":4331},{"style":2147},[4332],{"type":35,"value":4333}," QAndAQueryEngine",{"type":29,"tag":441,"props":4335,"children":4336},{"style":536},[4337],{"type":35,"value":2068},{"type":29,"tag":441,"props":4339,"children":4340},{"style":2157},[4341],{"type":35,"value":4311},{"type":29,"tag":441,"props":4343,"children":4344},{"style":536},[4345],{"type":35,"value":2165},{"type":29,"tag":441,"props":4347,"children":4348},{"class":525,"line":542},[4349],{"type":29,"tag":441,"props":4350,"children":4351},{"style":588},[4352],{"type":35,"value":4353},"    \"\"\"RAG Completion Query Engine optimized for Q&A\"\"\"\n",{"type":29,"tag":441,"props":4355,"children":4356},{"class":525,"line":562},[4357],{"type":29,"tag":441,"props":4358,"children":4359},{"emptyLinePlaceholder":24},[4360],{"type":35,"value":1032},{"type":29,"tag":441,"props":4362,"children":4363},{"class":525,"line":575},[4364],{"type":29,"tag":441,"props":4365,"children":4366},{"style":536},[4367],{"type":35,"value":4368},"    retriever: BaseRetriever\n",{"type":29,"tag":441,"props":4370,"children":4371},{"class":525,"line":594},[4372],{"type":29,"tag":441,"props":4373,"children":4374},{"style":536},[4375],{"type":35,"value":4376},"    response_synthesizer: BaseSynthesizer\n",{"type":29,"tag":441,"props":4378,"children":4379},{"class":525,"line":607},[4380],{"type":29,"tag":441,"props":4381,"children":4382},{"style":536},[4383],{"type":35,"value":4384},"    llm: OpenAILike\n",{"type":29,"tag":441,"props":4386,"children":4387},{"class":525,"line":631},[4388],{"type":29,"tag":441,"props":4389,"children":4390},{"style":536},[4391],{"type":35,"value":4392},"    qa_prompt: PromptTemplate\n",{"type":29,"tag":441,"props":4394,"children":4395},{"class":525,"line":644},[4396],{"type":29,"tag":441,"props":4397,"children":4398},{"emptyLinePlaceholder":24},[4399],{"type":35,"value":1032},{"type":29,"tag":441,"props":4401,"children":4402},{"class":525,"line":658},[4403,4408,4413,4417,4421,4425,4430,4434,4438],{"type":29,"tag":441,"props":4404,"children":4405},{"style":2091},[4406],{"type":35,"value":4407},"    def",{"type":29,"tag":441,"props":4409,"children":4410},{"style":2060},[4411],{"type":35,"value":4412}," custom_query",{"type":29,"tag":441,"props":4414,"children":4415},{"style":536},[4416],{"type":35,"value":2068},{"type":29,"tag":441,"props":4418,"children":4419},{"style":2111},[4420],{"type":35,"value":2188},{"type":29,"tag":441,"props":4422,"children":4423},{"style":536},[4424],{"type":35,"value":2193},{"type":29,"tag":441,"props":4426,"children":4427},{"style":2111},[4428],{"type":35,"value":4429},"query_str",{"type":29,"tag":441,"props":4431,"children":4432},{"style":536},[4433],{"type":35,"value":553},{"type":29,"tag":441,"props":4435,"children":4436},{"style":2303},[4437],{"type":35,"value":2306},{"type":29,"tag":441,"props":4439,"children":4440},{"style":536},[4441],{"type":35,"value":2165},{"type":29,"tag":441,"props":4443,"children":4444},{"class":525,"line":671},[4445,4450,4454,4458],{"type":29,"tag":441,"props":4446,"children":4447},{"style":536},[4448],{"type":35,"value":4449},"        nodes ",{"type":29,"tag":441,"props":4451,"children":4452},{"style":2077},[4453],{"type":35,"value":2080},{"type":29,"tag":441,"props":4455,"children":4456},{"style":2208},[4457],{"type":35,"value":2493},{"type":29,"tag":441,"props":4459,"children":4460},{"style":536},[4461],{"type":35,"value":4462},".retriever.retrieve(query_str)\n",{"type":29,"tag":441,"props":4464,"children":4465},{"class":525,"line":684},[4466,4471,4475],{"type":29,"tag":441,"props":4467,"children":4468},{"style":536},[4469],{"type":35,"value":4470},"        metadata ",{"type":29,"tag":441,"props":4472,"children":4473},{"style":2077},[4474],{"type":35,"value":2080},{"type":29,"tag":441,"props":4476,"children":4477},{"style":536},[4478],{"type":35,"value":4479}," []\n",{"type":29,"tag":441,"props":4481,"children":4482},{"class":525,"line":697},[4483],{"type":29,"tag":441,"props":4484,"children":4485},{"style":1181},[4486],{"type":35,"value":4487},"        # Collect the metadata into a list of dicts so that it can be sent to UI for references\n",{"type":29,"tag":441,"props":4489,"children":4490},{"class":525,"line":720},[4491,4496,4501,4505],{"type":29,"tag":441,"props":4492,"children":4493},{"style":2077},[4494],{"type":35,"value":4495},"        for",{"type":29,"tag":441,"props":4497,"children":4498},{"style":536},[4499],{"type":35,"value":4500}," node ",{"type":29,"tag":441,"props":4502,"children":4503},{"style":2077},[4504],{"type":35,"value":4155},{"type":29,"tag":441,"props":4506,"children":4507},{"style":536},[4508],{"type":35,"value":4509}," nodes:\n",{"type":29,"tag":441,"props":4511,"children":4512},{"class":525,"line":737},[4513,4518,4522],{"type":29,"tag":441,"props":4514,"children":4515},{"style":536},[4516],{"type":35,"value":4517},"            metadata_dict ",{"type":29,"tag":441,"props":4519,"children":4520},{"style":2077},[4521],{"type":35,"value":2080},{"type":29,"tag":441,"props":4523,"children":4524},{"style":536},[4525],{"type":35,"value":4526}," {}\n",{"type":29,"tag":441,"props":4528,"children":4529},{"class":525,"line":755},[4530,4535,4539],{"type":29,"tag":441,"props":4531,"children":4532},{"style":536},[4533],{"type":35,"value":4534},"            node_metadata ",{"type":29,"tag":441,"props":4536,"children":4537},{"style":2077},[4538],{"type":35,"value":2080},{"type":29,"tag":441,"props":4540,"children":4541},{"style":536},[4542],{"type":35,"value":4543}," node.node.metadata\n",{"type":29,"tag":441,"props":4545,"children":4546},{"class":525,"line":773},[4547,4552,4557,4562,4566],{"type":29,"tag":441,"props":4548,"children":4549},{"style":536},[4550],{"type":35,"value":4551},"            metadata_dict[",{"type":29,"tag":441,"props":4553,"children":4554},{"style":588},[4555],{"type":35,"value":4556},"\"content\"",{"type":29,"tag":441,"props":4558,"children":4559},{"style":536},[4560],{"type":35,"value":4561},"] ",{"type":29,"tag":441,"props":4563,"children":4564},{"style":2077},[4565],{"type":35,"value":2080},{"type":29,"tag":441,"props":4567,"children":4568},{"style":536},[4569],{"type":35,"value":4570}," node.node.text\n",{"type":29,"tag":441,"props":4572,"children":4573},{"class":525,"line":794},[4574,4578,4583,4587,4591,4596,4601,4605],{"type":29,"tag":441,"props":4575,"children":4576},{"style":536},[4577],{"type":35,"value":4551},{"type":29,"tag":441,"props":4579,"children":4580},{"style":588},[4581],{"type":35,"value":4582},"\"chapter\"",{"type":29,"tag":441,"props":4584,"children":4585},{"style":536},[4586],{"type":35,"value":4561},{"type":29,"tag":441,"props":4588,"children":4589},{"style":2077},[4590],{"type":35,"value":2080},{"type":29,"tag":441,"props":4592,"children":4593},{"style":2303},[4594],{"type":35,"value":4595}," int",{"type":29,"tag":441,"props":4597,"children":4598},{"style":536},[4599],{"type":35,"value":4600},"(node_metadata.get(",{"type":29,"tag":441,"props":4602,"children":4603},{"style":588},[4604],{"type":35,"value":4582},{"type":29,"tag":441,"props":4606,"children":4607},{"style":536},[4608],{"type":35,"value":4609},"))\n",{"type":29,"tag":441,"props":4611,"children":4612},{"class":525,"line":810},[4613,4617,4622,4626,4630,4634,4638,4642],{"type":29,"tag":441,"props":4614,"children":4615},{"style":536},[4616],{"type":35,"value":4551},{"type":29,"tag":441,"props":4618,"children":4619},{"style":588},[4620],{"type":35,"value":4621},"\"paragraph\"",{"type":29,"tag":441,"props":4623,"children":4624},{"style":536},[4625],{"type":35,"value":4561},{"type":29,"tag":441,"props":4627,"children":4628},{"style":2077},[4629],{"type":35,"value":2080},{"type":29,"tag":441,"props":4631,"children":4632},{"style":2303},[4633],{"type":35,"value":4595},{"type":29,"tag":441,"props":4635,"children":4636},{"style":536},[4637],{"type":35,"value":4600},{"type":29,"tag":441,"props":4639,"children":4640},{"style":588},[4641],{"type":35,"value":4621},{"type":29,"tag":441,"props":4643,"children":4644},{"style":536},[4645],{"type":35,"value":4609},{"type":29,"tag":441,"props":4647,"children":4648},{"class":525,"line":827},[4649],{"type":29,"tag":441,"props":4650,"children":4651},{"emptyLinePlaceholder":24},[4652],{"type":35,"value":1032},{"type":29,"tag":441,"props":4654,"children":4655},{"class":525,"line":844},[4656],{"type":29,"tag":441,"props":4657,"children":4658},{"style":536},[4659],{"type":35,"value":4660},"            metadata.append(metadata_dict)\n",{"type":29,"tag":441,"props":4662,"children":4663},{"class":525,"line":865},[4664],{"type":29,"tag":441,"props":4665,"children":4666},{"emptyLinePlaceholder":24},[4667],{"type":35,"value":1032},{"type":29,"tag":441,"props":4669,"children":4670},{"class":525,"line":881},[4671,4676,4680,4685,4689,4693,4698,4703,4708,4712],{"type":29,"tag":441,"props":4672,"children":4673},{"style":536},[4674],{"type":35,"value":4675},"        context_str ",{"type":29,"tag":441,"props":4677,"children":4678},{"style":2077},[4679],{"type":35,"value":2080},{"type":29,"tag":441,"props":4681,"children":4682},{"style":588},[4683],{"type":35,"value":4684}," \"",{"type":29,"tag":441,"props":4686,"children":4687},{"style":556},[4688],{"type":35,"value":4104},{"type":29,"tag":441,"props":4690,"children":4691},{"style":588},[4692],{"type":35,"value":2755},{"type":29,"tag":441,"props":4694,"children":4695},{"style":536},[4696],{"type":35,"value":4697},".join([n.node.get_content() ",{"type":29,"tag":441,"props":4699,"children":4700},{"style":2077},[4701],{"type":35,"value":4702},"for",{"type":29,"tag":441,"props":4704,"children":4705},{"style":536},[4706],{"type":35,"value":4707}," n ",{"type":29,"tag":441,"props":4709,"children":4710},{"style":2077},[4711],{"type":35,"value":4155},{"type":29,"tag":441,"props":4713,"children":4714},{"style":536},[4715],{"type":35,"value":4716}," nodes])\n",{"type":29,"tag":441,"props":4718,"children":4719},{"class":525,"line":898},[4720,4725,4729,4733],{"type":29,"tag":441,"props":4721,"children":4722},{"style":536},[4723],{"type":35,"value":4724},"        response ",{"type":29,"tag":441,"props":4726,"children":4727},{"style":2077},[4728],{"type":35,"value":2080},{"type":29,"tag":441,"props":4730,"children":4731},{"style":2208},[4732],{"type":35,"value":2493},{"type":29,"tag":441,"props":4734,"children":4735},{"style":536},[4736],{"type":35,"value":4737},".llm.chat(\n",{"type":29,"tag":441,"props":4739,"children":4740},{"class":525,"line":915},[4741],{"type":29,"tag":441,"props":4742,"children":4743},{"style":536},[4744],{"type":35,"value":4745},"            [\n",{"type":29,"tag":441,"props":4747,"children":4748},{"class":525,"line":928},[4749],{"type":29,"tag":441,"props":4750,"children":4751},{"style":536},[4752],{"type":35,"value":4753},"                ChatMessage(\n",{"type":29,"tag":441,"props":4755,"children":4756},{"class":525,"line":946},[4757,4762,4766,4771],{"type":29,"tag":441,"props":4758,"children":4759},{"style":2071},[4760],{"type":35,"value":4761},"                    role",{"type":29,"tag":441,"props":4763,"children":4764},{"style":2077},[4765],{"type":35,"value":2080},{"type":29,"tag":441,"props":4767,"children":4768},{"style":588},[4769],{"type":35,"value":4770},"\"user\"",{"type":29,"tag":441,"props":4772,"children":4773},{"style":536},[4774],{"type":35,"value":4775},",\n",{"type":29,"tag":441,"props":4777,"children":4778},{"class":525,"line":959},[4779,4784,4788,4793],{"type":29,"tag":441,"props":4780,"children":4781},{"style":2071},[4782],{"type":35,"value":4783},"                    content",{"type":29,"tag":441,"props":4785,"children":4786},{"style":2077},[4787],{"type":35,"value":2080},{"type":29,"tag":441,"props":4789,"children":4790},{"style":536},[4791],{"type":35,"value":4792},"q_and_a_prompt.format( ",{"type":29,"tag":441,"props":4794,"children":4795},{"style":1181},[4796],{"type":35,"value":4797},"# the English and Chinese prompt templates are discussed below\n",{"type":29,"tag":441,"props":4799,"children":4800},{"class":525,"line":972},[4801,4806,4810,4815,4819,4823],{"type":29,"tag":441,"props":4802,"children":4803},{"style":2071},[4804],{"type":35,"value":4805},"                        context_str",{"type":29,"tag":441,"props":4807,"children":4808},{"style":2077},[4809],{"type":35,"value":2080},{"type":29,"tag":441,"props":4811,"children":4812},{"style":536},[4813],{"type":35,"value":4814},"context_str, ",{"type":29,"tag":441,"props":4816,"children":4817},{"style":2071},[4818],{"type":35,"value":4429},{"type":29,"tag":441,"props":4820,"children":4821},{"style":2077},[4822],{"type":35,"value":2080},{"type":29,"tag":441,"props":4824,"children":4825},{"style":536},[4826],{"type":35,"value":4827},"query_str\n",{"type":29,"tag":441,"props":4829,"children":4830},{"class":525,"line":990},[4831],{"type":29,"tag":441,"props":4832,"children":4833},{"style":536},[4834],{"type":35,"value":4835},"                    ),\n",{"type":29,"tag":441,"props":4837,"children":4838},{"class":525,"line":1008},[4839],{"type":29,"tag":441,"props":4840,"children":4841},{"style":536},[4842],{"type":35,"value":4843},"                )\n",{"type":29,"tag":441,"props":4845,"children":4846},{"class":525,"line":1026},[4847],{"type":29,"tag":441,"props":4848,"children":4849},{"style":536},[4850],{"type":35,"value":4851},"            ]\n",{"type":29,"tag":441,"props":4853,"children":4854},{"class":525,"line":1035},[4855],{"type":29,"tag":441,"props":4856,"children":4857},{"style":536},[4858],{"type":35,"value":4859},"        )\n",{"type":29,"tag":441,"props":4861,"children":4862},{"class":525,"line":1048},[4863],{"type":29,"tag":441,"props":4864,"children":4865},{"emptyLinePlaceholder":24},[4866],{"type":35,"value":1032},{"type":29,"tag":441,"props":4868,"children":4869},{"class":525,"line":1061},[4870,4875],{"type":29,"tag":441,"props":4871,"children":4872},{"style":2077},[4873],{"type":35,"value":4874},"        return",{"type":29,"tag":441,"props":4876,"children":4877},{"style":536},[4878],{"type":35,"value":4879}," response, metadata\n",{"type":29,"tag":123,"props":4881,"children":4883},{"id":4882},"indexing-the-book-data",[4884],{"type":35,"value":4885},"Indexing the book data",{"type":29,"tag":38,"props":4887,"children":4888},{},[4889],{"type":35,"value":4890},"In the indexing process, embedding models are used to translate chunks of text (paragraphs) into high-dimensional vectors that represent the relationships between the tokens in a chunk of text. These are the vectors stored in the \"Vector Database\" used by LlamaIndex. The chapter number, paragraph number and version (original, Mandarin Chinese and English) of each paragraph are added to the database entry as metadata during the indexing step which runs via a script before starting the FastAPI server. Here's how I indexed the original text and translations with LlamaIndex:",{"type":29,"tag":514,"props":4892,"children":4894},{"code":4893,"language":2049,"meta":8,"className":2050,"style":8},"from llama_index.core import Document, VectorStoreIndex\nfrom llama_index.embeddings.huggingface import HuggingFaceEmbedding\n\nen_embedding_model = HuggingFaceEmbedding(model_name=\"BAAI/bge-small-en-v1.5\")\nzh_embedding_model = HuggingFaceEmbedding(model_name=\"BAAI/bge-small-zh-v1.5\")\n\ndef persist_index():\n    documents = []\n    for chapter in range(1, 121):\n        with open(f\"data/book/{chapter}.json\", \"r\") as f:\n            data = json.load(f)\n            paragraphs = data[\"paragraphs\"]\n\n        for i, p in enumerate(paragraphs):\n            for lang in [\"original\", \"chinese\", \"english\"]:\n                document = Document(\n                    text=p[lang],\n                    metadata={\n                        \"chapter\": str(chapter),\n                        \"paragraph\": str(i),\n                        \"language\": lang,\n                    },\n                    metadata_seperator=\"::\",\n                    metadata_template=\"{key}=>{value}\",\n                    text_template=\"Metadata: {metadata_str}\\n-----\\nContent: {content}\",\n                    embed_model=(\n                        en_embedding_model if lang == \"english\" else zh_embedding_model\n                    ),\n                )\n                documents.append(document)\n\n    index = VectorStoreIndex.from_documents(documents)\n    index.storage_context.persist(persist_dir=\"storage\")\n\nif __name__ == \"__main__\":\n    persist_index()\n",[4895],{"type":29,"tag":427,"props":4896,"children":4897},{"__ignoreMap":8},[4898,4921,4942,4949,4984,5017,5024,5042,5058,5101,5169,5186,5212,5219,5245,5295,5312,5329,5346,5367,5388,5401,5409,5430,5469,5519,5535,5572,5579,5586,5594,5601,5618,5644,5651,5678],{"type":29,"tag":441,"props":4899,"children":4900},{"class":525,"line":526},[4901,4906,4911,4916],{"type":29,"tag":441,"props":4902,"children":4903},{"style":2077},[4904],{"type":35,"value":4905},"from",{"type":29,"tag":441,"props":4907,"children":4908},{"style":536},[4909],{"type":35,"value":4910}," llama_index.core ",{"type":29,"tag":441,"props":4912,"children":4913},{"style":2077},[4914],{"type":35,"value":4915},"import",{"type":29,"tag":441,"props":4917,"children":4918},{"style":536},[4919],{"type":35,"value":4920}," Document, VectorStoreIndex\n",{"type":29,"tag":441,"props":4922,"children":4923},{"class":525,"line":542},[4924,4928,4933,4937],{"type":29,"tag":441,"props":4925,"children":4926},{"style":2077},[4927],{"type":35,"value":4905},{"type":29,"tag":441,"props":4929,"children":4930},{"style":536},[4931],{"type":35,"value":4932}," llama_index.embeddings.huggingface ",{"type":29,"tag":441,"props":4934,"children":4935},{"style":2077},[4936],{"type":35,"value":4915},{"type":29,"tag":441,"props":4938,"children":4939},{"style":536},[4940],{"type":35,"value":4941}," HuggingFaceEmbedding\n",{"type":29,"tag":441,"props":4943,"children":4944},{"class":525,"line":562},[4945],{"type":29,"tag":441,"props":4946,"children":4947},{"emptyLinePlaceholder":24},[4948],{"type":35,"value":1032},{"type":29,"tag":441,"props":4950,"children":4951},{"class":525,"line":575},[4952,4957,4961,4966,4971,4975,4980],{"type":29,"tag":441,"props":4953,"children":4954},{"style":536},[4955],{"type":35,"value":4956},"en_embedding_model ",{"type":29,"tag":441,"props":4958,"children":4959},{"style":2077},[4960],{"type":35,"value":2080},{"type":29,"tag":441,"props":4962,"children":4963},{"style":536},[4964],{"type":35,"value":4965}," HuggingFaceEmbedding(",{"type":29,"tag":441,"props":4967,"children":4968},{"style":2071},[4969],{"type":35,"value":4970},"model_name",{"type":29,"tag":441,"props":4972,"children":4973},{"style":2077},[4974],{"type":35,"value":2080},{"type":29,"tag":441,"props":4976,"children":4977},{"style":588},[4978],{"type":35,"value":4979},"\"BAAI/bge-small-en-v1.5\"",{"type":29,"tag":441,"props":4981,"children":4982},{"style":536},[4983],{"type":35,"value":3948},{"type":29,"tag":441,"props":4985,"children":4986},{"class":525,"line":594},[4987,4992,4996,5000,5004,5008,5013],{"type":29,"tag":441,"props":4988,"children":4989},{"style":536},[4990],{"type":35,"value":4991},"zh_embedding_model ",{"type":29,"tag":441,"props":4993,"children":4994},{"style":2077},[4995],{"type":35,"value":2080},{"type":29,"tag":441,"props":4997,"children":4998},{"style":536},[4999],{"type":35,"value":4965},{"type":29,"tag":441,"props":5001,"children":5002},{"style":2071},[5003],{"type":35,"value":4970},{"type":29,"tag":441,"props":5005,"children":5006},{"style":2077},[5007],{"type":35,"value":2080},{"type":29,"tag":441,"props":5009,"children":5010},{"style":588},[5011],{"type":35,"value":5012},"\"BAAI/bge-small-zh-v1.5\"",{"type":29,"tag":441,"props":5014,"children":5015},{"style":536},[5016],{"type":35,"value":3948},{"type":29,"tag":441,"props":5018,"children":5019},{"class":525,"line":607},[5020],{"type":29,"tag":441,"props":5021,"children":5022},{"emptyLinePlaceholder":24},[5023],{"type":35,"value":1032},{"type":29,"tag":441,"props":5025,"children":5026},{"class":525,"line":631},[5027,5032,5037],{"type":29,"tag":441,"props":5028,"children":5029},{"style":2091},[5030],{"type":35,"value":5031},"def",{"type":29,"tag":441,"props":5033,"children":5034},{"style":2060},[5035],{"type":35,"value":5036}," persist_index",{"type":29,"tag":441,"props":5038,"children":5039},{"style":536},[5040],{"type":35,"value":5041},"():\n",{"type":29,"tag":441,"props":5043,"children":5044},{"class":525,"line":644},[5045,5050,5054],{"type":29,"tag":441,"props":5046,"children":5047},{"style":536},[5048],{"type":35,"value":5049},"    documents ",{"type":29,"tag":441,"props":5051,"children":5052},{"style":2077},[5053],{"type":35,"value":2080},{"type":29,"tag":441,"props":5055,"children":5056},{"style":536},[5057],{"type":35,"value":4479},{"type":29,"tag":441,"props":5059,"children":5060},{"class":525,"line":658},[5061,5065,5070,5074,5079,5083,5088,5092,5097],{"type":29,"tag":441,"props":5062,"children":5063},{"style":2077},[5064],{"type":35,"value":4145},{"type":29,"tag":441,"props":5066,"children":5067},{"style":536},[5068],{"type":35,"value":5069}," chapter ",{"type":29,"tag":441,"props":5071,"children":5072},{"style":2077},[5073],{"type":35,"value":4155},{"type":29,"tag":441,"props":5075,"children":5076},{"style":2176},[5077],{"type":35,"value":5078}," range",{"type":29,"tag":441,"props":5080,"children":5081},{"style":536},[5082],{"type":35,"value":2068},{"type":29,"tag":441,"props":5084,"children":5085},{"style":556},[5086],{"type":35,"value":5087},"1",{"type":29,"tag":441,"props":5089,"children":5090},{"style":536},[5091],{"type":35,"value":2193},{"type":29,"tag":441,"props":5093,"children":5094},{"style":556},[5095],{"type":35,"value":5096},"121",{"type":29,"tag":441,"props":5098,"children":5099},{"style":536},[5100],{"type":35,"value":2165},{"type":29,"tag":441,"props":5102,"children":5103},{"class":525,"line":671},[5104,5109,5114,5118,5122,5127,5131,5136,5140,5145,5149,5154,5159,5164],{"type":29,"tag":441,"props":5105,"children":5106},{"style":2077},[5107],{"type":35,"value":5108},"        with",{"type":29,"tag":441,"props":5110,"children":5111},{"style":2176},[5112],{"type":35,"value":5113}," open",{"type":29,"tag":441,"props":5115,"children":5116},{"style":536},[5117],{"type":35,"value":2068},{"type":29,"tag":441,"props":5119,"children":5120},{"style":2091},[5121],{"type":35,"value":2750},{"type":29,"tag":441,"props":5123,"children":5124},{"style":588},[5125],{"type":35,"value":5126},"\"data/book/",{"type":29,"tag":441,"props":5128,"children":5129},{"style":556},[5130],{"type":35,"value":2760},{"type":29,"tag":441,"props":5132,"children":5133},{"style":536},[5134],{"type":35,"value":5135},"chapter",{"type":29,"tag":441,"props":5137,"children":5138},{"style":556},[5139],{"type":35,"value":2769},{"type":29,"tag":441,"props":5141,"children":5142},{"style":588},[5143],{"type":35,"value":5144},".json\"",{"type":29,"tag":441,"props":5146,"children":5147},{"style":536},[5148],{"type":35,"value":2193},{"type":29,"tag":441,"props":5150,"children":5151},{"style":588},[5152],{"type":35,"value":5153},"\"r\"",{"type":29,"tag":441,"props":5155,"children":5156},{"style":536},[5157],{"type":35,"value":5158},") ",{"type":29,"tag":441,"props":5160,"children":5161},{"style":2077},[5162],{"type":35,"value":5163},"as",{"type":29,"tag":441,"props":5165,"children":5166},{"style":536},[5167],{"type":35,"value":5168}," f:\n",{"type":29,"tag":441,"props":5170,"children":5171},{"class":525,"line":684},[5172,5177,5181],{"type":29,"tag":441,"props":5173,"children":5174},{"style":536},[5175],{"type":35,"value":5176},"            data ",{"type":29,"tag":441,"props":5178,"children":5179},{"style":2077},[5180],{"type":35,"value":2080},{"type":29,"tag":441,"props":5182,"children":5183},{"style":536},[5184],{"type":35,"value":5185}," json.load(f)\n",{"type":29,"tag":441,"props":5187,"children":5188},{"class":525,"line":697},[5189,5194,5198,5203,5208],{"type":29,"tag":441,"props":5190,"children":5191},{"style":536},[5192],{"type":35,"value":5193},"            paragraphs ",{"type":29,"tag":441,"props":5195,"children":5196},{"style":2077},[5197],{"type":35,"value":2080},{"type":29,"tag":441,"props":5199,"children":5200},{"style":536},[5201],{"type":35,"value":5202}," data[",{"type":29,"tag":441,"props":5204,"children":5205},{"style":588},[5206],{"type":35,"value":5207},"\"paragraphs\"",{"type":29,"tag":441,"props":5209,"children":5210},{"style":536},[5211],{"type":35,"value":628},{"type":29,"tag":441,"props":5213,"children":5214},{"class":525,"line":720},[5215],{"type":29,"tag":441,"props":5216,"children":5217},{"emptyLinePlaceholder":24},[5218],{"type":35,"value":1032},{"type":29,"tag":441,"props":5220,"children":5221},{"class":525,"line":737},[5222,5226,5231,5235,5240],{"type":29,"tag":441,"props":5223,"children":5224},{"style":2077},[5225],{"type":35,"value":4495},{"type":29,"tag":441,"props":5227,"children":5228},{"style":536},[5229],{"type":35,"value":5230}," i, p ",{"type":29,"tag":441,"props":5232,"children":5233},{"style":2077},[5234],{"type":35,"value":4155},{"type":29,"tag":441,"props":5236,"children":5237},{"style":2176},[5238],{"type":35,"value":5239}," enumerate",{"type":29,"tag":441,"props":5241,"children":5242},{"style":536},[5243],{"type":35,"value":5244},"(paragraphs):\n",{"type":29,"tag":441,"props":5246,"children":5247},{"class":525,"line":755},[5248,5253,5258,5262,5267,5272,5276,5281,5285,5290],{"type":29,"tag":441,"props":5249,"children":5250},{"style":2077},[5251],{"type":35,"value":5252},"            for",{"type":29,"tag":441,"props":5254,"children":5255},{"style":536},[5256],{"type":35,"value":5257}," lang ",{"type":29,"tag":441,"props":5259,"children":5260},{"style":2077},[5261],{"type":35,"value":4155},{"type":29,"tag":441,"props":5263,"children":5264},{"style":536},[5265],{"type":35,"value":5266}," [",{"type":29,"tag":441,"props":5268,"children":5269},{"style":588},[5270],{"type":35,"value":5271},"\"original\"",{"type":29,"tag":441,"props":5273,"children":5274},{"style":536},[5275],{"type":35,"value":2193},{"type":29,"tag":441,"props":5277,"children":5278},{"style":588},[5279],{"type":35,"value":5280},"\"chinese\"",{"type":29,"tag":441,"props":5282,"children":5283},{"style":536},[5284],{"type":35,"value":2193},{"type":29,"tag":441,"props":5286,"children":5287},{"style":588},[5288],{"type":35,"value":5289},"\"english\"",{"type":29,"tag":441,"props":5291,"children":5292},{"style":536},[5293],{"type":35,"value":5294},"]:\n",{"type":29,"tag":441,"props":5296,"children":5297},{"class":525,"line":773},[5298,5303,5307],{"type":29,"tag":441,"props":5299,"children":5300},{"style":536},[5301],{"type":35,"value":5302},"                document ",{"type":29,"tag":441,"props":5304,"children":5305},{"style":2077},[5306],{"type":35,"value":2080},{"type":29,"tag":441,"props":5308,"children":5309},{"style":536},[5310],{"type":35,"value":5311}," Document(\n",{"type":29,"tag":441,"props":5313,"children":5314},{"class":525,"line":794},[5315,5320,5324],{"type":29,"tag":441,"props":5316,"children":5317},{"style":2071},[5318],{"type":35,"value":5319},"                    text",{"type":29,"tag":441,"props":5321,"children":5322},{"style":2077},[5323],{"type":35,"value":2080},{"type":29,"tag":441,"props":5325,"children":5326},{"style":536},[5327],{"type":35,"value":5328},"p[lang],\n",{"type":29,"tag":441,"props":5330,"children":5331},{"class":525,"line":810},[5332,5337,5341],{"type":29,"tag":441,"props":5333,"children":5334},{"style":2071},[5335],{"type":35,"value":5336},"                    metadata",{"type":29,"tag":441,"props":5338,"children":5339},{"style":2077},[5340],{"type":35,"value":2080},{"type":29,"tag":441,"props":5342,"children":5343},{"style":536},[5344],{"type":35,"value":5345},"{\n",{"type":29,"tag":441,"props":5347,"children":5348},{"class":525,"line":827},[5349,5354,5358,5362],{"type":29,"tag":441,"props":5350,"children":5351},{"style":588},[5352],{"type":35,"value":5353},"                        \"chapter\"",{"type":29,"tag":441,"props":5355,"children":5356},{"style":536},[5357],{"type":35,"value":553},{"type":29,"tag":441,"props":5359,"children":5360},{"style":2303},[5361],{"type":35,"value":2306},{"type":29,"tag":441,"props":5363,"children":5364},{"style":536},[5365],{"type":35,"value":5366},"(chapter),\n",{"type":29,"tag":441,"props":5368,"children":5369},{"class":525,"line":844},[5370,5375,5379,5383],{"type":29,"tag":441,"props":5371,"children":5372},{"style":588},[5373],{"type":35,"value":5374},"                        \"paragraph\"",{"type":29,"tag":441,"props":5376,"children":5377},{"style":536},[5378],{"type":35,"value":553},{"type":29,"tag":441,"props":5380,"children":5381},{"style":2303},[5382],{"type":35,"value":2306},{"type":29,"tag":441,"props":5384,"children":5385},{"style":536},[5386],{"type":35,"value":5387},"(i),\n",{"type":29,"tag":441,"props":5389,"children":5390},{"class":525,"line":865},[5391,5396],{"type":29,"tag":441,"props":5392,"children":5393},{"style":588},[5394],{"type":35,"value":5395},"                        \"language\"",{"type":29,"tag":441,"props":5397,"children":5398},{"style":536},[5399],{"type":35,"value":5400},": lang,\n",{"type":29,"tag":441,"props":5402,"children":5403},{"class":525,"line":881},[5404],{"type":29,"tag":441,"props":5405,"children":5406},{"style":536},[5407],{"type":35,"value":5408},"                    },\n",{"type":29,"tag":441,"props":5410,"children":5411},{"class":525,"line":898},[5412,5417,5421,5426],{"type":29,"tag":441,"props":5413,"children":5414},{"style":2071},[5415],{"type":35,"value":5416},"                    metadata_seperator",{"type":29,"tag":441,"props":5418,"children":5419},{"style":2077},[5420],{"type":35,"value":2080},{"type":29,"tag":441,"props":5422,"children":5423},{"style":588},[5424],{"type":35,"value":5425},"\"::\"",{"type":29,"tag":441,"props":5427,"children":5428},{"style":536},[5429],{"type":35,"value":4775},{"type":29,"tag":441,"props":5431,"children":5432},{"class":525,"line":915},[5433,5438,5442,5446,5451,5456,5461,5465],{"type":29,"tag":441,"props":5434,"children":5435},{"style":2071},[5436],{"type":35,"value":5437},"                    metadata_template",{"type":29,"tag":441,"props":5439,"children":5440},{"style":2077},[5441],{"type":35,"value":2080},{"type":29,"tag":441,"props":5443,"children":5444},{"style":588},[5445],{"type":35,"value":2755},{"type":29,"tag":441,"props":5447,"children":5448},{"style":556},[5449],{"type":35,"value":5450},"{key}",{"type":29,"tag":441,"props":5452,"children":5453},{"style":588},[5454],{"type":35,"value":5455},"=>",{"type":29,"tag":441,"props":5457,"children":5458},{"style":556},[5459],{"type":35,"value":5460},"{value}",{"type":29,"tag":441,"props":5462,"children":5463},{"style":588},[5464],{"type":35,"value":2755},{"type":29,"tag":441,"props":5466,"children":5467},{"style":536},[5468],{"type":35,"value":4775},{"type":29,"tag":441,"props":5470,"children":5471},{"class":525,"line":928},[5472,5477,5481,5486,5491,5496,5501,5506,5511,5515],{"type":29,"tag":441,"props":5473,"children":5474},{"style":2071},[5475],{"type":35,"value":5476},"                    text_template",{"type":29,"tag":441,"props":5478,"children":5479},{"style":2077},[5480],{"type":35,"value":2080},{"type":29,"tag":441,"props":5482,"children":5483},{"style":588},[5484],{"type":35,"value":5485},"\"Metadata: ",{"type":29,"tag":441,"props":5487,"children":5488},{"style":556},[5489],{"type":35,"value":5490},"{metadata_str}\\n",{"type":29,"tag":441,"props":5492,"children":5493},{"style":588},[5494],{"type":35,"value":5495},"-----",{"type":29,"tag":441,"props":5497,"children":5498},{"style":556},[5499],{"type":35,"value":5500},"\\n",{"type":29,"tag":441,"props":5502,"children":5503},{"style":588},[5504],{"type":35,"value":5505},"Content: ",{"type":29,"tag":441,"props":5507,"children":5508},{"style":556},[5509],{"type":35,"value":5510},"{content}",{"type":29,"tag":441,"props":5512,"children":5513},{"style":588},[5514],{"type":35,"value":2755},{"type":29,"tag":441,"props":5516,"children":5517},{"style":536},[5518],{"type":35,"value":4775},{"type":29,"tag":441,"props":5520,"children":5521},{"class":525,"line":946},[5522,5527,5531],{"type":29,"tag":441,"props":5523,"children":5524},{"style":2071},[5525],{"type":35,"value":5526},"                    embed_model",{"type":29,"tag":441,"props":5528,"children":5529},{"style":2077},[5530],{"type":35,"value":2080},{"type":29,"tag":441,"props":5532,"children":5533},{"style":536},[5534],{"type":35,"value":2420},{"type":29,"tag":441,"props":5536,"children":5537},{"class":525,"line":959},[5538,5543,5548,5552,5557,5562,5567],{"type":29,"tag":441,"props":5539,"children":5540},{"style":536},[5541],{"type":35,"value":5542},"                        en_embedding_model ",{"type":29,"tag":441,"props":5544,"children":5545},{"style":2077},[5546],{"type":35,"value":5547},"if",{"type":29,"tag":441,"props":5549,"children":5550},{"style":536},[5551],{"type":35,"value":5257},{"type":29,"tag":441,"props":5553,"children":5554},{"style":2077},[5555],{"type":35,"value":5556},"==",{"type":29,"tag":441,"props":5558,"children":5559},{"style":588},[5560],{"type":35,"value":5561}," \"english\"",{"type":29,"tag":441,"props":5563,"children":5564},{"style":2077},[5565],{"type":35,"value":5566}," else",{"type":29,"tag":441,"props":5568,"children":5569},{"style":536},[5570],{"type":35,"value":5571}," zh_embedding_model\n",{"type":29,"tag":441,"props":5573,"children":5574},{"class":525,"line":972},[5575],{"type":29,"tag":441,"props":5576,"children":5577},{"style":536},[5578],{"type":35,"value":4835},{"type":29,"tag":441,"props":5580,"children":5581},{"class":525,"line":990},[5582],{"type":29,"tag":441,"props":5583,"children":5584},{"style":536},[5585],{"type":35,"value":4843},{"type":29,"tag":441,"props":5587,"children":5588},{"class":525,"line":1008},[5589],{"type":29,"tag":441,"props":5590,"children":5591},{"style":536},[5592],{"type":35,"value":5593},"                documents.append(document)\n",{"type":29,"tag":441,"props":5595,"children":5596},{"class":525,"line":1026},[5597],{"type":29,"tag":441,"props":5598,"children":5599},{"emptyLinePlaceholder":24},[5600],{"type":35,"value":1032},{"type":29,"tag":441,"props":5602,"children":5603},{"class":525,"line":1035},[5604,5609,5613],{"type":29,"tag":441,"props":5605,"children":5606},{"style":536},[5607],{"type":35,"value":5608},"    index ",{"type":29,"tag":441,"props":5610,"children":5611},{"style":2077},[5612],{"type":35,"value":2080},{"type":29,"tag":441,"props":5614,"children":5615},{"style":536},[5616],{"type":35,"value":5617}," VectorStoreIndex.from_documents(documents)\n",{"type":29,"tag":441,"props":5619,"children":5620},{"class":525,"line":1048},[5621,5626,5631,5635,5640],{"type":29,"tag":441,"props":5622,"children":5623},{"style":536},[5624],{"type":35,"value":5625},"    index.storage_context.persist(",{"type":29,"tag":441,"props":5627,"children":5628},{"style":2071},[5629],{"type":35,"value":5630},"persist_dir",{"type":29,"tag":441,"props":5632,"children":5633},{"style":2077},[5634],{"type":35,"value":2080},{"type":29,"tag":441,"props":5636,"children":5637},{"style":588},[5638],{"type":35,"value":5639},"\"storage\"",{"type":29,"tag":441,"props":5641,"children":5642},{"style":536},[5643],{"type":35,"value":3948},{"type":29,"tag":441,"props":5645,"children":5646},{"class":525,"line":1061},[5647],{"type":29,"tag":441,"props":5648,"children":5649},{"emptyLinePlaceholder":24},[5650],{"type":35,"value":1032},{"type":29,"tag":441,"props":5652,"children":5653},{"class":525,"line":1078},[5654,5658,5664,5669,5674],{"type":29,"tag":441,"props":5655,"children":5656},{"style":2077},[5657],{"type":35,"value":5547},{"type":29,"tag":441,"props":5659,"children":5661},{"style":5660},"--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[5662],{"type":35,"value":5663}," __name__",{"type":29,"tag":441,"props":5665,"children":5666},{"style":2077},[5667],{"type":35,"value":5668}," ==",{"type":29,"tag":441,"props":5670,"children":5671},{"style":588},[5672],{"type":35,"value":5673}," \"__main__\"",{"type":29,"tag":441,"props":5675,"children":5676},{"style":536},[5677],{"type":35,"value":539},{"type":29,"tag":441,"props":5679,"children":5680},{"class":525,"line":1096},[5681],{"type":29,"tag":441,"props":5682,"children":5683},{"style":536},[5684],{"type":35,"value":5685},"    persist_index()\n",{"type":29,"tag":38,"props":5687,"children":5688},{},[5689,5691,5697],{"type":35,"value":5690},"For the embedding models, I used the small BAAI General Embedding models (BGE) for English and Chinese. BAAI is the Beijing Academy of Artificial Intelligence, and I learned about this organization through some of the examples on the LlamaIndex site that use BAAI embeddings. There are multi-lingual embedding models (e.g. ",{"type":29,"tag":427,"props":5692,"children":5694},{"className":5693},[],[5695],{"type":35,"value":5696},"BAAI/bge-m3",{"type":35,"value":5698},"), but setting the embedding model on a per-document basis is possible and in some cases it might be preferable to using a single embedding model for all documents.",{"type":29,"tag":123,"props":5700,"children":5702},{"id":5701},"milvus-vector-database",[5703],{"type":35,"value":5704},"Milvus Vector Database",{"type":29,"tag":38,"props":5706,"children":5707},{},[5708],{"type":35,"value":5709},"I did most of the development for this project using the in-memory VectorIndexStore provided by LlamaIndex. This worked well, but making any changes to the FastAPI server required the data to be reloaded into memory which took several seconds each time. This can really hinder a good development flow, so I looked into using an external service for the vector database instead of running it in memory.",{"type":29,"tag":38,"props":5711,"children":5712},{},[5713],{"type":29,"tag":192,"props":5714,"children":5717},{"alt":5715,"src":5716},"Vector Database Options","/static/redlm/vectordbs.png",[],{"type":29,"tag":38,"props":5719,"children":5720},{},[5721,5723,5734],{"type":35,"value":5722},"There are a LOT of options to consider when picking a vector database for a RAG application. Milvus has a highly decoupled architecture, it is fully open source and I had seen it in some examples in the ",{"type":29,"tag":57,"props":5724,"children":5727},{"href":5725,"rel":5726},"https://github.com/NVIDIA/GenerativeAIExamples/tree/main/RAG/examples/advanced_rag/multimodal_rag",[60],[5728],{"type":29,"tag":427,"props":5729,"children":5731},{"className":5730},[],[5732],{"type":35,"value":5733},"NVIDIA/GenerativeAIExamples",{"type":35,"value":5735}," repo, so I decided to give it a try.",{"type":29,"tag":38,"props":5737,"children":5738},{},[5739],{"type":29,"tag":192,"props":5740,"children":5743},{"alt":5741,"src":5742},"Milvus Vector Database Architecture","/static/redlm/milvus.png",[],{"type":29,"tag":38,"props":5745,"children":5746},{},[5747,5749,5756],{"type":35,"value":5748},"Using the ",{"type":29,"tag":57,"props":5750,"children":5753},{"href":5751,"rel":5752},"https://milvus.io/docs/v2.0.x/install_standalone-docker.md",[60],[5754],{"type":35,"value":5755},"Milvus docker compose example",{"type":35,"value":5757}," I was able to set up an external vector database based on etcd and minio. Milvus also provides a Helm chart for running their vector database, this would be helpful if I was going to be running everything in Kubernetes (inference, vector database and application containers).",{"type":29,"tag":123,"props":5759,"children":5761},{"id":5760},"other-examples-of-rag-with-english-questions",[5762],{"type":35,"value":5763},"Other examples of RAG with English questions",{"type":29,"tag":38,"props":5765,"children":5766},{},[5767],{"type":35,"value":5768},"One interesting design question I faced was how to support answering questions in both English and Chinese. I initially built the Q&A bot with only Chinese language support. Later, I added a simple helper function to determine if the input text is Chinese:",{"type":29,"tag":514,"props":5770,"children":5772},{"code":5771,"language":2049,"meta":8,"className":2050,"style":8},"def is_chinese_text(text: str) -> bool:\n    \"\"\"\n    This is a simple helper function that is used to determine which prompt to use\n    depending on the language of the original user query\n    \"\"\"\n    chinese_count = sum(1 for char in text if '\\u4e00' \u003C= char \u003C= '\\u9fff')\n    english_count = sum(1 for char in text if 'a' \u003C= char.lower() \u003C= 'z')\n\n    return chinese_count > english_count\n",[5773],{"type":29,"tag":427,"props":5774,"children":5775},{"__ignoreMap":8},[5776,5818,5826,5834,5842,5849,5943,6014,6021],{"type":29,"tag":441,"props":5777,"children":5778},{"class":525,"line":526},[5779,5783,5788,5792,5796,5800,5804,5809,5814],{"type":29,"tag":441,"props":5780,"children":5781},{"style":2091},[5782],{"type":35,"value":5031},{"type":29,"tag":441,"props":5784,"children":5785},{"style":2060},[5786],{"type":35,"value":5787}," is_chinese_text",{"type":29,"tag":441,"props":5789,"children":5790},{"style":536},[5791],{"type":35,"value":2068},{"type":29,"tag":441,"props":5793,"children":5794},{"style":2111},[5795],{"type":35,"value":35},{"type":29,"tag":441,"props":5797,"children":5798},{"style":536},[5799],{"type":35,"value":553},{"type":29,"tag":441,"props":5801,"children":5802},{"style":2303},[5803],{"type":35,"value":2306},{"type":29,"tag":441,"props":5805,"children":5806},{"style":536},[5807],{"type":35,"value":5808},") -> ",{"type":29,"tag":441,"props":5810,"children":5811},{"style":2303},[5812],{"type":35,"value":5813},"bool",{"type":29,"tag":441,"props":5815,"children":5816},{"style":536},[5817],{"type":35,"value":539},{"type":29,"tag":441,"props":5819,"children":5820},{"class":525,"line":542},[5821],{"type":29,"tag":441,"props":5822,"children":5823},{"style":588},[5824],{"type":35,"value":5825},"    \"\"\"\n",{"type":29,"tag":441,"props":5827,"children":5828},{"class":525,"line":562},[5829],{"type":29,"tag":441,"props":5830,"children":5831},{"style":588},[5832],{"type":35,"value":5833},"    This is a simple helper function that is used to determine which prompt to use\n",{"type":29,"tag":441,"props":5835,"children":5836},{"class":525,"line":575},[5837],{"type":29,"tag":441,"props":5838,"children":5839},{"style":588},[5840],{"type":35,"value":5841},"    depending on the language of the original user query\n",{"type":29,"tag":441,"props":5843,"children":5844},{"class":525,"line":594},[5845],{"type":29,"tag":441,"props":5846,"children":5847},{"style":588},[5848],{"type":35,"value":5825},{"type":29,"tag":441,"props":5850,"children":5851},{"class":525,"line":607},[5852,5857,5861,5866,5870,5874,5879,5884,5888,5893,5897,5902,5907,5912,5917,5921,5926,5930,5935,5939],{"type":29,"tag":441,"props":5853,"children":5854},{"style":536},[5855],{"type":35,"value":5856},"    chinese_count ",{"type":29,"tag":441,"props":5858,"children":5859},{"style":2077},[5860],{"type":35,"value":2080},{"type":29,"tag":441,"props":5862,"children":5863},{"style":2176},[5864],{"type":35,"value":5865}," sum",{"type":29,"tag":441,"props":5867,"children":5868},{"style":536},[5869],{"type":35,"value":2068},{"type":29,"tag":441,"props":5871,"children":5872},{"style":556},[5873],{"type":35,"value":5087},{"type":29,"tag":441,"props":5875,"children":5876},{"style":2077},[5877],{"type":35,"value":5878}," for",{"type":29,"tag":441,"props":5880,"children":5881},{"style":536},[5882],{"type":35,"value":5883}," char ",{"type":29,"tag":441,"props":5885,"children":5886},{"style":2077},[5887],{"type":35,"value":4155},{"type":29,"tag":441,"props":5889,"children":5890},{"style":536},[5891],{"type":35,"value":5892}," text ",{"type":29,"tag":441,"props":5894,"children":5895},{"style":2077},[5896],{"type":35,"value":5547},{"type":29,"tag":441,"props":5898,"children":5899},{"style":588},[5900],{"type":35,"value":5901}," '",{"type":29,"tag":441,"props":5903,"children":5904},{"style":556},[5905],{"type":35,"value":5906},"\\u4e00",{"type":29,"tag":441,"props":5908,"children":5909},{"style":588},[5910],{"type":35,"value":5911},"'",{"type":29,"tag":441,"props":5913,"children":5914},{"style":2077},[5915],{"type":35,"value":5916}," \u003C=",{"type":29,"tag":441,"props":5918,"children":5919},{"style":536},[5920],{"type":35,"value":5883},{"type":29,"tag":441,"props":5922,"children":5923},{"style":2077},[5924],{"type":35,"value":5925},"\u003C=",{"type":29,"tag":441,"props":5927,"children":5928},{"style":588},[5929],{"type":35,"value":5901},{"type":29,"tag":441,"props":5931,"children":5932},{"style":556},[5933],{"type":35,"value":5934},"\\u9fff",{"type":29,"tag":441,"props":5936,"children":5937},{"style":588},[5938],{"type":35,"value":5911},{"type":29,"tag":441,"props":5940,"children":5941},{"style":536},[5942],{"type":35,"value":3948},{"type":29,"tag":441,"props":5944,"children":5945},{"class":525,"line":631},[5946,5951,5955,5959,5963,5967,5971,5975,5979,5983,5987,5992,5996,6001,6005,6010],{"type":29,"tag":441,"props":5947,"children":5948},{"style":536},[5949],{"type":35,"value":5950},"    english_count ",{"type":29,"tag":441,"props":5952,"children":5953},{"style":2077},[5954],{"type":35,"value":2080},{"type":29,"tag":441,"props":5956,"children":5957},{"style":2176},[5958],{"type":35,"value":5865},{"type":29,"tag":441,"props":5960,"children":5961},{"style":536},[5962],{"type":35,"value":2068},{"type":29,"tag":441,"props":5964,"children":5965},{"style":556},[5966],{"type":35,"value":5087},{"type":29,"tag":441,"props":5968,"children":5969},{"style":2077},[5970],{"type":35,"value":5878},{"type":29,"tag":441,"props":5972,"children":5973},{"style":536},[5974],{"type":35,"value":5883},{"type":29,"tag":441,"props":5976,"children":5977},{"style":2077},[5978],{"type":35,"value":4155},{"type":29,"tag":441,"props":5980,"children":5981},{"style":536},[5982],{"type":35,"value":5892},{"type":29,"tag":441,"props":5984,"children":5985},{"style":2077},[5986],{"type":35,"value":5547},{"type":29,"tag":441,"props":5988,"children":5989},{"style":588},[5990],{"type":35,"value":5991}," 'a'",{"type":29,"tag":441,"props":5993,"children":5994},{"style":2077},[5995],{"type":35,"value":5916},{"type":29,"tag":441,"props":5997,"children":5998},{"style":536},[5999],{"type":35,"value":6000}," char.lower() ",{"type":29,"tag":441,"props":6002,"children":6003},{"style":2077},[6004],{"type":35,"value":5925},{"type":29,"tag":441,"props":6006,"children":6007},{"style":588},[6008],{"type":35,"value":6009}," 'z'",{"type":29,"tag":441,"props":6011,"children":6012},{"style":536},[6013],{"type":35,"value":3948},{"type":29,"tag":441,"props":6015,"children":6016},{"class":525,"line":644},[6017],{"type":29,"tag":441,"props":6018,"children":6019},{"emptyLinePlaceholder":24},[6020],{"type":35,"value":1032},{"type":29,"tag":441,"props":6022,"children":6023},{"class":525,"line":658},[6024,6029,6034,6039],{"type":29,"tag":441,"props":6025,"children":6026},{"style":2077},[6027],{"type":35,"value":6028},"    return",{"type":29,"tag":441,"props":6030,"children":6031},{"style":536},[6032],{"type":35,"value":6033}," chinese_count ",{"type":29,"tag":441,"props":6035,"children":6036},{"style":2077},[6037],{"type":35,"value":6038},">",{"type":29,"tag":441,"props":6040,"children":6041},{"style":536},[6042],{"type":35,"value":6043}," english_count\n",{"type":29,"tag":38,"props":6045,"children":6046},{},[6047,6049,6054,6056,6062],{"type":35,"value":6048},"This boolean value would then be used in the ",{"type":29,"tag":427,"props":6050,"children":6052},{"className":6051},[],[6053],{"type":35,"value":4311},{"type":35,"value":6055}," to use either the Chinese or English ",{"type":29,"tag":427,"props":6057,"children":6059},{"className":6058},[],[6060],{"type":35,"value":6061},"PromptTemplate",{"type":35,"value":6063},". This allowed the Q&A bot to answer questions in either Chinese or English, and it does not require translating back and forth between Chinese and English. However, this method relies on high-quality translations, so I don't expect English language questions to be answered as accurately as Chinese language questions. Here are the Chinese and English prompts that I used for the text-based Q&A bot, as well as some examples of the Q&A bot answering questions in English. The referenced materials include paragraphs from the English translation.",{"type":29,"tag":514,"props":6065,"children":6067},{"code":6066,"language":2049,"meta":8,"className":2050,"style":8},"# Chinese prompt for text-based Q&A bot\nq_and_a_prompt = PromptTemplate(\n    \"ËøôÊòØÁõ∏ÂÖ≥ÁöÑÂèÇËÄÉËµÑÊñôÔºö\\n\"\n    \"---------------------\\n\"\n    \"{context_str}\\n\" # context_str contains Chinese paragraphs retrieved via RAG query\n    \"---------------------\\n\"\n    \"Ê†πÊçÆ‰∏äËø∞ÁöÑÂèÇËÄÉËµÑÊñôÔºåÂõûÁ≠î‰∏ãÈù¢ÁöÑÈóÆÈ¢ò\\n\"\n    \"ÈóÆÈ¢òÔºö{user_question}\\n\"\n)\n\n# English prompt for text-based Q&A bot\nq_and_a_prompt_english = PromptTemplate(\n    \"This is some related reference material:\\n\"\n    \"---------------------\\n\"\n    \"{context_str}\\n\" # context_str contains English paragraphs retrieved via RAG query\n    \"---------------------\\n\"\n    \"Based on the above material, answer the following question:\\n\"\n    \"Question: {user_question}\\n\"\n)\n",[6068],{"type":29,"tag":427,"props":6069,"children":6070},{"__ignoreMap":8},[6071,6079,6096,6112,6128,6150,6165,6181,6198,6205,6212,6220,6236,6252,6267,6287,6302,6318,6334],{"type":29,"tag":441,"props":6072,"children":6073},{"class":525,"line":526},[6074],{"type":29,"tag":441,"props":6075,"children":6076},{"style":1181},[6077],{"type":35,"value":6078},"# Chinese prompt for text-based Q&A bot\n",{"type":29,"tag":441,"props":6080,"children":6081},{"class":525,"line":542},[6082,6087,6091],{"type":29,"tag":441,"props":6083,"children":6084},{"style":536},[6085],{"type":35,"value":6086},"q_and_a_prompt ",{"type":29,"tag":441,"props":6088,"children":6089},{"style":2077},[6090],{"type":35,"value":2080},{"type":29,"tag":441,"props":6092,"children":6093},{"style":536},[6094],{"type":35,"value":6095}," PromptTemplate(\n",{"type":29,"tag":441,"props":6097,"children":6098},{"class":525,"line":562},[6099,6104,6108],{"type":29,"tag":441,"props":6100,"children":6101},{"style":588},[6102],{"type":35,"value":6103},"    \"ËøôÊòØÁõ∏ÂÖ≥ÁöÑÂèÇËÄÉËµÑÊñôÔºö",{"type":29,"tag":441,"props":6105,"children":6106},{"style":556},[6107],{"type":35,"value":5500},{"type":29,"tag":441,"props":6109,"children":6110},{"style":588},[6111],{"type":35,"value":4137},{"type":29,"tag":441,"props":6113,"children":6114},{"class":525,"line":575},[6115,6120,6124],{"type":29,"tag":441,"props":6116,"children":6117},{"style":588},[6118],{"type":35,"value":6119},"    \"---------------------",{"type":29,"tag":441,"props":6121,"children":6122},{"style":556},[6123],{"type":35,"value":5500},{"type":29,"tag":441,"props":6125,"children":6126},{"style":588},[6127],{"type":35,"value":4137},{"type":29,"tag":441,"props":6129,"children":6130},{"class":525,"line":594},[6131,6136,6141,6145],{"type":29,"tag":441,"props":6132,"children":6133},{"style":588},[6134],{"type":35,"value":6135},"    \"",{"type":29,"tag":441,"props":6137,"children":6138},{"style":556},[6139],{"type":35,"value":6140},"{context_str}\\n",{"type":29,"tag":441,"props":6142,"children":6143},{"style":588},[6144],{"type":35,"value":2755},{"type":29,"tag":441,"props":6146,"children":6147},{"style":1181},[6148],{"type":35,"value":6149}," # context_str contains Chinese paragraphs retrieved via RAG query\n",{"type":29,"tag":441,"props":6151,"children":6152},{"class":525,"line":607},[6153,6157,6161],{"type":29,"tag":441,"props":6154,"children":6155},{"style":588},[6156],{"type":35,"value":6119},{"type":29,"tag":441,"props":6158,"children":6159},{"style":556},[6160],{"type":35,"value":5500},{"type":29,"tag":441,"props":6162,"children":6163},{"style":588},[6164],{"type":35,"value":4137},{"type":29,"tag":441,"props":6166,"children":6167},{"class":525,"line":631},[6168,6173,6177],{"type":29,"tag":441,"props":6169,"children":6170},{"style":588},[6171],{"type":35,"value":6172},"    \"Ê†πÊçÆ‰∏äËø∞ÁöÑÂèÇËÄÉËµÑÊñôÔºåÂõûÁ≠î‰∏ãÈù¢ÁöÑÈóÆÈ¢ò",{"type":29,"tag":441,"props":6174,"children":6175},{"style":556},[6176],{"type":35,"value":5500},{"type":29,"tag":441,"props":6178,"children":6179},{"style":588},[6180],{"type":35,"value":4137},{"type":29,"tag":441,"props":6182,"children":6183},{"class":525,"line":644},[6184,6189,6194],{"type":29,"tag":441,"props":6185,"children":6186},{"style":588},[6187],{"type":35,"value":6188},"    \"ÈóÆÈ¢òÔºö",{"type":29,"tag":441,"props":6190,"children":6191},{"style":556},[6192],{"type":35,"value":6193},"{user_question}\\n",{"type":29,"tag":441,"props":6195,"children":6196},{"style":588},[6197],{"type":35,"value":4137},{"type":29,"tag":441,"props":6199,"children":6200},{"class":525,"line":658},[6201],{"type":29,"tag":441,"props":6202,"children":6203},{"style":536},[6204],{"type":35,"value":3948},{"type":29,"tag":441,"props":6206,"children":6207},{"class":525,"line":671},[6208],{"type":29,"tag":441,"props":6209,"children":6210},{"emptyLinePlaceholder":24},[6211],{"type":35,"value":1032},{"type":29,"tag":441,"props":6213,"children":6214},{"class":525,"line":684},[6215],{"type":29,"tag":441,"props":6216,"children":6217},{"style":1181},[6218],{"type":35,"value":6219},"# English prompt for text-based Q&A bot\n",{"type":29,"tag":441,"props":6221,"children":6222},{"class":525,"line":697},[6223,6228,6232],{"type":29,"tag":441,"props":6224,"children":6225},{"style":536},[6226],{"type":35,"value":6227},"q_and_a_prompt_english ",{"type":29,"tag":441,"props":6229,"children":6230},{"style":2077},[6231],{"type":35,"value":2080},{"type":29,"tag":441,"props":6233,"children":6234},{"style":536},[6235],{"type":35,"value":6095},{"type":29,"tag":441,"props":6237,"children":6238},{"class":525,"line":720},[6239,6244,6248],{"type":29,"tag":441,"props":6240,"children":6241},{"style":588},[6242],{"type":35,"value":6243},"    \"This is some related reference material:",{"type":29,"tag":441,"props":6245,"children":6246},{"style":556},[6247],{"type":35,"value":5500},{"type":29,"tag":441,"props":6249,"children":6250},{"style":588},[6251],{"type":35,"value":4137},{"type":29,"tag":441,"props":6253,"children":6254},{"class":525,"line":737},[6255,6259,6263],{"type":29,"tag":441,"props":6256,"children":6257},{"style":588},[6258],{"type":35,"value":6119},{"type":29,"tag":441,"props":6260,"children":6261},{"style":556},[6262],{"type":35,"value":5500},{"type":29,"tag":441,"props":6264,"children":6265},{"style":588},[6266],{"type":35,"value":4137},{"type":29,"tag":441,"props":6268,"children":6269},{"class":525,"line":755},[6270,6274,6278,6282],{"type":29,"tag":441,"props":6271,"children":6272},{"style":588},[6273],{"type":35,"value":6135},{"type":29,"tag":441,"props":6275,"children":6276},{"style":556},[6277],{"type":35,"value":6140},{"type":29,"tag":441,"props":6279,"children":6280},{"style":588},[6281],{"type":35,"value":2755},{"type":29,"tag":441,"props":6283,"children":6284},{"style":1181},[6285],{"type":35,"value":6286}," # context_str contains English paragraphs retrieved via RAG query\n",{"type":29,"tag":441,"props":6288,"children":6289},{"class":525,"line":773},[6290,6294,6298],{"type":29,"tag":441,"props":6291,"children":6292},{"style":588},[6293],{"type":35,"value":6119},{"type":29,"tag":441,"props":6295,"children":6296},{"style":556},[6297],{"type":35,"value":5500},{"type":29,"tag":441,"props":6299,"children":6300},{"style":588},[6301],{"type":35,"value":4137},{"type":29,"tag":441,"props":6303,"children":6304},{"class":525,"line":794},[6305,6310,6314],{"type":29,"tag":441,"props":6306,"children":6307},{"style":588},[6308],{"type":35,"value":6309},"    \"Based on the above material, answer the following question:",{"type":29,"tag":441,"props":6311,"children":6312},{"style":556},[6313],{"type":35,"value":5500},{"type":29,"tag":441,"props":6315,"children":6316},{"style":588},[6317],{"type":35,"value":4137},{"type":29,"tag":441,"props":6319,"children":6320},{"class":525,"line":810},[6321,6326,6330],{"type":29,"tag":441,"props":6322,"children":6323},{"style":588},[6324],{"type":35,"value":6325},"    \"Question: ",{"type":29,"tag":441,"props":6327,"children":6328},{"style":556},[6329],{"type":35,"value":6193},{"type":29,"tag":441,"props":6331,"children":6332},{"style":588},[6333],{"type":35,"value":4137},{"type":29,"tag":441,"props":6335,"children":6336},{"class":525,"line":827},[6337],{"type":29,"tag":441,"props":6338,"children":6339},{"style":536},[6340],{"type":35,"value":3948},{"type":29,"tag":38,"props":6342,"children":6343},{},[6344],{"type":29,"tag":192,"props":6345,"children":6348},{"alt":6346,"src":6347},"Multi-modal Q&A example 1","/static/redlm/qa_example_01.png",[],{"type":29,"tag":38,"props":6350,"children":6351},{},[6352],{"type":35,"value":6353},"Asking random questions like this one is a fun way to explore the many scenes of Dream of the Red Chamber.",{"type":29,"tag":38,"props":6355,"children":6356},{},[6357,6362],{"type":29,"tag":192,"props":6358,"children":6361},{"alt":6359,"src":6360},"RAG Flower Pedal Example","/static/redlm/qa_example_flower_pedals.png",[],{"type":29,"tag":192,"props":6363,"children":6366},{"alt":6364,"src":6365},"RAG Flower Pedal Example with Reference","/static/redlm/qa_example_flower_pedals_a.png",[],{"type":29,"tag":71,"props":6368,"children":6370},{"id":6369},"redlm-rag-evaluation",[6371],{"type":35,"value":6372},"RedLM RAG Evaluation",{"type":29,"tag":38,"props":6374,"children":6375},{},[6376],{"type":35,"value":6377},"Examinations have long been a cornerstone of Chinese society, shaping individual aspirations, cultural values, and even government structures. This legacy began with the imperial civil service exams, kƒìj«î (Áßë‰∏æ), established during the Sui and Tang dynasties, and carries through in Modern China with the gaokao (È´òËÄÉ) college entrance examination, both of which have allowed for unprecedented meritocratic routes to power and prestige. Given how widely this novel is studied in China, I was not surprised to find a wealth of examination questions written for students studying Dream of the Red Chamber.",{"type":29,"tag":38,"props":6379,"children":6380},{},[6381,6383,6390],{"type":35,"value":6382},"I used ",{"type":29,"tag":57,"props":6384,"children":6387},{"href":6385,"rel":6386},"https://www.examcoo.com/editor/do/view/id/246401",[60],[6388],{"type":35,"value":6389},"a set of 1000 multiple choice questions about Dream of the Red Chamber on examcoo.com",{"type":35,"value":6391}," to evaluate the effectiveness of the RAG system I built with LlamaIndex. I wrote a script to parse the questions from the website HTML using ChatGPT (parsing HTML is one of my favorite use cases of LLMs!) I filtered the list of 1000 questions down to 877 questions based on the following criteria:",{"type":29,"tag":88,"props":6393,"children":6394},{},[6395,6405],{"type":29,"tag":92,"props":6396,"children":6397},{},[6398,6403],{"type":29,"tag":44,"props":6399,"children":6400},{},[6401],{"type":35,"value":6402},"Four answer choices",{"type":35,"value":6404},": some of the questions had more than four answer choices. I filtered questions with more than four answer choices to keep the evaluation simple. This would allow me to assume that random answer choices would have a 25% chance of being correct.",{"type":29,"tag":92,"props":6406,"children":6407},{},[6408,6413],{"type":29,"tag":44,"props":6409,"children":6410},{},[6411],{"type":35,"value":6412},"Only one answer",{"type":35,"value":6414},": For some questions the correct answer required selecting multiple answer choices. This would also help keep the evaluation logic simple.",{"type":29,"tag":38,"props":6416,"children":6417},{},[6418],{"type":29,"tag":192,"props":6419,"children":6422},{"alt":6420,"src":6421},"Multiple Choice Questions from Dream of the Red Chamber Test","/static/redlm/hlm_mcq.png",[],{"type":29,"tag":38,"props":6424,"children":6425},{},[6426],{"type":35,"value":6427},"Multiple choice questions from a Dream of the Red Chamber test (examcoo.com)",{"type":29,"tag":38,"props":6429,"children":6430},{},[6431],{"type":35,"value":6432},"To run the evaluation I set up two scripts. The first script would prompt the LLM to answer the question without any additional information from the RAG system. This served as a baseline to see how well the LLM could do at answering multiple choice questions about the book. The script simply checks to see if the LLM response contains the letter (A, B, C or D) of the correct answer and keeps track of the number of questions answered correctly.",{"type":29,"tag":38,"props":6434,"children":6435},{},[6436],{"type":35,"value":6437},"Another script was used to take the test using large language models with RAG. In this script, the prompt sent to the LLM included relevant paragraphs from the book based on how similar the query is to each paragraph in the book based on the cosine similarity metric mentioned earlier.",{"type":29,"tag":38,"props":6439,"children":6440},{},[6441],{"type":29,"tag":192,"props":6442,"children":6445},{"alt":6443,"src":6444},"RAG evaluation","/static/redlm/rag_eval.png",[],{"type":29,"tag":38,"props":6447,"children":6448},{},[6449],{"type":35,"value":6450},"Here are some results and other observations from this experiment:",{"type":29,"tag":88,"props":6452,"children":6453},{},[6454,6459,6464,6476,6481,6494],{"type":29,"tag":92,"props":6455,"children":6456},{},[6457],{"type":35,"value":6458},"LLMs alone scored in the mid 30% range (36%)",{"type":29,"tag":92,"props":6460,"children":6461},{},[6462],{"type":35,"value":6463},"LLMs using retrieval augmented generation with the set of questions score in the mid 40% range (44%)",{"type":29,"tag":92,"props":6465,"children":6466},{},[6467,6469,6474],{"type":35,"value":6468},"I used the completion API rather than the chat API and set the ",{"type":29,"tag":427,"props":6470,"children":6472},{"className":6471},[],[6473],{"type":35,"value":3934},{"type":35,"value":6475}," to 16. This was done to ensure that the LLM only gave a short response with a valid answer choice rather than giving a long response with an explanation.",{"type":29,"tag":92,"props":6477,"children":6478},{},[6479],{"type":35,"value":6480},"The evaluation took longer for LLM + RAG test because of the time required for making the RAG query and the longer prompt (including both the original multiple-choice question and the referenced paragraphs).",{"type":29,"tag":92,"props":6482,"children":6483},{},[6484,6486,6492],{"type":35,"value":6485},"I used the ",{"type":29,"tag":427,"props":6487,"children":6489},{"className":6488},[],[6490],{"type":35,"value":6491},"01-ai/Yi-1.5-9B-Chat",{"type":35,"value":6493}," model for this test, but I probably should have used the base model rather than the chat model.",{"type":29,"tag":92,"props":6495,"children":6496},{},[6497],{"type":35,"value":6498},"Some questions would not be capable of being answered by RAG. For example, some of the questions are about film renditions of the novel. Most of the questions seemed relevant to the content of the book, so I didn‚Äôt bother to filter out the questions that were not directly related to the book‚Äôs content.",{"type":29,"tag":38,"props":6500,"children":6501},{},[6502,6504,6509,6511,6516],{"type":35,"value":6503},"Here is an example of a question that the LLM test script answered ",{"type":29,"tag":4262,"props":6505,"children":6506},{},[6507],{"type":35,"value":6508},"incorrectly",{"type":35,"value":6510}," and the LLM + RAG test script answered ",{"type":29,"tag":44,"props":6512,"children":6513},{},[6514],{"type":35,"value":6515},"correctly",{"type":35,"value":3764},{"type":29,"tag":6518,"props":6519,"children":6520},"blockquote",{},[6521,6526,6531,6536,6541],{"type":29,"tag":38,"props":6522,"children":6523},{},[6524],{"type":35,"value":6525},"Áß¶ÈíüÁöÑÁà∂‰∫≤ÊòØÂ¶Ç‰ΩïÊ≠ªÁöÑÔºü",{"type":29,"tag":38,"props":6527,"children":6528},{},[6529],{"type":35,"value":6530},"A„ÄÅÂ§ñÊÑüÈ£éÂØí„ÄÅÈ£éÊØí‰πãÁóá",{"type":29,"tag":38,"props":6532,"children":6533},{},[6534],{"type":35,"value":6535},"B„ÄÅË¢´Êô∫ËÉΩÂÑøÊ∞îÊ≠ªÁöÑ",{"type":29,"tag":38,"props":6537,"children":6538},{},[6539],{"type":35,"value":6540},"C„ÄÅÁîüÊ∞îÂºïÂèëÊóßÁóÖÂä†Èáç",{"type":29,"tag":38,"props":6542,"children":6543},{},[6544],{"type":35,"value":6545},"D„ÄÅÁîüÊ∞îËÄåËØ±Âèë‰∏≠È£éËÄåÊ≠ª",{"type":29,"tag":38,"props":6547,"children":6548},{},[6549],{"type":35,"value":6550},"Translation:",{"type":29,"tag":6518,"props":6552,"children":6553},{},[6554,6559,6569,6579,6589],{"type":29,"tag":38,"props":6555,"children":6556},{},[6557],{"type":35,"value":6558},"How did Qin Zhong's father die?",{"type":29,"tag":38,"props":6560,"children":6561},{},[6562,6567],{"type":29,"tag":44,"props":6563,"children":6564},{},[6565],{"type":35,"value":6566},"A.",{"type":35,"value":6568}," He caught a cold and developed wind-related illnesses.",{"type":29,"tag":38,"props":6570,"children":6571},{},[6572,6577],{"type":29,"tag":44,"props":6573,"children":6574},{},[6575],{"type":35,"value":6576},"B.",{"type":35,"value":6578}," He was angered to death by Zhineng'er (a character).",{"type":29,"tag":38,"props":6580,"children":6581},{},[6582,6587],{"type":29,"tag":44,"props":6583,"children":6584},{},[6585],{"type":35,"value":6586},"C.",{"type":35,"value":6588}," His old illness worsened due to anger.",{"type":29,"tag":38,"props":6590,"children":6591},{},[6592,6597],{"type":29,"tag":44,"props":6593,"children":6594},{},[6595],{"type":35,"value":6596},"D.",{"type":35,"value":6598}," He had a stroke induced by anger and died.",{"type":29,"tag":38,"props":6600,"children":6601},{},[6602],{"type":35,"value":6603},"Here is the paragraphs that the RAG query returned along with the English translation:",{"type":29,"tag":38,"props":6605,"children":6606},{},[6607],{"type":35,"value":6608},"Original",{"type":29,"tag":6518,"props":6610,"children":6611},{},[6612],{"type":29,"tag":38,"props":6613,"children":6614},{},[6615],{"type":35,"value":6616},"Ëç£‰∏§Â§Ñ‰∏ä‰∏ãÂÜÖÂ§ñ‰∫∫Á≠âËé´‰∏çÊ¨¢Â§©ÂñúÂú∞ÔºåÁã¨ÊúâÂÆùÁéâÁΩÆËã•ÁΩîÈóª„ÄÇ‰Ω†ÈÅì‰ªÄ‰πàÁºòÊïÖÔºüÂéüÊù•ËøëÊó•Ê∞¥ÊúàÂ∫µÁöÑÊô∫ËÉΩÁßÅÈÄÉÂÖ•ÂüéÔºåÊù•ÊâæÁß¶ÈíüÔºå‰∏çÊÑèË¢´Áß¶ÈÇ¶‰∏öÁü•ËßâÔºåÂ∞ÜÊô∫ËÉΩÈÄêÂá∫ÔºåÂ∞ÜÁß¶ÈíüÊâì‰∫Ü‰∏ÄÈ°øÔºåËá™Â∑±Ê∞îÁöÑËÄÅÁóÖÂèë‰∫ÜÔºå‰∏â‰∫îÊó•‰æøÂëúÂëºÂìÄÂìâ‰∫Ü„ÄÇÁß¶ÈíüÊú¨Ëá™ÊÄØÂº±ÔºåÂèàÂ∏¶ÁóÖÊú™ÁóäÔºåÂèó‰∫ÜÁ¨ûÊùñÔºå‰ªäËßÅËÄÅÁà∂Ê∞îÊ≠ªÔºåÊÇîÁóõÊó†ÂèäÔºåÂèàÊ∑ª‰∫ÜËÆ∏Â§öÁóÖÁóá„ÄÇÂõ†Ê≠§ÔºåÂÆùÁéâÂøÉ‰∏≠ÊÄÖÊÄÖ‰∏ç‰πê„ÄÇËôΩÊúâÂÖÉÊò•ÊôãÂ∞Å‰πã‰∫ãÔºåÈÇ£Ëß£Âæó‰ªñÁöÑÊÑÅÈó∑ÔºüË¥æÊØçÁ≠âÂ¶Ç‰ΩïË∞¢ÊÅ©ÔºåÂ¶Ç‰ΩïÂõûÂÆ∂Ôºå‰∫≤ÂèãÂ¶Ç‰ΩïÊù•Â∫ÜË¥∫ÔºåÂÆÅËç£‰∏§Â∫úËøëÊó•Â¶Ç‰ΩïÁÉ≠ÈóπÔºå‰ºó‰∫∫Â¶Ç‰ΩïÂæóÊÑèÔºåÁã¨‰ªñ‰∏Ä‰∏™ÁöÜËßÜÊúâÂ¶ÇÊó†ÔºåÊØ´‰∏ç‰ªãÊÑè„ÄÇÂõ†Ê≠§Ôºå‰ºó‰∫∫Âò≤‰ªñË∂äÂèëÂëÜ‰∫Ü„ÄÇ",{"type":29,"tag":38,"props":6618,"children":6619},{},[6620],{"type":35,"value":6621},"English",{"type":29,"tag":6518,"props":6623,"children":6624},{},[6625],{"type":29,"tag":38,"props":6626,"children":6627},{},[6628],{"type":35,"value":6629},"Everyone in the Rong and Ning households, both inside and outside, were extremely happy, except for Baoyu, who seemed indifferent. Do you want to know why? It turns out that recently, the nun Zhineng from Shuiyue Temple secretly ran into the city to find Qin Zhong. Unexpectedly, she was discovered by Qin Zhong's father, Qin Banger. Qin Banger not only drove Zhineng away but also gave Qin Zhong a beating. This made Qin Banger so angry that his old illness relapsed, and within three to five days, he passed away. Qin Zhong had always been weak and hadn't fully recovered from a previous illness. After being beaten and seeing his father die in anger, he was overwhelmed with regret and sorrow, which worsened his condition. As a result, Baoyu felt very melancholic. Although the promotion of Yuan Chun to imperial concubine was a joyful event, it couldn't alleviate the gloom in his heart. While Grandmother Jia and others were busy expressing their gratitude and returning home, and relatives and friends came to celebrate, and the Rong and Ning households were bustling with excitement, Baoyu alone remained completely indifferent to it all. Consequently, everyone started to mock him for becoming more and more absent-minded.",{"type":29,"tag":38,"props":6631,"children":6632},{},[6633],{"type":35,"value":6634},"The correct answer for this question is C.",{"type":29,"tag":71,"props":6636,"children":6638},{"id":6637},"multi-modal-rag-for-visual-reasoning",[6639],{"type":35,"value":6640},"Multi-modal RAG for visual reasoning",{"type":29,"tag":38,"props":6642,"children":6643},{},[6644],{"type":35,"value":6645},"Qwen2-VL is a new AI model that was released in late August 2024. Qwen is the name of Alibaba‚Äôs AI Lab, and it is an abbreviation of the Chinese characters: ÂçÉÈóÆ (\"qian wen\", meaning 1000 questions). VL stands for vision-language, meaning that the model is capable of understanding both text and images. I had tested out the previous version of Qwen‚Äôs vision-language model and was very impressed by how it could accurately describe the contents of images and also answer general questions about images.",{"type":29,"tag":38,"props":6647,"children":6648},{},[6649],{"type":35,"value":6650},"Sun Wen was a Qing-era painter who spent 36 years of his life creating a series of 230 paintings capturing scenes from Dream of the Red Chamber. The paintings are incredibly detailed and often contain repeated figures in a temporal sequence. If you asked a Qwen-VL model to describe one of the images, it might return lengthy description that doesn't fully capture the full detail of the scene. It might also be difficult for a language model to \"focus\" on a portion of the whole image.",{"type":29,"tag":38,"props":6652,"children":6653},{},[6654],{"type":29,"tag":192,"props":6655,"children":6658},{"alt":6656,"src":6657},"Dream of the Red Chamber Painting 131","/static/redlm/painting_131.png",[],{"type":29,"tag":38,"props":6660,"children":6661},{},[6662],{"type":35,"value":6663},"This sparked the idea to create a feature where users can click and drag over an image to select part of a painting, then ask questions specifically about the selected portion. I knew that while this could be achieved with tools like HTML canvas, writing it on my own would be quite time-consuming. It took me just a few minutes to write out the prompt, and Claude 3.5 Sonnet generated a perfect prototype of this feature in under a minute. Here‚Äôs the prompt I used:",{"type":29,"tag":6518,"props":6665,"children":6666},{},[6667,6672,6677,6695,6700],{"type":29,"tag":38,"props":6668,"children":6669},{},[6670],{"type":35,"value":6671},"I'm going to describe a Vue component and I want you to write it using Vue 3 to the best of your ability.",{"type":29,"tag":38,"props":6673,"children":6674},{},[6675],{"type":35,"value":6676},"write a simple single-file vue component using Vue 3 that does the following:",{"type":29,"tag":88,"props":6678,"children":6679},{},[6680,6685,6690],{"type":29,"tag":92,"props":6681,"children":6682},{},[6683],{"type":35,"value":6684},"displays an image",{"type":29,"tag":92,"props":6686,"children":6687},{},[6688],{"type":35,"value":6689},"allows the users to click and drag to select a subsection of the image",{"type":29,"tag":92,"props":6691,"children":6692},{},[6693],{"type":35,"value":6694},"the subsection of the image is saved as a base64-encoded data url to a variable that is displayed below the image",{"type":29,"tag":38,"props":6696,"children":6697},{},[6698],{"type":35,"value":6699},"The solution should make use of HTML canvas. When you click down on the image you begin selecting the subsection. You then move the mouse to make your subsection on the image, and when you mouse-up the subsection is selected and the data url is updated. Then the subsection is displayed at the very bottom of the page as a \"preview\" image using the base 64 image string as the image source.",{"type":29,"tag":38,"props":6701,"children":6702},{},[6703],{"type":35,"value":6704},"The selection box should be a dashed red line",{"type":29,"tag":38,"props":6706,"children":6707},{},[6708],{"type":29,"tag":192,"props":6709,"children":6712},{"alt":6710,"src":6711},"RedLM Image Q&A","/static/redlm/image-qa.png",[],{"type":29,"tag":38,"props":6714,"children":6715},{},[6716],{"type":35,"value":6717},"This shows the final result of the UI I built for the image Q&A feature in RedLM. It uses a similar chat layout that the text-based Q&A feature uses, with the addition of the image preview included in the chat log. The user query in this example just says ‚ÄúPlease describe the contents of the image‚Äù. This was the first image that I tested when building the image Q&A feature to see if the correct passage can be referenced based on the description of an image. This pulled the exact passage and the answer provides details about what happened (a fire broke out) where it happened (at the Gourd Temple) and why it happened (a Monk accidentally set an oil pot on fire).",{"type":29,"tag":38,"props":6719,"children":6720},{},[6721],{"type":35,"value":6722},"Here is a diagram showing the overall flow of data in the image Q&A feature:",{"type":29,"tag":38,"props":6724,"children":6725},{},[6726],{"type":29,"tag":192,"props":6727,"children":6730},{"alt":6728,"src":6729},"Diagram of RedLM Image Q&A with RAG and Vision Language Models","/static/redlm/redlm.drawio.png",[],{"type":29,"tag":38,"props":6732,"children":6733},{},[6734],{"type":35,"value":6735},"This flow chart shows how the image Q&A feature works.",{"type":29,"tag":135,"props":6737,"children":6738},{},[6739,6752,6773,6778,6790],{"type":29,"tag":92,"props":6740,"children":6741},{},[6742,6744,6750],{"type":35,"value":6743},"The user selects part of an image and writes a question. This data is then sent to the RedLM API as a post request to the ",{"type":29,"tag":427,"props":6745,"children":6747},{"className":6746},[],[6748],{"type":35,"value":6749},"/mm-q-and-a",{"type":35,"value":6751}," endpoint (multi-modal Q&A).",{"type":29,"tag":92,"props":6753,"children":6754},{},[6755,6757,6763,6765,6771],{"type":35,"value":6756},"Vision language models are used to get a description of the image. Depending on the application configuration, this query can use models such as ",{"type":29,"tag":427,"props":6758,"children":6760},{"className":6759},[],[6761],{"type":35,"value":6762},"Qwen/Qwen2-VL-2B-Instruct",{"type":35,"value":6764}," on RTX PCs or using the NVIDIA API Catalog using larger models such as ",{"type":29,"tag":427,"props":6766,"children":6768},{"className":6767},[],[6769],{"type":35,"value":6770},"meta/llama-3.2-90b-vision-instruct",{"type":35,"value":6772},". Not all vision language models have the same interface, so I added some logic to handle different model formats.",{"type":29,"tag":92,"props":6774,"children":6775},{},[6776],{"type":35,"value":6777},"The image description is used to fetch relevant documents from the Vector Database",{"type":29,"tag":92,"props":6779,"children":6780},{},[6781,6783,6788],{"type":35,"value":6782},"The full prompt with the image description and relevant documents is sent to the LLM. Again, inference for this step is done either with RTX PCs or using models from the ",{"type":29,"tag":427,"props":6784,"children":6786},{"className":6785},[],[6787],{"type":35,"value":3795},{"type":35,"value":6789}," API catalog.",{"type":29,"tag":92,"props":6791,"children":6792},{},[6793],{"type":35,"value":6794},"The response from the LLM is sent back to the browser and is displayed to the user as a chat message.",{"type":29,"tag":38,"props":6796,"children":6797},{},[6798],{"type":35,"value":6799},"Here is the prompt I used for the image Q&A feature:",{"type":29,"tag":514,"props":6801,"children":6803},{"code":6802,"language":2049,"meta":8,"className":2050,"style":8},"# Chinese prompt for image-based Q&A bot\nmm_q_and_a_prompt = PromptTemplate(\n    \"ËøôÊòØ‰π¶‰∏≠Áõ∏ÂÖ≥ÁöÑÂÜÖÂÆπÔºö\\n\"\n    \"{context_str}\\n\"\n    \"---------------------\\n\"\n    \"‰∏ãÈù¢ÊòØÂú∫ÊôØÁöÑÊèèËø∞Ôºö\\n\"\n    \"---------------------\\n\"\n    \"{image_description}\\n\"\n    \"---------------------\\n\"\n    \"Ê†πÊçÆ‰∏äËø∞ÁöÑ‰ø°ÊÅØÔºåÂ∞ΩÈáèËß£Èáä‰∏äËØ¥ÁöÑÂú∫ÊôØÂíå‰π¶ÁöÑÂÖ≥Á≥ª„ÄÇ\"\n)\n\n# English prompt for image-based Q&A bot\nmm_q_and_a_prompt_english = PromptTemplate(\n    \"Here is relevant content from the book:\\n\"\n    \"{context_str}\\n\"\n    \"---------------------\\n\"\n    \"Below is the description of a scene:\\n\"\n    \"---------------------\\n\"\n    \"{image_description}\\n\"\n    \"---------------------\\n\"\n    \"Based on the information provided above, try to explain the relationship between the described scene and the book content.\"\n)\n",[6804],{"type":29,"tag":427,"props":6805,"children":6806},{"__ignoreMap":8},[6807,6815,6831,6847,6862,6877,6893,6908,6924,6939,6947,6954,6961,6969,6985,7001,7016,7031,7047,7062,7077,7092,7100],{"type":29,"tag":441,"props":6808,"children":6809},{"class":525,"line":526},[6810],{"type":29,"tag":441,"props":6811,"children":6812},{"style":1181},[6813],{"type":35,"value":6814},"# Chinese prompt for image-based Q&A bot\n",{"type":29,"tag":441,"props":6816,"children":6817},{"class":525,"line":542},[6818,6823,6827],{"type":29,"tag":441,"props":6819,"children":6820},{"style":536},[6821],{"type":35,"value":6822},"mm_q_and_a_prompt ",{"type":29,"tag":441,"props":6824,"children":6825},{"style":2077},[6826],{"type":35,"value":2080},{"type":29,"tag":441,"props":6828,"children":6829},{"style":536},[6830],{"type":35,"value":6095},{"type":29,"tag":441,"props":6832,"children":6833},{"class":525,"line":562},[6834,6839,6843],{"type":29,"tag":441,"props":6835,"children":6836},{"style":588},[6837],{"type":35,"value":6838},"    \"ËøôÊòØ‰π¶‰∏≠Áõ∏ÂÖ≥ÁöÑÂÜÖÂÆπÔºö",{"type":29,"tag":441,"props":6840,"children":6841},{"style":556},[6842],{"type":35,"value":5500},{"type":29,"tag":441,"props":6844,"children":6845},{"style":588},[6846],{"type":35,"value":4137},{"type":29,"tag":441,"props":6848,"children":6849},{"class":525,"line":575},[6850,6854,6858],{"type":29,"tag":441,"props":6851,"children":6852},{"style":588},[6853],{"type":35,"value":6135},{"type":29,"tag":441,"props":6855,"children":6856},{"style":556},[6857],{"type":35,"value":6140},{"type":29,"tag":441,"props":6859,"children":6860},{"style":588},[6861],{"type":35,"value":4137},{"type":29,"tag":441,"props":6863,"children":6864},{"class":525,"line":594},[6865,6869,6873],{"type":29,"tag":441,"props":6866,"children":6867},{"style":588},[6868],{"type":35,"value":6119},{"type":29,"tag":441,"props":6870,"children":6871},{"style":556},[6872],{"type":35,"value":5500},{"type":29,"tag":441,"props":6874,"children":6875},{"style":588},[6876],{"type":35,"value":4137},{"type":29,"tag":441,"props":6878,"children":6879},{"class":525,"line":607},[6880,6885,6889],{"type":29,"tag":441,"props":6881,"children":6882},{"style":588},[6883],{"type":35,"value":6884},"    \"‰∏ãÈù¢ÊòØÂú∫ÊôØÁöÑÊèèËø∞Ôºö",{"type":29,"tag":441,"props":6886,"children":6887},{"style":556},[6888],{"type":35,"value":5500},{"type":29,"tag":441,"props":6890,"children":6891},{"style":588},[6892],{"type":35,"value":4137},{"type":29,"tag":441,"props":6894,"children":6895},{"class":525,"line":631},[6896,6900,6904],{"type":29,"tag":441,"props":6897,"children":6898},{"style":588},[6899],{"type":35,"value":6119},{"type":29,"tag":441,"props":6901,"children":6902},{"style":556},[6903],{"type":35,"value":5500},{"type":29,"tag":441,"props":6905,"children":6906},{"style":588},[6907],{"type":35,"value":4137},{"type":29,"tag":441,"props":6909,"children":6910},{"class":525,"line":644},[6911,6915,6920],{"type":29,"tag":441,"props":6912,"children":6913},{"style":588},[6914],{"type":35,"value":6135},{"type":29,"tag":441,"props":6916,"children":6917},{"style":556},[6918],{"type":35,"value":6919},"{image_description}\\n",{"type":29,"tag":441,"props":6921,"children":6922},{"style":588},[6923],{"type":35,"value":4137},{"type":29,"tag":441,"props":6925,"children":6926},{"class":525,"line":658},[6927,6931,6935],{"type":29,"tag":441,"props":6928,"children":6929},{"style":588},[6930],{"type":35,"value":6119},{"type":29,"tag":441,"props":6932,"children":6933},{"style":556},[6934],{"type":35,"value":5500},{"type":29,"tag":441,"props":6936,"children":6937},{"style":588},[6938],{"type":35,"value":4137},{"type":29,"tag":441,"props":6940,"children":6941},{"class":525,"line":671},[6942],{"type":29,"tag":441,"props":6943,"children":6944},{"style":588},[6945],{"type":35,"value":6946},"    \"Ê†πÊçÆ‰∏äËø∞ÁöÑ‰ø°ÊÅØÔºåÂ∞ΩÈáèËß£Èáä‰∏äËØ¥ÁöÑÂú∫ÊôØÂíå‰π¶ÁöÑÂÖ≥Á≥ª„ÄÇ\"\n",{"type":29,"tag":441,"props":6948,"children":6949},{"class":525,"line":684},[6950],{"type":29,"tag":441,"props":6951,"children":6952},{"style":536},[6953],{"type":35,"value":3948},{"type":29,"tag":441,"props":6955,"children":6956},{"class":525,"line":697},[6957],{"type":29,"tag":441,"props":6958,"children":6959},{"emptyLinePlaceholder":24},[6960],{"type":35,"value":1032},{"type":29,"tag":441,"props":6962,"children":6963},{"class":525,"line":720},[6964],{"type":29,"tag":441,"props":6965,"children":6966},{"style":1181},[6967],{"type":35,"value":6968},"# English prompt for image-based Q&A bot\n",{"type":29,"tag":441,"props":6970,"children":6971},{"class":525,"line":737},[6972,6977,6981],{"type":29,"tag":441,"props":6973,"children":6974},{"style":536},[6975],{"type":35,"value":6976},"mm_q_and_a_prompt_english ",{"type":29,"tag":441,"props":6978,"children":6979},{"style":2077},[6980],{"type":35,"value":2080},{"type":29,"tag":441,"props":6982,"children":6983},{"style":536},[6984],{"type":35,"value":6095},{"type":29,"tag":441,"props":6986,"children":6987},{"class":525,"line":755},[6988,6993,6997],{"type":29,"tag":441,"props":6989,"children":6990},{"style":588},[6991],{"type":35,"value":6992},"    \"Here is relevant content from the book:",{"type":29,"tag":441,"props":6994,"children":6995},{"style":556},[6996],{"type":35,"value":5500},{"type":29,"tag":441,"props":6998,"children":6999},{"style":588},[7000],{"type":35,"value":4137},{"type":29,"tag":441,"props":7002,"children":7003},{"class":525,"line":773},[7004,7008,7012],{"type":29,"tag":441,"props":7005,"children":7006},{"style":588},[7007],{"type":35,"value":6135},{"type":29,"tag":441,"props":7009,"children":7010},{"style":556},[7011],{"type":35,"value":6140},{"type":29,"tag":441,"props":7013,"children":7014},{"style":588},[7015],{"type":35,"value":4137},{"type":29,"tag":441,"props":7017,"children":7018},{"class":525,"line":794},[7019,7023,7027],{"type":29,"tag":441,"props":7020,"children":7021},{"style":588},[7022],{"type":35,"value":6119},{"type":29,"tag":441,"props":7024,"children":7025},{"style":556},[7026],{"type":35,"value":5500},{"type":29,"tag":441,"props":7028,"children":7029},{"style":588},[7030],{"type":35,"value":4137},{"type":29,"tag":441,"props":7032,"children":7033},{"class":525,"line":810},[7034,7039,7043],{"type":29,"tag":441,"props":7035,"children":7036},{"style":588},[7037],{"type":35,"value":7038},"    \"Below is the description of a scene:",{"type":29,"tag":441,"props":7040,"children":7041},{"style":556},[7042],{"type":35,"value":5500},{"type":29,"tag":441,"props":7044,"children":7045},{"style":588},[7046],{"type":35,"value":4137},{"type":29,"tag":441,"props":7048,"children":7049},{"class":525,"line":827},[7050,7054,7058],{"type":29,"tag":441,"props":7051,"children":7052},{"style":588},[7053],{"type":35,"value":6119},{"type":29,"tag":441,"props":7055,"children":7056},{"style":556},[7057],{"type":35,"value":5500},{"type":29,"tag":441,"props":7059,"children":7060},{"style":588},[7061],{"type":35,"value":4137},{"type":29,"tag":441,"props":7063,"children":7064},{"class":525,"line":844},[7065,7069,7073],{"type":29,"tag":441,"props":7066,"children":7067},{"style":588},[7068],{"type":35,"value":6135},{"type":29,"tag":441,"props":7070,"children":7071},{"style":556},[7072],{"type":35,"value":6919},{"type":29,"tag":441,"props":7074,"children":7075},{"style":588},[7076],{"type":35,"value":4137},{"type":29,"tag":441,"props":7078,"children":7079},{"class":525,"line":865},[7080,7084,7088],{"type":29,"tag":441,"props":7081,"children":7082},{"style":588},[7083],{"type":35,"value":6119},{"type":29,"tag":441,"props":7085,"children":7086},{"style":556},[7087],{"type":35,"value":5500},{"type":29,"tag":441,"props":7089,"children":7090},{"style":588},[7091],{"type":35,"value":4137},{"type":29,"tag":441,"props":7093,"children":7094},{"class":525,"line":881},[7095],{"type":29,"tag":441,"props":7096,"children":7097},{"style":588},[7098],{"type":35,"value":7099},"    \"Based on the information provided above, try to explain the relationship between the described scene and the book content.\"\n",{"type":29,"tag":441,"props":7101,"children":7102},{"class":525,"line":898},[7103],{"type":29,"tag":441,"props":7104,"children":7105},{"style":536},[7106],{"type":35,"value":3948},{"type":29,"tag":38,"props":7108,"children":7109},{},[7110],{"type":35,"value":7111},"The prompt engineering for this feature was tricky. I was able to get some awesome results that would give me detailed and accurate responses, and then sometimes the LLM would seem confused about my query and tell me that there was no relationship between the scene description and the book content. Sometimes it would give me an accurate description of the scene, but then proceed to tell me that the book content is not related to the scene at all.",{"type":29,"tag":38,"props":7113,"children":7114},{},[7115],{"type":35,"value":7116},"There is another important concept from LlamaIndex that I used to build the image Q&A feature: metadata filtering. Metadata filtering is an important concept in RAG systems  because it helps you focus your query on relevant documents in a precise way. A very simple example might be a RAG system that indexes news articles and stores the associated date as metadata. You could allow a user to set a date range for their query and only include articles that match the given date range.",{"type":29,"tag":38,"props":7118,"children":7119},{},[7120],{"type":35,"value":7121},"For my image Q&A system, I have a mapping between the paintings and their associated chapters. When I ask a question about a painting, I want to use the description of the image to find similar paragraphs, but only the paragraphs that occur in the painting‚Äôs associated chapter. What I ended up doing was filtering the entire index before making the query. The alternative would be filtering the returned nodes after making the query, but this would have the possibility of not returning any nodes.",{"type":29,"tag":38,"props":7123,"children":7124},{},[7125],{"type":35,"value":7126},"Here‚Äôs what some of the metadata filtering code looks like:",{"type":29,"tag":514,"props":7128,"children":7130},{"code":7129,"language":2049,"meta":8,"className":2050,"style":8},"# main.py\n# filter by chapters associated with the queried image\nfilters = MetadataFilters(\n    filters=[ExactMatchFilter(key=\"chapter\", value=str(req_data.chapter))]\n)\nquery_engine = get_query_engine_for_multi_modal(filters)\n\n# rag.py\n# utility function that returns the query engine use for image Q&A\n# the index is filtered to only include nodes associated with the image being queried\ndef get_query_engine_for_multi_modal(filters):\n    retriever = index.as_retriever(filters=filters)\n    synthesizer = get_response_synthesizer(response_mode=\"compact\")\n    try:\n        query_engine = QAndAQueryEngine(\n            retriever=retriever,\n            response_synthesizer=synthesizer,\n            llm=model,\n            qa_prompt=mm_q_and_a_prompt,\n        )\n    except Exception as e:\n        print(e)\n    return query_engine\n",[7131],{"type":29,"tag":427,"props":7132,"children":7133},{"__ignoreMap":8},[7134,7142,7150,7167,7219,7226,7243,7250,7258,7266,7274,7299,7329,7364,7376,7393,7410,7427,7444,7461,7468,7491,7504],{"type":29,"tag":441,"props":7135,"children":7136},{"class":525,"line":526},[7137],{"type":29,"tag":441,"props":7138,"children":7139},{"style":1181},[7140],{"type":35,"value":7141},"# main.py\n",{"type":29,"tag":441,"props":7143,"children":7144},{"class":525,"line":542},[7145],{"type":29,"tag":441,"props":7146,"children":7147},{"style":1181},[7148],{"type":35,"value":7149},"# filter by chapters associated with the queried image\n",{"type":29,"tag":441,"props":7151,"children":7152},{"class":525,"line":562},[7153,7158,7162],{"type":29,"tag":441,"props":7154,"children":7155},{"style":536},[7156],{"type":35,"value":7157},"filters ",{"type":29,"tag":441,"props":7159,"children":7160},{"style":2077},[7161],{"type":35,"value":2080},{"type":29,"tag":441,"props":7163,"children":7164},{"style":536},[7165],{"type":35,"value":7166}," MetadataFilters(\n",{"type":29,"tag":441,"props":7168,"children":7169},{"class":525,"line":575},[7170,7175,7179,7184,7189,7193,7197,7201,7206,7210,7214],{"type":29,"tag":441,"props":7171,"children":7172},{"style":2071},[7173],{"type":35,"value":7174},"    filters",{"type":29,"tag":441,"props":7176,"children":7177},{"style":2077},[7178],{"type":35,"value":2080},{"type":29,"tag":441,"props":7180,"children":7181},{"style":536},[7182],{"type":35,"value":7183},"[ExactMatchFilter(",{"type":29,"tag":441,"props":7185,"children":7186},{"style":2071},[7187],{"type":35,"value":7188},"key",{"type":29,"tag":441,"props":7190,"children":7191},{"style":2077},[7192],{"type":35,"value":2080},{"type":29,"tag":441,"props":7194,"children":7195},{"style":588},[7196],{"type":35,"value":4582},{"type":29,"tag":441,"props":7198,"children":7199},{"style":536},[7200],{"type":35,"value":2193},{"type":29,"tag":441,"props":7202,"children":7203},{"style":2071},[7204],{"type":35,"value":7205},"value",{"type":29,"tag":441,"props":7207,"children":7208},{"style":2077},[7209],{"type":35,"value":2080},{"type":29,"tag":441,"props":7211,"children":7212},{"style":2303},[7213],{"type":35,"value":2306},{"type":29,"tag":441,"props":7215,"children":7216},{"style":536},[7217],{"type":35,"value":7218},"(req_data.chapter))]\n",{"type":29,"tag":441,"props":7220,"children":7221},{"class":525,"line":594},[7222],{"type":29,"tag":441,"props":7223,"children":7224},{"style":536},[7225],{"type":35,"value":3948},{"type":29,"tag":441,"props":7227,"children":7228},{"class":525,"line":607},[7229,7234,7238],{"type":29,"tag":441,"props":7230,"children":7231},{"style":536},[7232],{"type":35,"value":7233},"query_engine ",{"type":29,"tag":441,"props":7235,"children":7236},{"style":2077},[7237],{"type":35,"value":2080},{"type":29,"tag":441,"props":7239,"children":7240},{"style":536},[7241],{"type":35,"value":7242}," get_query_engine_for_multi_modal(filters)\n",{"type":29,"tag":441,"props":7244,"children":7245},{"class":525,"line":631},[7246],{"type":29,"tag":441,"props":7247,"children":7248},{"emptyLinePlaceholder":24},[7249],{"type":35,"value":1032},{"type":29,"tag":441,"props":7251,"children":7252},{"class":525,"line":644},[7253],{"type":29,"tag":441,"props":7254,"children":7255},{"style":1181},[7256],{"type":35,"value":7257},"# rag.py\n",{"type":29,"tag":441,"props":7259,"children":7260},{"class":525,"line":658},[7261],{"type":29,"tag":441,"props":7262,"children":7263},{"style":1181},[7264],{"type":35,"value":7265},"# utility function that returns the query engine use for image Q&A\n",{"type":29,"tag":441,"props":7267,"children":7268},{"class":525,"line":671},[7269],{"type":29,"tag":441,"props":7270,"children":7271},{"style":1181},[7272],{"type":35,"value":7273},"# the index is filtered to only include nodes associated with the image being queried\n",{"type":29,"tag":441,"props":7275,"children":7276},{"class":525,"line":684},[7277,7281,7286,7290,7295],{"type":29,"tag":441,"props":7278,"children":7279},{"style":2091},[7280],{"type":35,"value":5031},{"type":29,"tag":441,"props":7282,"children":7283},{"style":2060},[7284],{"type":35,"value":7285}," get_query_engine_for_multi_modal",{"type":29,"tag":441,"props":7287,"children":7288},{"style":536},[7289],{"type":35,"value":2068},{"type":29,"tag":441,"props":7291,"children":7292},{"style":2111},[7293],{"type":35,"value":7294},"filters",{"type":29,"tag":441,"props":7296,"children":7297},{"style":536},[7298],{"type":35,"value":2165},{"type":29,"tag":441,"props":7300,"children":7301},{"class":525,"line":697},[7302,7307,7311,7316,7320,7324],{"type":29,"tag":441,"props":7303,"children":7304},{"style":536},[7305],{"type":35,"value":7306},"    retriever ",{"type":29,"tag":441,"props":7308,"children":7309},{"style":2077},[7310],{"type":35,"value":2080},{"type":29,"tag":441,"props":7312,"children":7313},{"style":536},[7314],{"type":35,"value":7315}," index.as_retriever(",{"type":29,"tag":441,"props":7317,"children":7318},{"style":2071},[7319],{"type":35,"value":7294},{"type":29,"tag":441,"props":7321,"children":7322},{"style":2077},[7323],{"type":35,"value":2080},{"type":29,"tag":441,"props":7325,"children":7326},{"style":536},[7327],{"type":35,"value":7328},"filters)\n",{"type":29,"tag":441,"props":7330,"children":7331},{"class":525,"line":720},[7332,7337,7341,7346,7351,7355,7360],{"type":29,"tag":441,"props":7333,"children":7334},{"style":536},[7335],{"type":35,"value":7336},"    synthesizer ",{"type":29,"tag":441,"props":7338,"children":7339},{"style":2077},[7340],{"type":35,"value":2080},{"type":29,"tag":441,"props":7342,"children":7343},{"style":536},[7344],{"type":35,"value":7345}," get_response_synthesizer(",{"type":29,"tag":441,"props":7347,"children":7348},{"style":2071},[7349],{"type":35,"value":7350},"response_mode",{"type":29,"tag":441,"props":7352,"children":7353},{"style":2077},[7354],{"type":35,"value":2080},{"type":29,"tag":441,"props":7356,"children":7357},{"style":588},[7358],{"type":35,"value":7359},"\"compact\"",{"type":29,"tag":441,"props":7361,"children":7362},{"style":536},[7363],{"type":35,"value":3948},{"type":29,"tag":441,"props":7365,"children":7366},{"class":525,"line":737},[7367,7372],{"type":29,"tag":441,"props":7368,"children":7369},{"style":2077},[7370],{"type":35,"value":7371},"    try",{"type":29,"tag":441,"props":7373,"children":7374},{"style":536},[7375],{"type":35,"value":539},{"type":29,"tag":441,"props":7377,"children":7378},{"class":525,"line":755},[7379,7384,7388],{"type":29,"tag":441,"props":7380,"children":7381},{"style":536},[7382],{"type":35,"value":7383},"        query_engine ",{"type":29,"tag":441,"props":7385,"children":7386},{"style":2077},[7387],{"type":35,"value":2080},{"type":29,"tag":441,"props":7389,"children":7390},{"style":536},[7391],{"type":35,"value":7392}," QAndAQueryEngine(\n",{"type":29,"tag":441,"props":7394,"children":7395},{"class":525,"line":773},[7396,7401,7405],{"type":29,"tag":441,"props":7397,"children":7398},{"style":2071},[7399],{"type":35,"value":7400},"            retriever",{"type":29,"tag":441,"props":7402,"children":7403},{"style":2077},[7404],{"type":35,"value":2080},{"type":29,"tag":441,"props":7406,"children":7407},{"style":536},[7408],{"type":35,"value":7409},"retriever,\n",{"type":29,"tag":441,"props":7411,"children":7412},{"class":525,"line":794},[7413,7418,7422],{"type":29,"tag":441,"props":7414,"children":7415},{"style":2071},[7416],{"type":35,"value":7417},"            response_synthesizer",{"type":29,"tag":441,"props":7419,"children":7420},{"style":2077},[7421],{"type":35,"value":2080},{"type":29,"tag":441,"props":7423,"children":7424},{"style":536},[7425],{"type":35,"value":7426},"synthesizer,\n",{"type":29,"tag":441,"props":7428,"children":7429},{"class":525,"line":810},[7430,7435,7439],{"type":29,"tag":441,"props":7431,"children":7432},{"style":2071},[7433],{"type":35,"value":7434},"            llm",{"type":29,"tag":441,"props":7436,"children":7437},{"style":2077},[7438],{"type":35,"value":2080},{"type":29,"tag":441,"props":7440,"children":7441},{"style":536},[7442],{"type":35,"value":7443},"model,\n",{"type":29,"tag":441,"props":7445,"children":7446},{"class":525,"line":827},[7447,7452,7456],{"type":29,"tag":441,"props":7448,"children":7449},{"style":2071},[7450],{"type":35,"value":7451},"            qa_prompt",{"type":29,"tag":441,"props":7453,"children":7454},{"style":2077},[7455],{"type":35,"value":2080},{"type":29,"tag":441,"props":7457,"children":7458},{"style":536},[7459],{"type":35,"value":7460},"mm_q_and_a_prompt,\n",{"type":29,"tag":441,"props":7462,"children":7463},{"class":525,"line":844},[7464],{"type":29,"tag":441,"props":7465,"children":7466},{"style":536},[7467],{"type":35,"value":4859},{"type":29,"tag":441,"props":7469,"children":7470},{"class":525,"line":865},[7471,7476,7481,7486],{"type":29,"tag":441,"props":7472,"children":7473},{"style":2077},[7474],{"type":35,"value":7475},"    except",{"type":29,"tag":441,"props":7477,"children":7478},{"style":2303},[7479],{"type":35,"value":7480}," Exception",{"type":29,"tag":441,"props":7482,"children":7483},{"style":2077},[7484],{"type":35,"value":7485}," as",{"type":29,"tag":441,"props":7487,"children":7488},{"style":536},[7489],{"type":35,"value":7490}," e:\n",{"type":29,"tag":441,"props":7492,"children":7493},{"class":525,"line":881},[7494,7499],{"type":29,"tag":441,"props":7495,"children":7496},{"style":2176},[7497],{"type":35,"value":7498},"        print",{"type":29,"tag":441,"props":7500,"children":7501},{"style":536},[7502],{"type":35,"value":7503},"(e)\n",{"type":29,"tag":441,"props":7505,"children":7506},{"class":525,"line":898},[7507,7511],{"type":29,"tag":441,"props":7508,"children":7509},{"style":2077},[7510],{"type":35,"value":6028},{"type":29,"tag":441,"props":7512,"children":7513},{"style":536},[7514],{"type":35,"value":7515}," query_engine\n",{"type":29,"tag":38,"props":7517,"children":7518},{},[7519],{"type":35,"value":7520},"This seemed to work well for my use case, but it might not be a best practice, and it might not be efficient at a bigger scale.",{"type":29,"tag":123,"props":7522,"children":7524},{"id":7523},"multi-modal-qa-examples",[7525],{"type":35,"value":7526},"Multi-modal Q&A examples",{"type":29,"tag":38,"props":7528,"children":7529},{},[7530],{"type":35,"value":7531},"Here are some more examples of results from different types of questions from the multi-modal Q&A bot.",{"type":29,"tag":38,"props":7533,"children":7534},{},[7535],{"type":35,"value":7536},"The response to the following query did a good job of combining information gathered from the image description and image from related passages.",{"type":29,"tag":38,"props":7538,"children":7539},{},[7540,7545],{"type":29,"tag":192,"props":7541,"children":7544},{"alt":7542,"src":7543},"Multi-modal Q&A example 2","/static/redlm/qa_example_02.png",[],{"type":29,"tag":192,"props":7546,"children":7549},{"alt":7547,"src":7548},"Multi-modal Q&A example 3","/static/redlm/qa_example_03.png",[],{"type":29,"tag":38,"props":7551,"children":7552},{},[7553],{"type":29,"tag":192,"props":7554,"children":7557},{"alt":7555,"src":7556},"Q&A Example with Carriage","/static/redlm/qa_example_carriage.png",[],{"type":29,"tag":38,"props":7559,"children":7560},{},[7561],{"type":29,"tag":192,"props":7562,"children":7565},{"alt":7563,"src":7564},"Ou Guan Example","/static/redlm/qa_example_ou_guan.png",[],{"type":29,"tag":38,"props":7567,"children":7568},{},[7569,7571,7578],{"type":35,"value":7570},"This is one of my favorite examples of the RedLM image Q&A bot in action. The query here in Chinese says: \"What are these two people doing\"? The answer incorporates a description of what is happening in the story (Jia Baoyu comes across Ou Guan while visiting a temple) and also describes the significance of what is happening (",{"type":29,"tag":57,"props":7572,"children":7575},{"href":7573,"rel":7574},"https://en.wikipedia.org/wiki/Joss_paper",[60],[7576],{"type":35,"value":7577},"burning paper money as a form of Chinese ancestral worship",{"type":35,"value":7579},"). But this answer is not perfect and it demonstrates some of the difficulties I had with the prompt engineering for this project. The first part makes a lot of sense:",{"type":29,"tag":6518,"props":7581,"children":7582},{},[7583],{"type":29,"tag":38,"props":7584,"children":7585},{},[7586],{"type":35,"value":7587},"ËøôÊÆµÂèÇËÄÉËµÑÊñôÊù•Ëá™‰∏≠ÂõΩÂè§ÂÖ∏Â∞èËØ¥„ÄäÁ∫¢Ê•ºÊ¢¶„ÄãÔºåËÆ≤Ëø∞‰∫ÜË¥æÂÆùÁéâÂú®Êé¢ËÆøÂØ∫Â∫ôÊó∂ÂèëÁé∞ËóïÂÆòÂú®Ê≤≥ËæπÁÉßÁ∫∏Èí±ÁöÑÊÉÖÊôØ„ÄÇËóïÂÆòÊòØË¥æÂ∫ú‰∏≠ÁöÑ‰∏Ä‰∏™ÊàèÂ≠êÔºåÂ•πÁöÑË°å‰∏∫ÂèØËÉΩ‰ª£Ë°®‰∫ÜÂØπÂéª‰∏ñ‰∫≤‰∫∫ÁöÑÂìÄÊÇºÊàñÁ•≠Â••„ÄÇË¥æÂÆùÁéâËØ¢ÈóÆÂ•πÁÉßÁ∫∏ÁöÑÂéüÂõ†ÔºåËóïÂÆòÈÄèÈú≤‰∫ÜËá™Â∑±ÊúâÁßÅ‰∏ãÁöÑÊÉÖÊÑüÈóÆÈ¢òÔºåÂπ∂‰∏îÊèêÂà∞‰∫ÜËä≥ÂÆòÂíåËïäÂÆòÔºåÊöóÁ§∫‰∫ÜÂ•π‰ª¨‰πãÈó¥ÂèØËÉΩÂ≠òÂú®ÊüêÁßçÁßòÂØÜÊàñÊÉÖÊÑüËÅîÁ≥ª„ÄÇ",{"type":29,"tag":6518,"props":7589,"children":7590},{},[7591],{"type":29,"tag":38,"props":7592,"children":7593},{},[7594],{"type":35,"value":7595},"This reference is from the classical Chinese novel Dream of the Red Chamber, describing a scene where Jia Baoyu discovers Ou Guan burning paper money by the river during his visit to a temple. Ou Guan is a performer in the Jia household, and her actions might represent mourning or honoring deceased loved ones. Jia Baoyu asks her why she is burning the paper, and Ou Guan reveals that she has private emotional issues, mentioning Fang Guan and Rui Guan, hinting that there might be some kind of secret or emotional connection among them.",{"type":29,"tag":38,"props":7597,"children":7598},{},[7599],{"type":35,"value":7600},"But the second part seems to contradict the first part of the response:",{"type":29,"tag":6518,"props":7602,"children":7603},{},[7604],{"type":29,"tag":38,"props":7605,"children":7606},{},[7607],{"type":35,"value":7608},"Áõ∏ÊØî‰πã‰∏ãÔºå‰Ω†ÊèèËø∞ÁöÑÁîª‰ΩúÂú∫ÊôØ‰∏é„ÄäÁ∫¢Ê•ºÊ¢¶„Äã‰∏≠ÁöÑÊèèËø∞‰∏çÂêå„ÄÇÁîª‰ΩúÊèèÁªòÁöÑÊòØ‰∏§‰∏™‰∫∫Âú®Ê≤≥ËæπÁöÑÂú∫ÊôØÔºåÂ∑¶ËæπÁöÑ‰∫∫Ë∑™Âú®Âú∞‰∏äÔºå‰ºº‰πéÂú®ÁÉß‰∏úË•øÔºåÂè≥ËæπÁöÑ‰∫∫Á´ôÂú®ÊóÅËæπÔºå‰ºº‰πéÂú®ËßÇÂØüÊàñÊåáÂØº„ÄÇÊ†πÊçÆ‰Ω†Êèê‰æõÁöÑÊèèËø∞ÔºåÊó†Ê≥ïÁ°ÆÂÆöÁîª‰∏≠‰∫∫Áâ©ÁöÑÂÖ∑‰ΩìË°å‰∏∫ÔºåÂ¶ÇÂèØËÉΩÊòØÁÉßÊ∞¥„ÄÅÁÖÆÈ•≠„ÄÅÁÉßËçØÁ≠â„ÄÇÂõ†Ê≠§ÔºåËøôÂπÖÁîªÂèØËÉΩÊòØ‰∏ÄÂπÖÁé∞ÂÆû‰∏ª‰πâ‰ΩúÂìÅÔºåÊèèÁªò‰∫ÜÊó•Â∏∏ÁîüÊ¥ª‰∏≠ÁöÑ‰∏ÄÂπï„ÄÇÂÆÉÂèØËÉΩÊ≤°ÊúâÂÉè„ÄäÁ∫¢Ê•ºÊ¢¶„Äã‰∏≠ÁöÑÊÉÖËäÇÈÇ£Ê†∑Ê∑±ÂàªÁöÑÊÉÖÊÑüÊàñÁßòÂØÜËÉåÊôØÔºåËÄåÊòØÂçïÁ∫ØÂú∞Ë°®Áé∞‰∫Ü‰∫∫‰∏é‰∫∫‰πãÈó¥ÁöÑÂÖ≥Á≥ªÂíåË°å‰∏∫„ÄÇÊ≠§Â§ñÔºåÁîª‰∏≠ÁöÑËÉåÊôØ„ÄÅ‰∫∫Áâ©ÁöÑË°®ÊÉÖÂíåÂßøÊÄÅÁ≠âÁªÜËäÇ‰πü‰ºöÂØπÁîªÈù¢ÁöÑÊÑè‰πâ‰∫ßÁîüÂΩ±ÂìçÔºåÈúÄË¶ÅÁªìÂêàÂÖ∑‰ΩìÁöÑÁîª‰ΩúËøõË°åÂàÜÊûê„ÄÇ",{"type":29,"tag":6518,"props":7610,"children":7611},{},[7612],{"type":29,"tag":38,"props":7613,"children":7614},{},[7615],{"type":35,"value":7616},"In contrast, the scene you described in the painting differs from the depiction in Dream of the Red Chamber. The painting shows two people by the river: the person on the left is kneeling on the ground, seemingly burning something, while the person on the right stands nearby, possibly observing or guiding. Based on your description, it‚Äôs unclear what specific action the figures are engaged in, such as possibly boiling water, cooking, or burning herbs. Therefore, this painting might be a realist work, portraying a moment from everyday life. It may not have the profound emotional or secretive background found in the storyline of Dream of the Red Chamber, instead simply highlighting the relationships and actions between individuals. Additionally, details such as the background, expressions, and postures of the figures in the painting would also influence the scene‚Äôs meaning and would require analysis based on the specific artwork.",{"type":29,"tag":71,"props":7618,"children":7620},{"id":7619},"llamaindex-developer-experience",[7621],{"type":35,"value":7622},"LlamaIndex Developer Experience",{"type":29,"tag":38,"props":7624,"children":7625},{},[7626],{"type":35,"value":7627},"Overall, I found the LlamaIndex documentation to be very helpful. Before using LlamaIndex for this project I had used LangChain to build a RAG POC, but I didn‚Äôt get very good results. I love how the LlamaIndex documentation has a 5-line starter example for building a RAG system:",{"type":29,"tag":514,"props":7629,"children":7631},{"code":7630,"language":2049,"meta":8,"className":2050,"style":8},"from llama_index.core import VectorStoreIndex, SimpleDirectoryReader\n\ndocuments = SimpleDirectoryReader(\"data\").load_data()\nindex = VectorStoreIndex.from_documents(documents)\nquery_engine = index.as_query_engine()\nresponse = query_engine.query(\"Some question about the data should go here\")\nprint(response)\n",[7632],{"type":29,"tag":427,"props":7633,"children":7634},{"__ignoreMap":8},[7635,7655,7662,7689,7705,7721,7747],{"type":29,"tag":441,"props":7636,"children":7637},{"class":525,"line":526},[7638,7642,7646,7650],{"type":29,"tag":441,"props":7639,"children":7640},{"style":2077},[7641],{"type":35,"value":4905},{"type":29,"tag":441,"props":7643,"children":7644},{"style":536},[7645],{"type":35,"value":4910},{"type":29,"tag":441,"props":7647,"children":7648},{"style":2077},[7649],{"type":35,"value":4915},{"type":29,"tag":441,"props":7651,"children":7652},{"style":536},[7653],{"type":35,"value":7654}," VectorStoreIndex, SimpleDirectoryReader\n",{"type":29,"tag":441,"props":7656,"children":7657},{"class":525,"line":542},[7658],{"type":29,"tag":441,"props":7659,"children":7660},{"emptyLinePlaceholder":24},[7661],{"type":35,"value":1032},{"type":29,"tag":441,"props":7663,"children":7664},{"class":525,"line":562},[7665,7670,7674,7679,7684],{"type":29,"tag":441,"props":7666,"children":7667},{"style":536},[7668],{"type":35,"value":7669},"documents ",{"type":29,"tag":441,"props":7671,"children":7672},{"style":2077},[7673],{"type":35,"value":2080},{"type":29,"tag":441,"props":7675,"children":7676},{"style":536},[7677],{"type":35,"value":7678}," SimpleDirectoryReader(",{"type":29,"tag":441,"props":7680,"children":7681},{"style":588},[7682],{"type":35,"value":7683},"\"data\"",{"type":29,"tag":441,"props":7685,"children":7686},{"style":536},[7687],{"type":35,"value":7688},").load_data()\n",{"type":29,"tag":441,"props":7690,"children":7691},{"class":525,"line":575},[7692,7697,7701],{"type":29,"tag":441,"props":7693,"children":7694},{"style":536},[7695],{"type":35,"value":7696},"index ",{"type":29,"tag":441,"props":7698,"children":7699},{"style":2077},[7700],{"type":35,"value":2080},{"type":29,"tag":441,"props":7702,"children":7703},{"style":536},[7704],{"type":35,"value":5617},{"type":29,"tag":441,"props":7706,"children":7707},{"class":525,"line":594},[7708,7712,7716],{"type":29,"tag":441,"props":7709,"children":7710},{"style":536},[7711],{"type":35,"value":7233},{"type":29,"tag":441,"props":7713,"children":7714},{"style":2077},[7715],{"type":35,"value":2080},{"type":29,"tag":441,"props":7717,"children":7718},{"style":536},[7719],{"type":35,"value":7720}," index.as_query_engine()\n",{"type":29,"tag":441,"props":7722,"children":7723},{"class":525,"line":607},[7724,7729,7733,7738,7743],{"type":29,"tag":441,"props":7725,"children":7726},{"style":536},[7727],{"type":35,"value":7728},"response ",{"type":29,"tag":441,"props":7730,"children":7731},{"style":2077},[7732],{"type":35,"value":2080},{"type":29,"tag":441,"props":7734,"children":7735},{"style":536},[7736],{"type":35,"value":7737}," query_engine.query(",{"type":29,"tag":441,"props":7739,"children":7740},{"style":588},[7741],{"type":35,"value":7742},"\"Some question about the data should go here\"",{"type":29,"tag":441,"props":7744,"children":7745},{"style":536},[7746],{"type":35,"value":3948},{"type":29,"tag":441,"props":7748,"children":7749},{"class":525,"line":631},[7750,7755],{"type":29,"tag":441,"props":7751,"children":7752},{"style":2176},[7753],{"type":35,"value":7754},"print",{"type":29,"tag":441,"props":7756,"children":7757},{"style":536},[7758],{"type":35,"value":7759},"(response)\n",{"type":29,"tag":38,"props":7761,"children":7762},{},[7763,7764],{"type":35,"value":4294},{"type":29,"tag":57,"props":7765,"children":7768},{"href":7766,"rel":7767},"https://docs.llamaindex.ai/en/stable/#getting-started",[60],[7769],{"type":35,"value":7766},{"type":29,"tag":38,"props":7771,"children":7772},{},[7773,7775,7782],{"type":35,"value":7774},"I was able to expand this simple example to implement the text and image Q&A bots for RedLM fairly easily. The application I built is somewhat similar to the ",{"type":29,"tag":57,"props":7776,"children":7779},{"href":7777,"rel":7778},"https://docs.llamaindex.ai/en/stable/understanding/putting_it_all_together/apps/fullstack_app_guide/",[60],[7780],{"type":35,"value":7781},"Full-Stack Web App with LLamaIndex",{"type":35,"value":7783}," included in their documentation.",{"type":29,"tag":38,"props":7785,"children":7786},{},[7787,7789,7794,7796,7803,7805,7811],{"type":35,"value":7788},"Most of the early development I did on this project used the ",{"type":29,"tag":427,"props":7790,"children":7792},{"className":7791},[],[7793],{"type":35,"value":4311},{"type":35,"value":7795},". Later I tried using ",{"type":29,"tag":57,"props":7797,"children":7800},{"href":7798,"rel":7799},"https://docs.llamaindex.ai/en/stable/module_guides/workflow/",[60],[7801],{"type":35,"value":7802},"LlamaIndex Workflows",{"type":35,"value":7804}," to better organize the logic in the text and image-based Q&A bots. The same workflow ",{"type":29,"tag":427,"props":7806,"children":7808},{"className":7807},[],[7809],{"type":35,"value":7810},"RAGWorkflow",{"type":35,"value":7812}," is used to handle requests for both the text and image Q&A bot queries. Workflows also work seamlessly with asynchronous Python frameworks like FastAPI. Here's the API endpoint for the multimodal image-Q&A bot using a LlamaIndex Workflow:",{"type":29,"tag":514,"props":7814,"children":7816},{"code":7815,"language":2049,"meta":8,"className":2050,"style":8},"@app.post(\"/mm-q-and-a\")\nasync def mm_q_and_a_workflow(req_data: MultiModalRequest):\n    \"\"\"\n    This function handles Multimodal Q&A bot requests using a LlamaIndex workflow\n    \"\"\"\n    try:\n        # parse data from request object\n        image_b64 = req_data.image\n        prompt = req_data.prompt\n        chapter = req_data.chapter\n\n        # setup LlamaIndex Workflow and run it with data from request\n        w = RAGWorkflow(timeout=None)\n        result = await w.run(query=prompt, image_data=image_b64, chapter_number=chapter)\n\n        # return response\n        return QAQueryResponse(\n            response=result[\"response\"].message.content,\n            metadata=result[\"metadata\"],\n            image_desc=result[\"image_description\"],\n        )\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=str(e))\n",[7817],{"type":29,"tag":427,"props":7818,"children":7819},{"__ignoreMap":8},[7820,7841,7871,7878,7886,7893,7904,7912,7929,7946,7963,7970,7978,8012,8075,8082,8090,8102,8129,8155,8180,8187,8206],{"type":29,"tag":441,"props":7821,"children":7822},{"class":525,"line":526},[7823,7828,7832,7837],{"type":29,"tag":441,"props":7824,"children":7825},{"style":2060},[7826],{"type":35,"value":7827},"@app.post",{"type":29,"tag":441,"props":7829,"children":7830},{"style":536},[7831],{"type":35,"value":2068},{"type":29,"tag":441,"props":7833,"children":7834},{"style":588},[7835],{"type":35,"value":7836},"\"/mm-q-and-a\"",{"type":29,"tag":441,"props":7838,"children":7839},{"style":536},[7840],{"type":35,"value":3948},{"type":29,"tag":441,"props":7842,"children":7843},{"class":525,"line":542},[7844,7848,7852,7857,7861,7866],{"type":29,"tag":441,"props":7845,"children":7846},{"style":2091},[7847],{"type":35,"value":2094},{"type":29,"tag":441,"props":7849,"children":7850},{"style":2091},[7851],{"type":35,"value":2099},{"type":29,"tag":441,"props":7853,"children":7854},{"style":2060},[7855],{"type":35,"value":7856}," mm_q_and_a_workflow",{"type":29,"tag":441,"props":7858,"children":7859},{"style":536},[7860],{"type":35,"value":2068},{"type":29,"tag":441,"props":7862,"children":7863},{"style":2111},[7864],{"type":35,"value":7865},"req_data",{"type":29,"tag":441,"props":7867,"children":7868},{"style":536},[7869],{"type":35,"value":7870},": MultiModalRequest):\n",{"type":29,"tag":441,"props":7872,"children":7873},{"class":525,"line":562},[7874],{"type":29,"tag":441,"props":7875,"children":7876},{"style":588},[7877],{"type":35,"value":5825},{"type":29,"tag":441,"props":7879,"children":7880},{"class":525,"line":575},[7881],{"type":29,"tag":441,"props":7882,"children":7883},{"style":588},[7884],{"type":35,"value":7885},"    This function handles Multimodal Q&A bot requests using a LlamaIndex workflow\n",{"type":29,"tag":441,"props":7887,"children":7888},{"class":525,"line":594},[7889],{"type":29,"tag":441,"props":7890,"children":7891},{"style":588},[7892],{"type":35,"value":5825},{"type":29,"tag":441,"props":7894,"children":7895},{"class":525,"line":607},[7896,7900],{"type":29,"tag":441,"props":7897,"children":7898},{"style":2077},[7899],{"type":35,"value":7371},{"type":29,"tag":441,"props":7901,"children":7902},{"style":536},[7903],{"type":35,"value":539},{"type":29,"tag":441,"props":7905,"children":7906},{"class":525,"line":631},[7907],{"type":29,"tag":441,"props":7908,"children":7909},{"style":1181},[7910],{"type":35,"value":7911},"        # parse data from request object\n",{"type":29,"tag":441,"props":7913,"children":7914},{"class":525,"line":644},[7915,7920,7924],{"type":29,"tag":441,"props":7916,"children":7917},{"style":536},[7918],{"type":35,"value":7919},"        image_b64 ",{"type":29,"tag":441,"props":7921,"children":7922},{"style":2077},[7923],{"type":35,"value":2080},{"type":29,"tag":441,"props":7925,"children":7926},{"style":536},[7927],{"type":35,"value":7928}," req_data.image\n",{"type":29,"tag":441,"props":7930,"children":7931},{"class":525,"line":658},[7932,7937,7941],{"type":29,"tag":441,"props":7933,"children":7934},{"style":536},[7935],{"type":35,"value":7936},"        prompt ",{"type":29,"tag":441,"props":7938,"children":7939},{"style":2077},[7940],{"type":35,"value":2080},{"type":29,"tag":441,"props":7942,"children":7943},{"style":536},[7944],{"type":35,"value":7945}," req_data.prompt\n",{"type":29,"tag":441,"props":7947,"children":7948},{"class":525,"line":671},[7949,7954,7958],{"type":29,"tag":441,"props":7950,"children":7951},{"style":536},[7952],{"type":35,"value":7953},"        chapter ",{"type":29,"tag":441,"props":7955,"children":7956},{"style":2077},[7957],{"type":35,"value":2080},{"type":29,"tag":441,"props":7959,"children":7960},{"style":536},[7961],{"type":35,"value":7962}," req_data.chapter\n",{"type":29,"tag":441,"props":7964,"children":7965},{"class":525,"line":684},[7966],{"type":29,"tag":441,"props":7967,"children":7968},{"emptyLinePlaceholder":24},[7969],{"type":35,"value":1032},{"type":29,"tag":441,"props":7971,"children":7972},{"class":525,"line":697},[7973],{"type":29,"tag":441,"props":7974,"children":7975},{"style":1181},[7976],{"type":35,"value":7977},"        # setup LlamaIndex Workflow and run it with data from request\n",{"type":29,"tag":441,"props":7979,"children":7980},{"class":525,"line":720},[7981,7986,7990,7995,8000,8004,8008],{"type":29,"tag":441,"props":7982,"children":7983},{"style":536},[7984],{"type":35,"value":7985},"        w ",{"type":29,"tag":441,"props":7987,"children":7988},{"style":2077},[7989],{"type":35,"value":2080},{"type":29,"tag":441,"props":7991,"children":7992},{"style":536},[7993],{"type":35,"value":7994}," RAGWorkflow(",{"type":29,"tag":441,"props":7996,"children":7997},{"style":2071},[7998],{"type":35,"value":7999},"timeout",{"type":29,"tag":441,"props":8001,"children":8002},{"style":2077},[8003],{"type":35,"value":2080},{"type":29,"tag":441,"props":8005,"children":8006},{"style":556},[8007],{"type":35,"value":2467},{"type":29,"tag":441,"props":8009,"children":8010},{"style":536},[8011],{"type":35,"value":3948},{"type":29,"tag":441,"props":8013,"children":8014},{"class":525,"line":737},[8015,8020,8024,8028,8033,8038,8042,8047,8052,8056,8061,8066,8070],{"type":29,"tag":441,"props":8016,"children":8017},{"style":536},[8018],{"type":35,"value":8019},"        result ",{"type":29,"tag":441,"props":8021,"children":8022},{"style":2077},[8023],{"type":35,"value":2080},{"type":29,"tag":441,"props":8025,"children":8026},{"style":2077},[8027],{"type":35,"value":2488},{"type":29,"tag":441,"props":8029,"children":8030},{"style":536},[8031],{"type":35,"value":8032}," w.run(",{"type":29,"tag":441,"props":8034,"children":8035},{"style":2071},[8036],{"type":35,"value":8037},"query",{"type":29,"tag":441,"props":8039,"children":8040},{"style":2077},[8041],{"type":35,"value":2080},{"type":29,"tag":441,"props":8043,"children":8044},{"style":536},[8045],{"type":35,"value":8046},"prompt, ",{"type":29,"tag":441,"props":8048,"children":8049},{"style":2071},[8050],{"type":35,"value":8051},"image_data",{"type":29,"tag":441,"props":8053,"children":8054},{"style":2077},[8055],{"type":35,"value":2080},{"type":29,"tag":441,"props":8057,"children":8058},{"style":536},[8059],{"type":35,"value":8060},"image_b64, ",{"type":29,"tag":441,"props":8062,"children":8063},{"style":2071},[8064],{"type":35,"value":8065},"chapter_number",{"type":29,"tag":441,"props":8067,"children":8068},{"style":2077},[8069],{"type":35,"value":2080},{"type":29,"tag":441,"props":8071,"children":8072},{"style":536},[8073],{"type":35,"value":8074},"chapter)\n",{"type":29,"tag":441,"props":8076,"children":8077},{"class":525,"line":755},[8078],{"type":29,"tag":441,"props":8079,"children":8080},{"emptyLinePlaceholder":24},[8081],{"type":35,"value":1032},{"type":29,"tag":441,"props":8083,"children":8084},{"class":525,"line":773},[8085],{"type":29,"tag":441,"props":8086,"children":8087},{"style":1181},[8088],{"type":35,"value":8089},"        # return response\n",{"type":29,"tag":441,"props":8091,"children":8092},{"class":525,"line":794},[8093,8097],{"type":29,"tag":441,"props":8094,"children":8095},{"style":2077},[8096],{"type":35,"value":4874},{"type":29,"tag":441,"props":8098,"children":8099},{"style":536},[8100],{"type":35,"value":8101}," QAQueryResponse(\n",{"type":29,"tag":441,"props":8103,"children":8104},{"class":525,"line":810},[8105,8110,8114,8119,8124],{"type":29,"tag":441,"props":8106,"children":8107},{"style":2071},[8108],{"type":35,"value":8109},"            response",{"type":29,"tag":441,"props":8111,"children":8112},{"style":2077},[8113],{"type":35,"value":2080},{"type":29,"tag":441,"props":8115,"children":8116},{"style":536},[8117],{"type":35,"value":8118},"result[",{"type":29,"tag":441,"props":8120,"children":8121},{"style":588},[8122],{"type":35,"value":8123},"\"response\"",{"type":29,"tag":441,"props":8125,"children":8126},{"style":536},[8127],{"type":35,"value":8128},"].message.content,\n",{"type":29,"tag":441,"props":8130,"children":8131},{"class":525,"line":827},[8132,8137,8141,8145,8150],{"type":29,"tag":441,"props":8133,"children":8134},{"style":2071},[8135],{"type":35,"value":8136},"            metadata",{"type":29,"tag":441,"props":8138,"children":8139},{"style":2077},[8140],{"type":35,"value":2080},{"type":29,"tag":441,"props":8142,"children":8143},{"style":536},[8144],{"type":35,"value":8118},{"type":29,"tag":441,"props":8146,"children":8147},{"style":588},[8148],{"type":35,"value":8149},"\"metadata\"",{"type":29,"tag":441,"props":8151,"children":8152},{"style":536},[8153],{"type":35,"value":8154},"],\n",{"type":29,"tag":441,"props":8156,"children":8157},{"class":525,"line":844},[8158,8163,8167,8171,8176],{"type":29,"tag":441,"props":8159,"children":8160},{"style":2071},[8161],{"type":35,"value":8162},"            image_desc",{"type":29,"tag":441,"props":8164,"children":8165},{"style":2077},[8166],{"type":35,"value":2080},{"type":29,"tag":441,"props":8168,"children":8169},{"style":536},[8170],{"type":35,"value":8118},{"type":29,"tag":441,"props":8172,"children":8173},{"style":588},[8174],{"type":35,"value":8175},"\"image_description\"",{"type":29,"tag":441,"props":8177,"children":8178},{"style":536},[8179],{"type":35,"value":8154},{"type":29,"tag":441,"props":8181,"children":8182},{"class":525,"line":865},[8183],{"type":29,"tag":441,"props":8184,"children":8185},{"style":536},[8186],{"type":35,"value":4859},{"type":29,"tag":441,"props":8188,"children":8189},{"class":525,"line":881},[8190,8194,8198,8202],{"type":29,"tag":441,"props":8191,"children":8192},{"style":2077},[8193],{"type":35,"value":7475},{"type":29,"tag":441,"props":8195,"children":8196},{"style":2303},[8197],{"type":35,"value":7480},{"type":29,"tag":441,"props":8199,"children":8200},{"style":2077},[8201],{"type":35,"value":7485},{"type":29,"tag":441,"props":8203,"children":8204},{"style":536},[8205],{"type":35,"value":7490},{"type":29,"tag":441,"props":8207,"children":8208},{"class":525,"line":898},[8209,8214,8219,8224,8228,8233,8237,8242,8246,8250],{"type":29,"tag":441,"props":8210,"children":8211},{"style":2077},[8212],{"type":35,"value":8213},"        raise",{"type":29,"tag":441,"props":8215,"children":8216},{"style":536},[8217],{"type":35,"value":8218}," HTTPException(",{"type":29,"tag":441,"props":8220,"children":8221},{"style":2071},[8222],{"type":35,"value":8223},"status_code",{"type":29,"tag":441,"props":8225,"children":8226},{"style":2077},[8227],{"type":35,"value":2080},{"type":29,"tag":441,"props":8229,"children":8230},{"style":556},[8231],{"type":35,"value":8232},"500",{"type":29,"tag":441,"props":8234,"children":8235},{"style":536},[8236],{"type":35,"value":2193},{"type":29,"tag":441,"props":8238,"children":8239},{"style":2071},[8240],{"type":35,"value":8241},"detail",{"type":29,"tag":441,"props":8243,"children":8244},{"style":2077},[8245],{"type":35,"value":2080},{"type":29,"tag":441,"props":8247,"children":8248},{"style":2303},[8249],{"type":35,"value":2306},{"type":29,"tag":441,"props":8251,"children":8252},{"style":536},[8253],{"type":35,"value":8254},"(e))\n",{"type":29,"tag":38,"props":8256,"children":8257},{},[8258,8260,8265],{"type":35,"value":8259},"Using LlamaIndex Workflows also helped me add additional logic in a maintainable and standardized way. For example, I expanded the ",{"type":29,"tag":427,"props":8261,"children":8263},{"className":8262},[],[8264],{"type":35,"value":7810},{"type":35,"value":8266}," logic to include LLM-based re-ranking in order to ensure retrieval of the most relevant documents for my chatbot queries. This technique increases request latency, but this is an acceptable tradeoff for an application like RedLM.",{"type":29,"tag":123,"props":8268,"children":8270},{"id":8269},"llmrerank",[8271],{"type":35,"value":8272},"LLMRerank",{"type":29,"tag":38,"props":8274,"children":8275},{},[8276,8278,8283],{"type":35,"value":8277},"LLM Rerank was an interesting technique to try out, and LlamaIndex provides ",{"type":29,"tag":427,"props":8279,"children":8281},{"className":8280},[],[8282],{"type":35,"value":8272},{"type":35,"value":8284}," to make the implementation as simple as possible. Here's my understanding of how it works:",{"type":29,"tag":88,"props":8286,"children":8287},{},[8288,8293,8298,8310],{"type":29,"tag":92,"props":8289,"children":8290},{},[8291],{"type":35,"value":8292},"LLMRerank searches in the vector database for a high number of documents that are relevant to your query. This is done using cosine similarity, which essentially compares the vectors that represent the query and the documents.",{"type":29,"tag":92,"props":8294,"children":8295},{},[8296],{"type":35,"value":8297},"Next, LLMRerank goes through a process of assigning a numerical to each document to score relevancy. It does this via a special prompt that requests relevancy score for each document in batches.",{"type":29,"tag":92,"props":8299,"children":8300},{},[8301,8303,8308],{"type":35,"value":8302},"For example, I configured ",{"type":29,"tag":427,"props":8304,"children":8306},{"className":8305},[],[8307],{"type":35,"value":8272},{"type":35,"value":8309}," to initially fetch 4 documents from the vector database based on cosine similarity. Then in batches of 2, relevancy scores are assigned. Finally, the top 2 most relevant documents based on the LLM-give scores are used to make the RAG query.",{"type":29,"tag":92,"props":8311,"children":8312},{},[8313],{"type":35,"value":8314},"Adding LLMRerank can require a number of additional queries based on how you configure the batch size and the number of documents you would like to compare. This will increase latency for your application and use more resources to make the extra calls.",{"type":29,"tag":38,"props":8316,"children":8317},{},[8318,8320,8325],{"type":35,"value":8319},"Here's an example LLM query that ",{"type":29,"tag":427,"props":8321,"children":8323},{"className":8322},[],[8324],{"type":35,"value":8272},{"type":35,"value":8326}," uses to do assign scores:",{"type":29,"tag":38,"props":8328,"children":8329},{},[8330],{"type":29,"tag":192,"props":8331,"children":8334},{"alt":8332,"src":8333},"LLMRerank Prompt","/static/redlm/llmrerank_prompt.png",[],{"type":29,"tag":38,"props":8336,"children":8337},{},[8338],{"type":35,"value":8339},"Here are logs from my application showing what happens inside the workflow.",{"type":29,"tag":38,"props":8341,"children":8342},{},[8343],{"type":35,"value":8344},"Application for text-base Q&A query:",{"type":29,"tag":514,"props":8346,"children":8348},{"code":8347},"INFO:     üí¨Request for Q&A chatbot: query='ÂÆùÁéâÂíåË∞ÅÊâìÊû∂Ôºü'\nINFO:     üîÄRouting Workflow to next step\nINFO:     üí¨Routing to QueryEvent\nINFO:     üßÆQuery the vector database with: ÂÆùÁéâÂíåË∞ÅÊâìÊû∂Ôºü\nINFO:     üñ•Ô∏èUsing in-memory embedding database\nINFO:     ‚è≥Loading index from storage directory...\nINFO:     ‚úÖFinished loading index.\nINFO:     üìêRetrieved 4 nodes.\nINFO:     üîÄDoing LLMRerank\nINFO:     ‚ÑπÔ∏è Chat Model Info:\nINFO:     üü©Using NVIDIA Cloud API for inference\nINFO:     üîòChat Model: baichuan-inc/baichuan2-13b-chat\nINFO:     üî¢Reranked nodes to 2\nINFO:     ü§ñDoing inference step\nINFO:     ‚öôÔ∏è Getting query engine..\nINFO:     üîéGetting response from custom query engine\nINFO:     üí¨Text-based Q&A query\nINFO:     üÄÑText is Chinese\nINFO:     Using nodes from workflow...\nINFO:     üîèFormatting prompt\nINFO:     Prompt is\n\nËøôÊòØÁõ∏ÂÖ≥ÁöÑÂèÇËÄÉËµÑÊñôÔºö\n---------------------\nÂÆùÁéâ‰ªéÊù•Ê≤°ÊúâÁªèÂéÜËøáËøôÊ†∑ÁöÑÁóõËã¶„ÄÇËµ∑ÂàùÔºå‰ªñËßâÂæóË¢´ÊâìÂæóÂæàÁóõÔºå‰π±Âñä‰π±Âè´„ÄÇÂêéÊù•Ôºå‰ªñÁöÑÊ∞îÂèòÂæóËôöÂº±ÔºåÂ£∞Èü≥ÂèòÂæóÂò∂ÂìëÔºåÊó†Ê≥ïËØ¥ËØù„ÄÇ‰ºóÈó®ÂÆ¢ËßÅ‰ªñË¢´ÊâìÂæóÂæàÊÉ®ÔºåËµ∂‰∏äÊù•ÊÅ≥Ê±Ç‰ªñÂÅú‰∏ãÊù•„ÄÇË¥æÊîø‰∏çËÇØÂê¨ÔºåËØ¥Ôºö‚Äú‰Ω†‰ª¨Áü•ÈÅì‰ªñÂπ≤‰∫Ü‰ªÄ‰πàÂùè‰∫ãÔºåËøòËÉΩÈ•∂‰ªñÂêóÔºüÂπ≥Êó∂ÈÉΩÊòØ‰Ω†‰ª¨Ëøô‰∫õ‰∫∫Êää‰ªñÂ∏¶Âùè‰∫ÜÔºåÁé∞Âú®Âà∞‰∫ÜËøôÊ≠•Áî∞Âú∞Ôºå‰Ω†‰ª¨ËøòÊù•Âäù‰ªñ„ÄÇÊòéÂ§©ÔºåÂ¶ÇÊûú‰ªñÊùÄÁà∂ÂºëÂêõÔºå‰Ω†‰ª¨Êâç‰∏çÂäùÂêóÔºü‚Äù\n\nÂÆùÁéâ‰ªéÊù•Ê≤°ÊúâÁªèÂéÜËøáËøôÊ†∑ÁöÑÁóõËã¶„ÄÇËµ∑ÂàùÔºå‰ªñËßâÂæóÊâìÂæóÂæàÁóõÔºå‰π±Âñä‰π±Âè´„ÄÇÂêéÊù•Ôºå‰ªñÁöÑÊ∞îÂèòÂæóËôöÂº±ÔºåÂ£∞Èü≥ÂèòÂæóÂò∂ÂìëÔºåÊó†Ê≥ïËØ¥ËØù„ÄÇ‰ºóÈó®ÂÆ¢ËßÅ‰ªñË¢´ÊâìÂæóÂæàÊÉ®ÔºåËµ∂‰∏äÊù•ÊÅ≥Ê±Ç‰ªñÂÅú‰∏ãÊù•„ÄÇË¥æÊîø‰∏çËÇØÂê¨ÔºåËØ¥Ôºö‚Äú‰Ω†‰ª¨Áü•ÈÅì‰ªñÂπ≤‰∫Ü‰ªÄ‰πàÂùè‰∫ãÔºåËøòËÉΩÈ•∂‰ªñÂêóÔºüÂπ≥Êó∂ÈÉΩÊòØ‰Ω†‰ª¨Ëøô‰∫õ‰∫∫Êää‰ªñÂ∏¶Âùè‰∫ÜÔºåÁé∞Âú®Âà∞‰∫ÜËøôÊ≠•Áî∞Âú∞Ôºå‰Ω†‰ª¨ËøòÊù•Âäù‰ªñ„ÄÇÊòéÂ§©ÔºåÂ¶ÇÊûú‰ªñÊùÄÁà∂ÂºëÂêõÔºå‰Ω†‰ª¨Êâç‰∏çÂäùÂêóÔºü‚Äù\n---------------------\nÊ†πÊçÆ‰∏äËø∞ÁöÑÂèÇËÄÉËµÑÊñôÔºåÂõûÁ≠î‰∏ãÈù¢ÁöÑÈóÆÈ¢ò\nÈóÆÈ¢òÔºöÂÆùÁéâÂíåË∞ÅÊâìÊû∂Ôºü\n\nResponse...\nÂÆùÁéâÂíåË¥æÊîøÊâìÊû∂„ÄÇ\n",[8349],{"type":29,"tag":427,"props":8350,"children":8351},{"__ignoreMap":8},[8352],{"type":35,"value":8347},{"type":29,"tag":38,"props":8354,"children":8355},{},[8356],{"type":35,"value":8357},"My question here was basically asking \"Who gets in a fight with Baoyu?\" The reply says that his father, Jiazheng, gets in a fight with Baoyu, and the documents that are used here very similar, differing by only one character. One of the documents is supposed to be and English translation, but in fact there was a failure in the translation for this paragraph and it \"translated\" the Chinese by simply repeating it. A translation of this paragraph using GPT 4o describes a tense scene between protagonist Jia Baoyu and his father Jia Zheng:",{"type":29,"tag":6518,"props":8359,"children":8360},{},[8361],{"type":29,"tag":38,"props":8362,"children":8363},{},[8364],{"type":35,"value":8365},"Baoyu had never endured such agony before. At first, he felt the pain intensely and cried out loudly. Later, his breath grew weak, his voice turned hoarse, and he couldn‚Äôt speak. The attendants, seeing how severely he was being beaten, rushed forward to plead for him to stop. Jia Zheng refused to listen, saying, ‚ÄúDo you know the misdeeds he‚Äôs committed, and still you want to spare him? Normally, it‚Äôs you people who lead him astray, and now that it‚Äôs come to this, you still try to persuade him? Tomorrow, if he were to commit patricide or treason, would you still not advise him?‚Äù",{"type":29,"tag":38,"props":8367,"children":8368},{},[8369],{"type":35,"value":8370},"Another benefit of LlamaIndex workflows is the ability to create visualizations of each step, the branches between them and the overall flow of events and the functions that accept/emit them as arguments/return values. It took a little bit of getting used to the patterns used to create workflows, but the documentation for Workflows provided a good starting point that I could adapt for my application. Here's a visualization of the LlamaIndex Workflow that is used by the image and text-based Q&A bots:",{"type":29,"tag":38,"props":8372,"children":8373},{},[8374],{"type":29,"tag":192,"props":8375,"children":8378},{"alt":8376,"src":8377},"RedLM RAG Workflow","/static/redlm/rag_workflow.png",[],{"type":29,"tag":123,"props":8380,"children":8382},{"id":8381},"observability-and-tracing-with-langfuse",[8383],{"type":35,"value":8384},"Observability and Tracing with Langfuse",{"type":29,"tag":38,"props":8386,"children":8387},{},[8388,8390,8395],{"type":35,"value":8389},"It is never too soon to add observability and tracing to a RAG application! I learned this the hard way after doing some refactoring of prompts and ",{"type":29,"tag":427,"props":8391,"children":8393},{"className":8392},[],[8394],{"type":35,"value":4311},{"type":35,"value":8396}," logic.",{"type":29,"tag":6518,"props":8398,"children":8399},{},[8400],{"type":29,"tag":38,"props":8401,"children":8402},{},[8403],{"type":35,"value":8404},"Langfuse is an open source LLM engineering platform to help teams collaboratively debug, analyze and iterate on their LLM Applications. With the Langfuse integration, you can seamlessly track and monitor performance, traces, and metrics of your LlamaIndex application. Detailed traces of the LlamaIndex context augmentation and the LLM querying processes are captured and can be inspected directly in the Langfuse UI.",{"type":29,"tag":38,"props":8406,"children":8407},{},[8408,8410,8417],{"type":35,"value":8409},"LlamaIndex supports lots of different observability and tracing solutions. I tried using ",{"type":29,"tag":57,"props":8411,"children":8414},{"href":8412,"rel":8413},"https://langfuse.com/",[60],[8415],{"type":35,"value":8416},"Langfuse",{"type":35,"value":8418}," (YC W23) which is an open-source option that has a self hosted option.",{"type":29,"tag":38,"props":8420,"children":8421},{},[8422],{"type":29,"tag":192,"props":8423,"children":8426},{"alt":8424,"src":8425},"Langfuse tracing for RedLM","/static/redlm/langfuse.png",[],{"type":29,"tag":38,"props":8428,"children":8429},{},[8430],{"type":35,"value":8431},"Langfuse came in handy when debugging the prompts for the image-based Q&A bot. This screenshot shows a trace of a multi-modal Q&A bot query about the fire at the Gourd Temple that occurs in Chapter 1 of the book.",{"type":29,"tag":71,"props":8433,"children":8435},{"id":8434},"nvidia-inference-stack-tensorrt-llm-and-buildnvidiacom",[8436],{"type":35,"value":8437},"NVIDIA inference stack (TensorRT-LLM and build.nvidia.com)",{"type":29,"tag":38,"props":8439,"children":8440},{},[8441],{"type":35,"value":8442},"The LLM API for TensorRT-LLM is a very nice developer experience compared with my earlier attempts with manually building inference engines. The roadmap for TensorRT-LLM looks promising, I‚Äôm looking forward to support for an OpenAI Compatible API and more models. NVIDIA NIMs using TensorRT-LLM are an easy way to run models as OpenAI compatible API servers, but the selection of models is still pretty limited. vLLM provides a strong alternative with a wide range of support models. NVIDIA NIMs for LLMs build on vLLM libraries and the TensorRT-LLM library, so it is helpful to have an understanding of both of these libraries to stay on the bleeding edge of performant inference engines.",{"type":29,"tag":38,"props":8444,"children":8445},{},[8446],{"type":29,"tag":192,"props":8447,"children":8450},{"alt":8448,"src":8449},"trt-llm-roadmap","/static/redlm/trt-llm-roadmap.png",[],{"type":29,"tag":38,"props":8452,"children":8453},{},[8454],{"type":35,"value":8455},"The NVIDIA API catalog is a great way to test a variety of different models, especially large models that cannot fit into consumer hardware like RTX PCs or high-end MacBooks. I got to try out the new meta/llama-3.2-90b-vision-instruct model in my project by simply changing a value in my .env file, this is a great developer experience!",{"type":29,"tag":38,"props":8457,"children":8458},{},[8459],{"type":29,"tag":192,"props":8460,"children":8462},{"alt":3795,"src":8461},"/static/redlm/build.nvidia.com.png",[],{"type":29,"tag":38,"props":8464,"children":8465},{},[8466],{"type":35,"value":8467},"The NVIDIA API catalog doesn‚Äôt have every model in every size, however. For example, it has the qwen/qwen2-7b-instruct model, but doesn‚Äôt have the qwen/qwen2-7b-instruct model. Also, only some of the models are labeled as ‚ÄúRun Anywhere‚Äù; a lot of the models say ‚ÄúSelf-Hosted API Coming Soon‚Äù meaning that they can‚Äôt be downloaded an run locally as a container. To get around this, I ran inferences services locally using both vLLM‚Äôs vllm/vllm-openai container and my own container running Qwen and other services.",{"type":29,"tag":71,"props":8469,"children":8471},{"id":8470},"my-local-inference-stack-rtx",[8472],{"type":35,"value":8473},"My local inference stack (RTX)",{"type":29,"tag":38,"props":8475,"children":8476},{},[8477],{"type":29,"tag":192,"props":8478,"children":8481},{"alt":8479,"src":8480},"RTX PCs","/static/redlm/rtxpcs.png",[],{"type":29,"tag":38,"props":8483,"children":8484},{},[8485,8487,8493,8495,8501,8503,8508],{"type":35,"value":8486},"Two of the RTX PCs in my home network: ",{"type":29,"tag":427,"props":8488,"children":8490},{"className":8489},[],[8491],{"type":35,"value":8492},"a1",{"type":35,"value":8494}," and ",{"type":29,"tag":427,"props":8496,"children":8498},{"className":8497},[],[8499],{"type":35,"value":8500},"a3",{"type":35,"value":8502},". ",{"type":29,"tag":427,"props":8504,"children":8506},{"className":8505},[],[8507],{"type":35,"value":8492},{"type":35,"value":8509}," was the first PC I built by myself and was the beginning of my GeForce journey. Luckily I built it with an over-provisioned PSU, so it can use a 4090 FE card! The front panel doesn't fit, however.",{"type":29,"tag":38,"props":8511,"children":8512},{},[8513],{"type":35,"value":8514},"One limitation of the NVIDIA API catalog is the number of free credits given for a trial account. Using 1 credit per API call, I would use up the 1000 credits very quickly when running scripts like translation or the RAG evaluation. The same would be true with rate limits of the OpenAI API. That‚Äôs why running LLMs locally is still an important part of the development cycle for this type of project.",{"type":29,"tag":38,"props":8516,"children":8517},{},[8518,8520,8527],{"type":35,"value":8519},"This project primarily uses two models: a large language model and a vision language models. Running the Yi-1.5-9B-Chat model from ",{"type":29,"tag":57,"props":8521,"children":8524},{"href":8522,"rel":8523},"http://01.AI",[60],[8525],{"type":35,"value":8526},"01.AI",{"type":35,"value":8528}," takes up just about all of the GPU memory on one of my RTX 4090 PCs, so I had to run the vision model on another PC. In a previous project, I used Kubernetes to manage lots of different inference services: LLMs, ComfyUI, ChatTTS and MusicGen for making AI videos and I found it to a nice way to manage different containerized inference services.",{"type":29,"tag":514,"props":8530,"children":8532},{"code":8531},"brian@a3:~$ microk8s kubectl get no -o wide\nNAME   STATUS   ROLES    AGE    VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION     CONTAINER-RUNTIME\na1     Ready    \u003Cnone>   4d4h   v1.30.5   192.168.5.182   \u003Cnone>        Ubuntu 24.04.1 LTS   6.8.0-45-generic   containerd://1.6.28\na2     Ready    \u003Cnone>   11d    v1.30.5   192.168.5.96    \u003Cnone>        Ubuntu 24.04.1 LTS   6.8.0-45-generic   containerd://1.6.28\na3     Ready    \u003Cnone>   11d    v1.30.5   192.168.5.173   \u003Cnone>        Ubuntu 24.04.1 LTS   6.8.0-45-generic   containerd://1.6.28\n",[8533],{"type":29,"tag":427,"props":8534,"children":8535},{"__ignoreMap":8},[8536],{"type":35,"value":8531},{"type":29,"tag":38,"props":8538,"children":8539},{},[8540,8542,8548],{"type":35,"value":8541},"In the RedLM GitHub repo I included kubernetes manifests that show how to run the LLM and VLM across two different computers. I used Kustomize as a way to replace dynamic values in the YAML files for different resources. The kubernetes set up is experimental; the LLM and VLM can more reliably be run with ",{"type":29,"tag":427,"props":8543,"children":8545},{"className":8544},[],[8546],{"type":35,"value":8547},"docker run",{"type":35,"value":8549}," commands.",{"type":29,"tag":38,"props":8551,"children":8552},{},[8553],{"type":29,"tag":192,"props":8554,"children":8557},{"alt":8555,"src":8556},"k8s dashboard for local inference services","/static/redlm/k8s-dashboard.png",[],{"type":29,"tag":38,"props":8559,"children":8560},{},[8561,8563,8569],{"type":35,"value":8562},"I had a lot of driver issues when trying to get kubernetes to run the vLLM container for the Yi LLM. I struggled with the following error message when trying to run the ",{"type":29,"tag":427,"props":8564,"children":8566},{"className":8565},[],[8567],{"type":35,"value":8568},"vllm",{"type":35,"value":8570}," LLM service:",{"type":29,"tag":6518,"props":8572,"children":8573},{},[8574],{"type":29,"tag":38,"props":8575,"children":8576},{},[8577],{"type":35,"value":8578},"RuntimeError: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 804: forward compatibility was attempted on non supported HW",{"type":29,"tag":38,"props":8580,"children":8581},{},[8582],{"type":35,"value":8583},"I tried uninstalling and reinstalling different versions of the NVIDIA drivers and CUDA but kept seeing the same message once the server would try to start up in the vLLM container logs. Rebooting my PC didn't work either. I saw a recommendation to turn off secure boot in BIOS. I didn't turn it on, but having nothing else to try I went into the BIOS settings and found that there were some keys configured in the secure boot section. After I deleted these keys and reboot, everything seemed to work normally. I'm not sure why my PC was in secure boot mode, though!",{"type":29,"tag":71,"props":8585,"children":8587},{"id":8586},"ai-models-used-in-this-project",[8588],{"type":35,"value":8589},"AI Models used in this project",{"type":29,"tag":38,"props":8591,"children":8592},{},[8593],{"type":35,"value":8594},"I selected LLMs that run efficiently on RTX PCs, are available in the NVIDIA API catalog, and offer strong bilingual support in Chinese and English, ensuring compatibility, performance, and linguistic flexibility. Here are the models that I ended up using with RedLM:",{"type":29,"tag":123,"props":8596,"children":8598},{"id":8597},"_01-aiyi-15-9b-chat-and-nvidiayi-large",[8599,8604,8605],{"type":29,"tag":427,"props":8600,"children":8602},{"className":8601},[],[8603],{"type":35,"value":6491},{"type":35,"value":8494},{"type":29,"tag":427,"props":8606,"children":8608},{"className":8607},[],[8609],{"type":35,"value":8610},"nvidia/yi-large",{"type":29,"tag":38,"props":8612,"children":8613},{},[8614,8615,8620,8622,8629,8631,8637,8639,8645],{"type":35,"value":6382},{"type":29,"tag":427,"props":8616,"children":8618},{"className":8617},[],[8619],{"type":35,"value":6491},{"type":35,"value":8621}," for most of the LLM inference while developing RedLM on my RTX PCs. ",{"type":29,"tag":57,"props":8623,"children":8626},{"href":8624,"rel":8625},"https://github.com/01-ai/Yi",[60],[8627],{"type":35,"value":8628},"This model family",{"type":35,"value":8630}," performs well on both Chinese and English benchmarks, and has a variety of model sizes. I was able to try using the ",{"type":29,"tag":427,"props":8632,"children":8634},{"className":8633},[],[8635],{"type":35,"value":8636},"01-ai/yi-large",{"type":35,"value":8638}," model from the NVIDIA API catalog when using remote cloud inference. I used the ",{"type":29,"tag":427,"props":8640,"children":8642},{"className":8641},[],[8643],{"type":35,"value":8644},"vllm/vllm-openai:latest",{"type":35,"value":8646}," container to run this locally.",{"type":29,"tag":38,"props":8648,"children":8649},{},[8650,8652,8659],{"type":35,"value":8651},"There are also vision models in the Yi series, such as ",{"type":29,"tag":57,"props":8653,"children":8656},{"href":8654,"rel":8655},"https://huggingface.co/01-ai/Yi-VL-34B",[60],[8657],{"type":35,"value":8658},"01-ai/Yi-VL-34B",{"type":35,"value":8660},", but I didn't use these models in my project.",{"type":29,"tag":123,"props":8662,"children":8664},{"id":8663},"baichuan-incbaichuan2-13b-chat",[8665],{"type":29,"tag":427,"props":8666,"children":8668},{"className":8667},[],[8669],{"type":35,"value":8670},"baichuan-inc/baichuan2-13b-chat",{"type":29,"tag":38,"props":8672,"children":8673},{},[8674],{"type":35,"value":8675},"This model is available in the NVIDIA API catalog, and it was the main model I used when testing remote inference. It performs well in a variety of tasks and scores highly on the the Chinese Massive Multitask Language Understanding (CMMLU) benchmark.",{"type":29,"tag":123,"props":8677,"children":8679},{"id":8678},"qwenqwen2-7b",[8680],{"type":29,"tag":427,"props":8681,"children":8683},{"className":8682},[],[8684],{"type":35,"value":8685},"Qwen/Qwen2-7B",{"type":29,"tag":38,"props":8687,"children":8688},{},[8689],{"type":35,"value":8690},"This model was used for summary and translation of the source text. It was supported by the TensorRT-LLM LLM API and I didn't have any issues building the TensorRT-LLM model with it on the EC2 instance used to do the completion inference for translations.",{"type":29,"tag":123,"props":8692,"children":8694},{"id":8693},"qwenqwen2-vl-2b-instruct",[8695],{"type":29,"tag":427,"props":8696,"children":8698},{"className":8697},[],[8699],{"type":35,"value":6762},{"type":29,"tag":38,"props":8701,"children":8702},{},[8703],{"type":35,"value":8704},"This was the vision language model (VLM) that I used locally when developing on RTX. I was impressed at how well it could describe images given the small parameter count of the model (2 billion parameters). The small size of this model made it easy to run in my RTX PC cluster.",{"type":29,"tag":38,"props":8706,"children":8707},{},[8708,8710,8717],{"type":35,"value":8709},"There is ",{"type":29,"tag":57,"props":8711,"children":8714},{"href":8712,"rel":8713},"https://github.com/NVIDIA/TensorRT-LLM/issues/2183",[60],[8715],{"type":35,"value":8716},"an open GitHub issue for TensorRT-LLM support for Qwen2-VL",{"type":35,"value":8718}," at the time of writing.",{"type":29,"tag":38,"props":8720,"children":8721},{},[8722,8724,8730,8732,8738],{"type":35,"value":8723},"I wrote a simple FastAPI server using the Hugging Face ",{"type":29,"tag":427,"props":8725,"children":8727},{"className":8726},[],[8728],{"type":35,"value":8729},"transformers",{"type":35,"value":8731}," library based on example code from this model's documentation (see ",{"type":29,"tag":427,"props":8733,"children":8735},{"className":8734},[],[8736],{"type":35,"value":8737},"services/qwen2-vl",{"type":35,"value":8739}," in the RedLM GitHub repo for more details). I packaged this service into a container in order to run it in my local kubernetes cluster along with other inference services.",{"type":29,"tag":123,"props":8741,"children":8743},{"id":8742},"metallama-32-90b-vision-instruct",[8744],{"type":29,"tag":427,"props":8745,"children":8747},{"className":8746},[],[8748],{"type":35,"value":6770},{"type":29,"tag":38,"props":8750,"children":8751},{},[8752,8754,8760,8762,8767],{"type":35,"value":8753},"This model came out while I was working on the project, and I decided to use it instead of the ",{"type":29,"tag":427,"props":8755,"children":8757},{"className":8756},[],[8758],{"type":35,"value":8759},"adept/fuyu-8b",{"type":35,"value":8761}," model that was previously one of the only vision language models in the NVIDIA API catalog. The ",{"type":29,"tag":427,"props":8763,"children":8765},{"className":8764},[],[8766],{"type":35,"value":6770},{"type":35,"value":8768}," model has strong Chinese language skills, so it was a good model to use when doing remote inference for the image Q&A bot.",{"type":29,"tag":123,"props":8770,"children":8772},{"id":8771},"nvidianvlm-d-72b",[8773],{"type":29,"tag":57,"props":8774,"children":8777},{"href":8775,"rel":8776},"https://huggingface.co/nvidia/NVLM-D-72B",[60],[8778],{"type":29,"tag":427,"props":8779,"children":8781},{"className":8780},[],[8782],{"type":35,"value":8783},"nvidia/NVLM-D-72B",{"type":29,"tag":38,"props":8785,"children":8786},{},[8787,8789,8795],{"type":35,"value":8788},"I didn't use this model in my project, but it came out recently and looks awesome! Hopefully this model will be available on the NVIDIA API catalog soon. It is trained on the ",{"type":29,"tag":427,"props":8790,"children":8792},{"className":8791},[],[8793],{"type":35,"value":8794},"Qwen2-72B-Instruct",{"type":35,"value":8796}," text-only model, so it likely also has very strong support for Chinese language.",{"type":29,"tag":6518,"props":8798,"children":8799},{},[8800],{"type":29,"tag":38,"props":8801,"children":8802},{},[8803],{"type":35,"value":8804},"Today (September 17th, 2024), we introduce NVLM 1.0, a family of frontier-class multimodal large language models (LLMs) that achieve state-of-the-art results on vision-language tasks, rivaling the leading proprietary models (e.g., GPT-4o) and open-access models (e.g., Llama 3-V 405B and InternVL 2). Remarkably, NVLM 1.0 shows improved text-only performance over its LLM backbone after multimodal training.",{"type":29,"tag":71,"props":8806,"children":8808},{"id":8807},"the-success-of-black-myth-wukong",[8809],{"type":35,"value":8810},"The success of Black Myth: Wukong",{"type":29,"tag":38,"props":8812,"children":8813},{},[8814],{"type":35,"value":8815},"I originally got the idea to build this project after seeing the release of Black Myth: Wukong. This game is a blockbuster success from a Chinese developer that tells the story of the Monkey King‚Äôs adventure in the Journey West universe. Journey West (Ë•øÊ∏∏ËÆ∞) is another one of the ‚ÄúFour Great Works‚Äù of Chinese literature. It tells the story of the legendary pilgrimage of the monk Xuanzang (also known as Tang Sanzang) to India, accompanied by his three disciples‚ÄîSun Wukong (the Monkey King), Zhu Bajie (Pigsy), and Sha Wujing (Sandy). The group travels from China to India to retrieve sacred Buddhist scriptures, facing numerous challenges, demons, and supernatural beings along the way.",{"type":29,"tag":38,"props":8817,"children":8818},{},[8819],{"type":35,"value":8820},"The novel blends elements of adventure, mythology, and spiritual allegory, with Sun Wukong's mischievous nature and extraordinary powers adding humor and excitement. Through their journey, the characters grow and overcome personal flaws, ultimately achieving enlightenment and spiritual success. The video game adaptation has set world records for numbers of concurrent players, and it has rewritten the narrative around what is possible with single-player, offline games in the gaming industry.",{"type":29,"tag":38,"props":8822,"children":8823},{},[8824],{"type":29,"tag":192,"props":8825,"children":8828},{"alt":8826,"src":8827},"Black Myth: Wukong","/static/redlm/wukong.png",[],{"type":29,"tag":38,"props":8830,"children":8831},{},[8832],{"type":35,"value":8833},"Three renditions of Journey West: Songok≈´ (The Monkey King) polychrome woodblock (surimono) (1824) by Yashima Gakutei (1786‚Äì1868), Black Myth: Wukong video game by Game Science (2024), Journey to the West TV series by CCTV (1982-2000)",{"type":29,"tag":71,"props":8835,"children":8837},{"id":8836},"redlm-video",[8838],{"type":35,"value":8839},"RedLM video",{"type":29,"tag":38,"props":8841,"children":8842},{},[8843],{"type":29,"tag":57,"props":8844,"children":8846},{"href":3639,"rel":8845},[60],[8847],{"type":35,"value":8848},"Watch the RedLM video on ùïè",{"type":29,"tag":8850,"props":8851,"children":8852},"red-lm-video",{},[],{"type":29,"tag":38,"props":8854,"children":8855},{},[8856],{"type":35,"value":8857},"I created the video for this project using Blender.The Blender sequencer editor is a great non-linear video editing tool for simple video projects like this one. I used the following formula to create the project video for RedLM:",{"type":29,"tag":135,"props":8859,"children":8860},{},[8861,8873,8878,8883],{"type":29,"tag":92,"props":8862,"children":8863},{},[8864,8866],{"type":35,"value":8865},"Background music: I used the AI music generation service called Suno with the prompt ‚Äúmystical strange traditional Chinese music from the Qing Dynasty‚Äù. Here‚Äôs the link to my Suno playlist called ‚ÄúQing Dynasty Music‚Äù where you can find the original song and some other good songs that I generated using this prompt. My ",{"type":29,"tag":57,"props":8867,"children":8870},{"href":8868,"rel":8869},"https://suno.com/playlist/863ea0dd-1921-467c-8b69-16dbd126d966",[60],[8871],{"type":35,"value":8872},"Qing Dynasty Music Playlist on Suno",{"type":29,"tag":92,"props":8874,"children":8875},{},[8876],{"type":35,"value":8877},"Outline: For this project, the main sections are the introduction, then explaining each part with a short demo: translation, text-based Q&A, evaluation for text-based Q&A, image-based Q&A, and finally a short outro. I wrote an outline and then ChatGPT helped with filling out the content.",{"type":29,"tag":92,"props":8879,"children":8880},{},[8881],{"type":35,"value":8882},"Narration: I used ElevenLabs to narrate the main part of the video using a clone of my voice using the ElevenLabs Voice Lab. The Chinese voices were generated on my computer with an open-source text-to-speech model called ChatTTS.",{"type":29,"tag":92,"props":8884,"children":8885},{},[8886],{"type":35,"value":8887},"Images and videos: I gathered images and screen captures of different parts of the project including code snippets, paintings of the book, flow diagrams and screen recordings of the application.",{"type":29,"tag":38,"props":8889,"children":8890},{},[8891],{"type":35,"value":8892},"The video is composed of different ‚Äústrips‚Äù. The green strips represent the music and voice clips. Red strips are images and yellow strips are videos. Here is what the final cut of the video looks like in Blender‚Äôs Sequencer view:",{"type":29,"tag":38,"props":8894,"children":8895},{},[8896],{"type":29,"tag":192,"props":8897,"children":8900},{"alt":8898,"src":8899},"Blender Sequence Editor","/static/redlm/blender_sequence_editor.png",[],{"type":29,"tag":38,"props":8902,"children":8903},{},[8904],{"type":35,"value":8905},"ChatTTS is one of the most impressive open-source models I have seen for generating conversational speech with prosodic elements (pausing, laughter, etc.) It is developed by a Chinese company called 2noise. Earlier this year I made a small contribution to this project with an API example using FastAPI to show how to run a standalone API using the model. Another example in this project provides a comprehensive example application built with gradio:",{"type":29,"tag":38,"props":8907,"children":8908},{},[8909],{"type":29,"tag":192,"props":8910,"children":8913},{"alt":8911,"src":8912},"ChatTTS UI","/static/redlm/chattts_ui.png",[],{"type":29,"tag":38,"props":8915,"children":8916},{},[8917],{"type":35,"value":8918},"I was planning on streaming the narration audio for Q&A answers using my ChatTTS API service, but I didn‚Äôt get around to doing this. Instead, I just used the Gradio application to generate the Chinese narration for Q&A and image Q&A examples included in the video.",{"type":29,"tag":123,"props":8920,"children":8922},{"id":8921},"redlm-deep-dive-video-with-notebooklm",[8923],{"type":35,"value":8924},"RedLM Deep Dive video with NotebookLM",{"type":29,"tag":38,"props":8926,"children":8927},{},[8928],{"type":35,"value":8929},"NotebookLM is a new application from Google that is a truly magical application of retrieval augmented generation.",{"type":29,"tag":6518,"props":8931,"children":8932},{},[8933],{"type":29,"tag":38,"props":8934,"children":8935},{},[8936],{"type":35,"value":8937},"NotebookLM is a research and note-taking online tool developed by Google Labs that uses artificial intelligence, specifically Google Gemini, to assist users in interacting with their documents. It can generate summaries, explanations, and answers based on content uploaded by users.",{"type":29,"tag":38,"props":8939,"children":8940},{},[8941],{"type":35,"value":8942},"I used NotebookLM to generate a \"Deep Dive\" podcast episode using only this article. I was pretty impressed with what it was able to produce, and I wanted to share it as part of this project, so I used Blender and some Python scripts to put together a simple and engaging visualization.",{"type":29,"tag":38,"props":8944,"children":8945},{},[8946],{"type":29,"tag":192,"props":8947,"children":8950},{"alt":8948,"src":8949},"Deep Dive video in Blender","/static/redlm/deep_dive_blender.png",[],{"type":29,"tag":38,"props":8952,"children":8953},{},[8954,8956,8962,8964,8975,8977,8984],{"type":35,"value":8955},"The ",{"type":29,"tag":427,"props":8957,"children":8959},{"className":8958},[],[8960],{"type":35,"value":8961},"openai/whisper-base",{"type":35,"value":8963}," model was used to get time stamps for the start and end of each spoken word using Automated Speech Recognition (ASR). A speaker segmentation library called ",{"type":29,"tag":57,"props":8965,"children":8968},{"href":8966,"rel":8967},"https://github.com/pyannote/pyannote-audio",[60],[8969],{"type":29,"tag":427,"props":8970,"children":8972},{"className":8971},[],[8973],{"type":35,"value":8974},"pyannote/audio",{"type":35,"value":8976}," was used to perform speaker diarization. This is an interesting algorithm that can segment any number of distinct speakers in an audio recording using a series of models and a discrete-time stochastic process known as the ",{"type":29,"tag":57,"props":8978,"children":8981},{"href":8979,"rel":8980},"https://en.wikipedia.org/wiki/Chinese_restaurant_process",[60],[8982],{"type":35,"value":8983},"Chinese restaurant process",{"type":35,"value":8985},". This gave a list of time intervals with a speaker ID, and I used the intervals to attribute a speaker ID to each word. Then I segmented the audio into two files using this data and used the files to generate audio waveforms using Blender's geometry nodes. Another script was used to animate each word of as it is spoken in one of two positions for each speaker.",{"type":29,"tag":71,"props":8987,"children":8989},{"id":8988},"final-thoughts",[8990],{"type":35,"value":8991},"Final thoughts",{"type":29,"tag":38,"props":8993,"children":8994},{},[8995],{"type":35,"value":8996},"I‚Äôm glad to have had the opportunity to join three NVIDIA developer contests this year. I like the idea of a ‚Äúdeveloper contest‚Äù that takes place over several weeks compared to hackathons that take place over just a few days. Having more time allows you to learn about a new tool or framework at a deeper level and think about how to apply it in a creative project.",{"type":29,"tag":38,"props":8998,"children":8999},{},[9000],{"type":29,"tag":192,"props":9001,"children":9004},{"alt":9002,"src":9003},"NVIDIA and LlamaIndex Contest","/static/redlm/llama-contest-og.jpg",[],{"type":29,"tag":38,"props":9006,"children":9007},{},[9008],{"type":35,"value":9009},"I also like how this contest is not team based. Working on this project I was able to do a lot of high-level thinking, write out features as detailed prompts, and then delegate the code writing to LLMs as if I was giving tasks to teammates.",{"type":29,"tag":38,"props":9011,"children":9012},{},[9013],{"type":35,"value":9014},"NVIDIA‚Äôs contests are ‚Äúglobal developer contests‚Äù, but the contests so far are not open to developers in India and China. This is probably due to local rules and regulations governing how contests, prizes and taxes work. It is too bad; I would love to see what types of applications would come from participants in these countries. Also, there are also a lot of really interesting developments happening in the LLM space in both China and India!",{"type":29,"tag":38,"props":9016,"children":9017},{},[9018,9020,9033],{"type":35,"value":9019},"The LLMs I used in this project were developed by leading Chinese AI companies, and they are competitive with LLMs from Western countries on LLM benchmarks despite having access to fewer GPU resources. ",{"type":29,"tag":57,"props":9021,"children":9024},{"href":9022,"rel":9023},"https://qwenlm.github.io/blog/qwen2.5-coder-family/",[60],[9025,9027],{"type":35,"value":9026},"Qwen recently released a new model called ",{"type":29,"tag":427,"props":9028,"children":9030},{"className":9029},[],[9031],{"type":35,"value":9032},"Qwen2.5-Coder-32B",{"type":35,"value":9034}," that has outperfomed leading models at coding tasks.",{"type":29,"tag":38,"props":9036,"children":9037},{},[9038],{"type":29,"tag":192,"props":9039,"children":9042},{"alt":9040,"src":9041},"Qwen coder model","/static/redlm/qwen_coder.png",[],{"type":29,"tag":38,"props":9044,"children":9045},{},[9046,9053],{"type":29,"tag":57,"props":9047,"children":9050},{"href":9048,"rel":9049},"https://www.youtube.com/watch?v=UitJxc9LE60",[60],[9051],{"type":35,"value":9052},"Kaifu Lee mentioned in a Bloomberg interview",{"type":35,"value":9054}," that the scarcity of GPU resources in China will force Chinese engineers to innovate in new ways to gain an advantage. One example of this we saw recently was when Chinese hardware hackers doubled the usable memory of the RTX 4090D (a variant of the RTX 4090 card with lower processing power to comply with US export regulations for China - the D stands for Dragon, apparently!)",{"type":29,"tag":38,"props":9056,"children":9057},{},[9058],{"type":29,"tag":192,"props":9059,"children":9062},{"alt":9060,"src":9061},"RTX 4090D 48GB","/static/redlm/RTX4090D.jpg",[],{"type":29,"tag":38,"props":9064,"children":9065},{},[9066],{"type":35,"value":9067},"NVIDIA recently concluded it's AI Summit in Mumbai. I was intrigued by the fact that Hindi has unique challenges that have have limited the development of Hindi LLMs compared to the development of English and Chinese LLMs. In a conversation with Jensen Huang, Indian industrial titan and CEO of Reliance Industries Mukesh Ambani spoke about his aspirations and ambition for India to overcome these challenges and develop a Hindi LLM. In a viral moment Mukesh Ambani shared that through devotion to attaining knowledge through the Hindu Goddess of knowledge Sarawati, India will be met by the Goddess of prosperity, Lakshmi.",{"type":29,"tag":38,"props":9069,"children":9070},{},[9071],{"type":29,"tag":192,"props":9072,"children":9075},{"alt":9073,"src":9074},"Mukesh Ambani","/static/redlm/mukesh_ambani.png",[],{"type":29,"tag":38,"props":9077,"children":9078},{},[9079,9081,9088],{"type":35,"value":9080},"NVIDIA recently released a small language model for Hindi at the AI Summit in Mumbai called  ",{"type":29,"tag":57,"props":9082,"children":9085},{"href":9083,"rel":9084},"https://indiaai.gov.in/article/nvidia-unveils-nemotron-4-mini-hindi-4b-ai-for-india-s-500-million-hindi-speakers",[60],[9086],{"type":35,"value":9087},"Nemotron-4-Mini-Hindi-4B",{"type":35,"value":9089},". Hindi LLMs could enable applications to explore important works of literature from India. I don't know that much about India literature, but a comparable work of literature in size and cultural significance might be the Ramayana.",{"type":29,"tag":38,"props":9091,"children":9092},{},[9093],{"type":29,"tag":4262,"props":9094,"children":9095},{},[9096],{"type":35,"value":9097},"The Ramayana is an ancient Indian epic that tells the story of Prince Rama's heroic quest to rescue his wife, Sita, who has been kidnapped by the demon king Ravana. Set in a world of gods, demons, and celestial beings, the story explores themes of duty, loyalty, and the triumph of good over evil. Guided by wisdom, strength, and the support of devoted allies like Hanuman, the monkey god, and his brother Lakshmana, Rama's journey is a deeply spiritual tale, celebrated for its poetic beauty and moral depth. The Ramayana continues to inspire and captivate audiences across cultures.",{"type":29,"tag":38,"props":9099,"children":9100},{},[9101],{"type":35,"value":9102},"The Ramayana story journeyed to Thailand centuries ago, transforming into the Ramakien, a Thai adaptation that retains the essence of the original Indian epic while adding distinctive Thai cultural elements. Introduced through trade, diplomacy, and cultural exchange between India and Southeast Asia, the story became deeply woven into Thailand‚Äôs art, literature, and performance traditions. Thai kings, particularly King Rama I, adapted and documented the Ramakien, giving it a prominent place in Thai history. Lavishly detailed murals surrounding the Temple of the Emerald Buddha in Bangkok‚Äôs Grand Palace depict the Ramakien in over 178 panels that totaling over 2 kilometers in length. On a recent visit to the Grand Palace, I imagined having an application that could link the detailed murals to elements of the story in Hindi, Thai, English, Chinese or any language.",{"type":29,"tag":38,"props":9104,"children":9105},{},[9106],{"type":29,"tag":192,"props":9107,"children":9110},{"alt":9108,"src":9109},"Ramakien murals surrounding Temple of the Emerald Buddha","/static/redlm/ramakien.png",[],{"type":29,"tag":38,"props":9112,"children":9113},{},[9114],{"type":35,"value":9115},"The Dream of the Red Chamber, originally titled The Story of the Stone, is one of China‚Äôs greatest literary works and a masterpiece of world literature. The novel begins with a frame story centered on a magical stone, left over from the Chinese creation myth where the goddess Nuwa mends the heavens. Longing to experience the human world, the sentient stone persuades a Buddhist monk and a Taoist priest to reincarnate it as a boy. This boy, Baoyu, is born into a wealthy and influential family‚Äîa character partly based on the author, Cao Xueqin, and his own aristocratic upbringing. Through Baoyu's life, friendships, and romantic relationships, the novel delves into his family‚Äôs gradual decline, mirroring the instability of China‚Äôs own noble families in the late Qing dynasty. The story also portrays the era's customs, social structures, and beliefs, offering readers a richly detailed exploration of life in Qing China.",{"type":29,"tag":38,"props":9117,"children":9118},{},[9119],{"type":35,"value":9120},"It was a lot of fun to work on this project with tools from LlamaIndex and NVIDIA. With AI technology, GPUs are now essentially sentient stones, and I was able to share this important touchstone of the human experience with my computers using LlamaIndex and open source language models. In turn, RedLM shared with me delightful insights into world of Dream of the Red Chamber.",{"type":29,"tag":38,"props":9122,"children":9123},{},[9124],{"type":29,"tag":192,"props":9125,"children":9128},{"alt":9126,"src":9127},"Story of a Stone","/static/redlm/stone_story.png",[],{"type":29,"tag":38,"props":9130,"children":9131},{},[9132],{"type":29,"tag":192,"props":9133,"children":9136},{"alt":9134,"src":9135},"Story of a Stone Analysis","/static/redlm/stone_story_analysis.png",[],{"type":29,"tag":6518,"props":9138,"children":9139},{},[9140],{"type":29,"tag":38,"props":9141,"children":9142},{},[9143],{"type":35,"value":9144},"This scene describes a piece of traditional Chinese painting, depicting two elderly figures conversing amidst mountains and rivers. The painting likely visually represents the scene from the book where a monk and a Taoist are chatting at the foot of Qinggeng Peak. The two elderly figures in the painting may represent the monk and Taoist from the book, discussing their discovery of a bright and pristine stone, and planning to take it to a bustling, splendid place for a happy life. The painting‚Äôs elements‚Äîmountains, peaks, flowing water, trees, and rocks‚Äîmight echo the book's descriptions, illustrating the natural environment at the base of Qinggeng Peak where the monk and Taoist reside. The painting‚Äôs tranquil and harmonious atmosphere may also align with the storyline, expressing the monk and Taoist's care for the stone and their wish for it to live a happy life. In summary, this painted scene might be an artistic portrayal of the story between the monk, the Taoist, and the stone from the book, using visual elements and ambiance to convey the narrative and themes within the story.",{"type":29,"tag":3594,"props":9146,"children":9147},{},[9148],{"type":35,"value":3598},{"title":8,"searchDepth":542,"depth":542,"links":9150},[9151,9154,9155,9156,9157,9158,9163,9164,9167,9171,9172,9173,9182,9183,9186],{"id":3647,"depth":542,"text":3650,"children":9152},[9153],{"id":3663,"depth":562,"text":3666},{"id":3694,"depth":542,"text":3697},{"id":3735,"depth":542,"text":3738},{"id":3771,"depth":542,"text":3774},{"id":3800,"depth":542,"text":3803},{"id":4239,"depth":542,"text":4242,"children":9159},[9160,9161,9162],{"id":4882,"depth":562,"text":4885},{"id":5701,"depth":562,"text":5704},{"id":5760,"depth":562,"text":5763},{"id":6369,"depth":542,"text":6372},{"id":6637,"depth":542,"text":6640,"children":9165},[9166],{"id":7523,"depth":562,"text":7526},{"id":7619,"depth":542,"text":7622,"children":9168},[9169,9170],{"id":8269,"depth":562,"text":8272},{"id":8381,"depth":562,"text":8384},{"id":8434,"depth":542,"text":8437},{"id":8470,"depth":542,"text":8473},{"id":8586,"depth":542,"text":8589,"children":9174},[9175,9177,9178,9179,9180,9181],{"id":8597,"depth":562,"text":9176},"01-ai/Yi-1.5-9B-Chat and nvidia/yi-large",{"id":8663,"depth":562,"text":8670},{"id":8678,"depth":562,"text":8685},{"id":8693,"depth":562,"text":6762},{"id":8742,"depth":562,"text":6770},{"id":8771,"depth":562,"text":8783},{"id":8807,"depth":542,"text":8810},{"id":8836,"depth":542,"text":8839,"children":9184},[9185],{"id":8921,"depth":562,"text":8924},{"id":8988,"depth":542,"text":8991},"content:2024:10:09:redlm-ai-application-for-studying-chinese-literature-redology-nvidia-llama-index-developer-contest.md","2024/10/09/redlm-ai-application-for-studying-chinese-literature-redology-nvidia-llama-index-developer-contest.md","2024/10/09/redlm-ai-application-for-studying-chinese-literature-redology-nvidia-llama-index-developer-contest",{"_path":9191,"_dir":9192,"_draft":7,"_partial":7,"_locale":8,"title":9193,"description":9194,"date":9195,"image":9196,"tags":9197,"draft":7,"external":9207,"comments":24,"body":9210,"_type":3618,"_id":9614,"_source":3620,"_file":9615,"_stem":9616,"_extension":3623},"/2024/06/24/agents-of-inference-speed-of-light-nvidia-langchain-generative-ai-agents-developer-contest-update","24","Agents of Inference: Speed of Light -- Accelerating my Generative AI Agents project with NVIDIA NIMs, TensorRT and TensorRT-LLM","This article is a brief discusion on recent updates to my project for the Generative AI Agents Developer Contest by NVIDIA and LangChain","2024-06-24","/static/aoi/aoi_title.png",[14,9198,16,9199,9200,9201,3634,15,17,9202,9203,9204,9205,9206],"langchain","rtx","gpu","tensorrt","llama","007","stable-diffusion","stable-video-diffusion","comfyui",[9208],{"link":9209,"site":23},"https://x.com/briancaffey/status/1802754703207583886",{"type":26,"children":9211,"toc":9607},[9212,9218,9231,9236,9240,9253,9259,9264,9277,9285,9298,9306,9314,9319,9327,9332,9340,9345,9353,9411,9416,9424,9429,9437,9451,9457,9462,9470,9483,9491,9496,9504,9509,9515,9529,9534,9542,9547,9555,9560,9568,9573,9578,9584,9589,9597,9602],{"type":29,"tag":71,"props":9213,"children":9215},{"id":9214},"tldr",[9216],{"type":35,"value":9217},"tl;dr",{"type":29,"tag":38,"props":9219,"children":9220},{},[9221,9223,9230],{"type":35,"value":9222},"\"Agents of Inference: Speed of Light\" is an update to my original entry for the Generative AI Agents Developer Contest by NVIDIA and LangChain. This update focuses on how I accelerated local text, image and video generation using TensorRT, TensorRT-LLM and NVIDIA NIMs. You can read the original article about \"Agents of Inference\" ",{"type":29,"tag":57,"props":9224,"children":9227},{"href":9225,"rel":9226},"https://briancaffey.github.io/2024/06/17/agents-of-inference-nvidia-and-langchain-generative-ai-agent-developer-contest",[60],[9228],{"type":35,"value":9229},"here",{"type":35,"value":3764},{"type":29,"tag":38,"props":9232,"children":9233},{},[9234],{"type":35,"value":9235},"Here's my original project submission post on ùïè that introduces the idea of generating short 007-style films using agents, LLMs and stable diffusion:",{"type":29,"tag":9237,"props":9238,"children":9239},"agents-of-inference-tweet",{},[],{"type":29,"tag":38,"props":9241,"children":9242},{},[9243,9245,9252],{"type":35,"value":9244},"Here's a link to the ",{"type":29,"tag":57,"props":9246,"children":9249},{"href":9247,"rel":9248},"https://github.com/briancaffey/agents-of-inference",[60],[9250],{"type":35,"value":9251},"Agents of Inference code repository on GitHub",{"type":35,"value":3764},{"type":29,"tag":71,"props":9254,"children":9256},{"id":9255},"nvidia-nim-inference-microservices",[9257],{"type":35,"value":9258},"NVIDIA NIM inference microservices",{"type":29,"tag":38,"props":9260,"children":9261},{},[9262],{"type":35,"value":9263},"I thought NVIDIA NIMs was one of the most exciting announcements from GTC 2024. I'm a big fan of using docker containers everywhere, and the idea of standardizing NVIDIA tools and dependencies seemed to make a lot of sense. I had previously struggled to get TensorRT-LLM installed on Windows using example repos provided by NVIDIA.",{"type":29,"tag":38,"props":9265,"children":9266},{},[9267,9269,9275],{"type":35,"value":9268},"A few weeks ago NVIDIA announced that NVIDIA NIMs can be downloaded and run anywhere. I was able to download this NIM for the ",{"type":29,"tag":427,"props":9270,"children":9272},{"className":9271},[],[9273],{"type":35,"value":9274},"meta/llama3-8b-instruct",{"type":35,"value":9276}," model:",{"type":29,"tag":38,"props":9278,"children":9279},{},[9280],{"type":29,"tag":192,"props":9281,"children":9284},{"alt":9282,"src":9283},"llama3 nim","/static/aoi/meta-llama3-nim.png",[],{"type":29,"tag":38,"props":9286,"children":9287},{},[9288,9290,9296],{"type":35,"value":9289},"Here are the logs for my NVIDIA NIM ",{"type":29,"tag":427,"props":9291,"children":9293},{"className":9292},[],[9294],{"type":35,"value":9295},"Meta/Llama-3-8B-Instruct",{"type":35,"value":9297}," running in docker container on Windows Subsystem for Linux on my NVIDIA GeForce RTX 4090 GPU-powered PC. Notice that it generates over 50 tokens per second!",{"type":29,"tag":38,"props":9299,"children":9300},{},[9301],{"type":29,"tag":192,"props":9302,"children":9305},{"alt":9303,"src":9304},"trt llama3 local","/static/aoi/trt-llama3.png",[],{"type":29,"tag":38,"props":9307,"children":9308},{},[9309],{"type":29,"tag":192,"props":9310,"children":9313},{"alt":9311,"src":9312},"token factory","/static/aoi/token-factory.png",[],{"type":29,"tag":38,"props":9315,"children":9316},{},[9317],{"type":35,"value":9318},"The one main hurdle I faced when running the NIM local was an error about no runnable profiles being available:",{"type":29,"tag":514,"props":9320,"children":9322},{"code":9321},"ERROR 06-23 15:41:21.19 utils.py:21] Could not find a profile that is currently runnable with the detected hardware. Please check the system information below and make sure you have enough free GPUs.\nSYSTEM INFO\n- Free GPUs: \u003CNone>\n- Non-free GPUs:\n  -  [2684:10de] (0) NVIDIA GeForce RTX 4090 [current utilization: 7%]\n",[9323],{"type":29,"tag":427,"props":9324,"children":9325},{"__ignoreMap":8},[9326],{"type":35,"value":9321},{"type":29,"tag":38,"props":9328,"children":9329},{},[9330],{"type":35,"value":9331},"This seemed odd, and I found another user with the same issue on the NVIDIA Developer Forum. I was able to get around this by going into the EUFI/BIOS of my PC and switch to integrated graphics:",{"type":29,"tag":38,"props":9333,"children":9334},{},[9335],{"type":29,"tag":192,"props":9336,"children":9339},{"alt":9337,"src":9338},"bios","/static/aoi/bios.jpg",[],{"type":29,"tag":38,"props":9341,"children":9342},{},[9343],{"type":35,"value":9344},"It was great to be able to run \"Agents of Inference\" using NVIDIA NIM because it is just as simple as running a docker container:",{"type":29,"tag":514,"props":9346,"children":9348},{"code":9347},"export CONTAINER_NAME=llama3-8b-instruct\nexport IMG_NAME=\"nvcr.io/nim/meta/${CONTAINER_NAME}:1.0.0\"\nexport LOCAL_NIM_CACHE=~/.cache/nim\nmkdir -p \"$LOCAL_NIM_CACHE\"\ndocker run -it --rm --name=$CONTAINER_NAME \\\n  --runtime=nvidia \\\n  --gpus all \\\n  --shm-size=16GB \\\n  -e NGC_API_KEY \\\n  -v \"$LOCAL_NIM_CACHE:/opt/nim/.cache\" \\\n  -u $(id -u) \\\n  -p 8000:8000 \\\n  $IMG_NAME\n",[9349],{"type":29,"tag":427,"props":9350,"children":9351},{"__ignoreMap":8},[9352],{"type":35,"value":9347},{"type":29,"tag":38,"props":9354,"children":9355},{},[9356,9358,9364,9366,9373,9375,9381,9383,9394,9396,9401,9403,9409],{"type":35,"value":9357},"Before getting this to work, I was able to get a ",{"type":29,"tag":427,"props":9359,"children":9361},{"className":9360},[],[9362],{"type":35,"value":9363},"/chat/completions",{"type":35,"value":9365}," endpoint working with the Llama3 model on my fork of the ",{"type":29,"tag":57,"props":9367,"children":9370},{"href":9368,"rel":9369},"https://github.com/briancaffey/trt-llm-as-openai-windows/commit/edaa15fd026fe95e645e3d4ae9718dc3ecc3bb65",[60],[9371],{"type":35,"value":9372},"trt-llm-as-openai-windows",{"type":35,"value":9374},". I borrowed code for the ",{"type":29,"tag":427,"props":9376,"children":9378},{"className":9377},[],[9379],{"type":35,"value":9380},"TrtLlmAPI",{"type":35,"value":9382}," from the ",{"type":29,"tag":57,"props":9384,"children":9387},{"href":9385,"rel":9386},"https://github.com/NVIDIA/ChatRTX",[60],[9388],{"type":29,"tag":427,"props":9389,"children":9391},{"className":9390},[],[9392],{"type":35,"value":9393},"NVIDIA/ChatRTX",{"type":35,"value":9395}," repo and a function from ",{"type":29,"tag":427,"props":9397,"children":9399},{"className":9398},[],[9400],{"type":35,"value":3632},{"type":35,"value":9402}," called ",{"type":29,"tag":427,"props":9404,"children":9406},{"className":9405},[],[9407],{"type":35,"value":9408},"messages_to_prompt_v3_instruct",{"type":35,"value":9410}," which encodes messages with special tokens for chat. This was an interesting exercise and it taught me a lot about how LLMs do chat. I would like to continue working on this fork and see how to implement streaming endpoints for the Llama 3 model.",{"type":29,"tag":38,"props":9412,"children":9413},{},[9414],{"type":35,"value":9415},"Here is how Llama 3 does the instruct prompting:",{"type":29,"tag":514,"props":9417,"children":9419},{"code":9418},"\u003C|begin_of_text|>\u003C|start_header_id|>system\u003C|end_header_id|>\n\nYou are a helpful AI assistant for travel tips and recommendations\u003C|eot_id|>\u003C|start_header_id|>user\u003C|end_header_id|>\n\nWhat can you help me with?\u003C|eot_id|>\u003C|start_header_id|>assistant\u003C|end_header_id|>\n",[9420],{"type":29,"tag":427,"props":9421,"children":9422},{"__ignoreMap":8},[9423],{"type":35,"value":9418},{"type":29,"tag":38,"props":9425,"children":9426},{},[9427],{"type":35,"value":9428},"Compare this with how it was done with Llama2 chat:",{"type":29,"tag":514,"props":9430,"children":9432},{"code":9431},"\u003Cs>[INST] \u003C\u003CSYS>>\n{{ system_prompt }}\n\u003C\u003C/SYS>>\n\n{{ user_message_1 }} [/INST] {{ model_answer_1 }} \u003C/s>\n\u003Cs>[INST] {{ user_message_2 }} [/INST]\n",[9433],{"type":29,"tag":427,"props":9434,"children":9435},{"__ignoreMap":8},[9436],{"type":35,"value":9431},{"type":29,"tag":38,"props":9438,"children":9439},{},[9440,9442,9449],{"type":35,"value":9441},"You can read more about the difference between Llama 2 and 3 on the ",{"type":29,"tag":57,"props":9443,"children":9446},{"href":9444,"rel":9445},"https://llama.meta.com/docs/model-cards-and-prompt-formats",[60],[9447],{"type":35,"value":9448},"Model Card & Prompt formats",{"type":35,"value":9450}," page on Meta's Llama website.",{"type":29,"tag":71,"props":9452,"children":9454},{"id":9453},"langsmith",[9455],{"type":35,"value":9456},"LangSmith",{"type":29,"tag":38,"props":9458,"children":9459},{},[9460],{"type":35,"value":9461},"I recently started using LangSmith. It is an awesome product and it ties in really well to doing prototype work like in my project \"Agents of Inference\". I wish I had started using it earlier in my development cycle! All you need to do is add an API key to your environment and your application automatically starts tracing LLM calls. It also works well with LangGraph and allows you to trace the execution path of your graph. Also it is good to be aware that there are other products similar to LangSmith like LangFuse. I also saw a really neat demo from Datadog at GTC showing an alpha version of their LLM tracing and observability product.",{"type":29,"tag":38,"props":9463,"children":9464},{},[9465],{"type":29,"tag":192,"props":9466,"children":9469},{"alt":9467,"src":9468},"langsmith screenshot","/static/aoi/langsmith.png",[],{"type":29,"tag":38,"props":9471,"children":9472},{},[9473,9475,9481],{"type":35,"value":9474},"LangSmith can also be helpful when the wrong JSON shape is parsed. I had a lot of difficulty with this in my project. When I used the Q4_K_M gguf quantized ",{"type":29,"tag":427,"props":9476,"children":9478},{"className":9477},[],[9479],{"type":35,"value":9480},"Meta-Llama-3 8B-Instruct",{"type":35,"value":9482}," model I had no issues with output parsing. Switching to the TensorRT-LLM model provided by the NIM resulted in some parsing errors. The application would report that JSON could not be parsed because the result contained text like: \"Here is the JSON that you requested\". I was able to get around this by changing the prompt template from:",{"type":29,"tag":514,"props":9484,"children":9486},{"code":9485},"Answer the user query.\n",[9487],{"type":29,"tag":427,"props":9488,"children":9489},{"__ignoreMap":8},[9490],{"type":35,"value":9485},{"type":29,"tag":38,"props":9492,"children":9493},{},[9494],{"type":35,"value":9495},"to",{"type":29,"tag":514,"props":9497,"children":9499},{"code":9498},"Don't include ANYTHING except for valid JSON in your response. Answer the user query.\n",[9500],{"type":29,"tag":427,"props":9501,"children":9502},{"__ignoreMap":8},[9503],{"type":35,"value":9498},{"type":29,"tag":38,"props":9505,"children":9506},{},[9507],{"type":35,"value":9508},"This was the most frustrating part of development, and I'm still getting occasional errors that I just skip over. I'm also probably have not exhausted all of the tools that LangChain provides to avoid these types of errors. Don't assume that output parsing that works with one model will work with another! This is another good reason to use something like LangSmith when developing LLM-based applications.",{"type":29,"tag":71,"props":9510,"children":9512},{"id":9511},"comfyui-tensorrt",[9513],{"type":35,"value":9514},"ComfyUI TensorRT",{"type":29,"tag":38,"props":9516,"children":9517},{},[9518,9520,9527],{"type":35,"value":9519},"My goal with \"Agents of Inference\" was to be able to test out how small upstream prompt changes can impact the quality and consistency of a series of generated images and videos. Iteration speed is very important! I was able to significantly speed up image and video generation by using the ",{"type":29,"tag":57,"props":9521,"children":9524},{"href":9522,"rel":9523},"https://github.com/comfyanonymous/ComfyUI_TensorRT",[60],[9525],{"type":35,"value":9526},"ComfyUI TensorRT custom nodes",{"type":35,"value":9528},". These nodes allow you to build engines with specifications for parameters that can be either static or dynamic. I had better luck with building dynamic engines. I was able to build and use engines for Stable Diffusion SDXL and Stable Video Diffusion XT.",{"type":29,"tag":38,"props":9530,"children":9531},{},[9532],{"type":35,"value":9533},"Building a TensorRT engine for ComfyUI can be done using the following workflow:",{"type":29,"tag":38,"props":9535,"children":9536},{},[9537],{"type":29,"tag":192,"props":9538,"children":9541},{"alt":9539,"src":9540},"trt comfyUI build process","/static/aoi/comfyui-trt-svd-xt.png",[],{"type":29,"tag":38,"props":9543,"children":9544},{},[9545],{"type":35,"value":9546},"The engines can then be used in custom workflows like the following:",{"type":29,"tag":38,"props":9548,"children":9549},{},[9550],{"type":29,"tag":192,"props":9551,"children":9554},{"alt":9552,"src":9553},"trt comfyui workflow","/static/aoi/svd-workflow-trt.png",[],{"type":29,"tag":38,"props":9556,"children":9557},{},[9558],{"type":35,"value":9559},"Once these workflows are configured and are working as expected, you can export them in API format (JSON) and use them to make API calls to the ComfyUI backend. The agents for stable diffusion and stable video diffusion made API calls in this way and it worked pretty well.",{"type":29,"tag":38,"props":9561,"children":9562},{},[9563],{"type":29,"tag":192,"props":9564,"children":9567},{"alt":9565,"src":9566},"comfy its","/static/aoi/comfy-its.png",[],{"type":29,"tag":38,"props":9569,"children":9570},{},[9571],{"type":35,"value":9572},"Using 50 iterations, I was able to generate 1024x576 images in 3 seconds or about 19 iterations per second (it/s). Videos",{"type":29,"tag":38,"props":9574,"children":9575},{},[9576],{"type":35,"value":9577},"ComfyUI is still early in development and it refers to itself as \"alpha software\" even though it has a large adoption by a very active community already. I'm excited to see what is next from the developers of ComfyUI.",{"type":29,"tag":71,"props":9579,"children":9581},{"id":9580},"speed-of-light",[9582],{"type":35,"value":9583},"Speed of Light",{"type":29,"tag":38,"props":9585,"children":9586},{},[9587],{"type":35,"value":9588},"\"Speed of Light\" is a term that I learned from a stable diffusion talk at GTC.",{"type":29,"tag":6518,"props":9590,"children":9591},{},[9592],{"type":29,"tag":38,"props":9593,"children":9594},{},[9595],{"type":35,"value":9596},"SOL analysis reveals how your code performs, and device utilization compared to relevant maximums.",{"type":29,"tag":38,"props":9598,"children":9599},{},[9600],{"type":35,"value":9601},"Adding TensorRT and TensorRT-LLM to inference services on my RTX PC helped increase the throughput of text, image and video generation for my \"Agents of Inference\" project. I'm looking forward to learning more about profiling and optimization techniques for both LLMs and Stable Diffusion workloads.",{"type":29,"tag":38,"props":9603,"children":9604},{},[9605],{"type":35,"value":9606},"Thanks again to NVIDIA and LangChain for organizing this contest! It was a lot of fun to learn about builing agents with LangChain and LangGraph and the latest developments from NVIDIA in Generative AI.",{"title":8,"searchDepth":542,"depth":542,"links":9608},[9609,9610,9611,9612,9613],{"id":9214,"depth":542,"text":9217},{"id":9255,"depth":542,"text":9258},{"id":9453,"depth":542,"text":9456},{"id":9511,"depth":542,"text":9514},{"id":9580,"depth":542,"text":9583},"content:2024:06:24:agents-of-inference-speed-of-light-nvidia-langchain-generative-ai-agents-developer-contest-update.md","2024/06/24/agents-of-inference-speed-of-light-nvidia-langchain-generative-ai-agents-developer-contest-update.md","2024/06/24/agents-of-inference-speed-of-light-nvidia-langchain-generative-ai-agents-developer-contest-update",{"_path":9618,"_dir":9619,"_draft":7,"_partial":7,"_locale":8,"title":9620,"description":9621,"date":9622,"image":9196,"tags":9623,"draft":7,"external":9624,"comments":24,"body":9626,"_type":3618,"_id":11089,"_source":3620,"_file":11090,"_stem":11091,"_extension":3623},"/2024/06/17/agents-of-inference-nvidia-and-langchain-generative-ai-agent-developer-contest","17","Agents of Inference: My submission for NVIDIA's Generative AI Agents Developer Contest by NVIDIA and LangChain","This article discusses my entry for NVIDIA's Generative AI Agents Developer Contest entry: Agents of Inference","2024-06-17",[14,9198,16,9199,9200,9201,3634,15,17,9202,9203,9204,9205,9206],[9625],{"link":9209,"site":23},{"type":26,"children":9627,"toc":11068},[9628,9634,9645,9649,9654,9659,9662,9672,9678,9683,9689,9694,9700,9705,9748,9756,9761,9767,9772,9785,9798,9810,10163,10168,10211,10216,10376,10402,10408,10413,10517,10545,10552,10557,10563,10568,10647,10653,10658,10760,10768,10773,10778,10830,10851,10857,10878,10923,10928,10933,10939,10952,10960,10966,10970,10975,10980,10986,10991,10997,11002,11008,11013,11021,11026,11032,11044,11049,11054,11059,11064],{"type":29,"tag":71,"props":9629,"children":9631},{"id":9630},"update",[9632],{"type":35,"value":9633},"Update",{"type":29,"tag":38,"props":9635,"children":9636},{},[9637,9639],{"type":35,"value":9638},"I recently posted another article about optimizing this project with TensorRT and TensorRT-LLM running on local NVIDIA NIM inference microservices, please have a look here: ",{"type":29,"tag":57,"props":9640,"children":9643},{"href":9641,"rel":9642},"https://briancaffey.github.io/2024/06/24/agents-of-inference-speed-of-light-nvidia-langchain-generative-ai-agents-developer-contest-update",[60],[9644],{"type":35,"value":9641},{"type":29,"tag":71,"props":9646,"children":9647},{"id":9214},[9648],{"type":35,"value":9217},{"type":29,"tag":38,"props":9650,"children":9651},{},[9652],{"type":35,"value":9653},"‚ÄúAgents of Inference‚Äù is my entry for the Generative AI Agents Developer Contest by NVIDIA and LangChain. This project aims to integrate techniques for generating text, images and video to create an application capable of producing short thematic films. In this article, I will detail how I developed the project leveraging LangGraph‚Äîa library for building stateful, multi-actor applications with LLMs--and hybrid AI workflows using NVIDIA AI-powered tools and technologies running on RTX PCs and in the cloud.",{"type":29,"tag":38,"props":9655,"children":9656},{},[9657],{"type":35,"value":9658},"Here's my project submission post on ùïè:",{"type":29,"tag":9237,"props":9660,"children":9661},{},[],{"type":29,"tag":38,"props":9663,"children":9664},{},[9665,9666,9671],{"type":35,"value":9244},{"type":29,"tag":57,"props":9667,"children":9669},{"href":9247,"rel":9668},[60],[9670],{"type":35,"value":9251},{"type":35,"value":3764},{"type":29,"tag":71,"props":9673,"children":9675},{"id":9674},"nvidias-generative-ai-agents-developer-contest",[9676],{"type":35,"value":9677},"NVIDIA's Generative AI Agents Developer Contest",{"type":29,"tag":38,"props":9679,"children":9680},{},[9681],{"type":35,"value":9682},"AI agents are having a moment. They are the building blocks for building \"applications that reason\", and LangChain is a company that provides a comprehensive set of tools for developing, deploying and monitoring AI agents. I have struggled to understand how I can build or use agents in my own projects, and with the contest I have been able to just scratch the surface of what is possible with AI agents--but I think it is a promising paradigm for developing AI-driven applications.",{"type":29,"tag":71,"props":9684,"children":9686},{"id":9685},"coming-up-with-an-idea",[9687],{"type":35,"value":9688},"Coming up with an idea",{"type":29,"tag":38,"props":9690,"children":9691},{},[9692],{"type":35,"value":9693},"I love stable diffusion. I closely follow the development of the three leading applications for generating images with stable dissuion models: Stable Diffusion WebUI, InvokeAI and ComfyUI. Write a prompt, instantly see the result, tweak the prompt and generate again. This is the basic process by which I have previously used stable diffusion. It is a satisfying mental exercise that feeds the creative and imaginative part of my brain. My idea for this project came from wanting to automate this process: use large language models to build cohesive scenes and detailed prompts and then feed them into my stable diffusion programs via API. Using LangChain and LangGraph allowed me to rapidly prototype the idea and start generating short feature films in the style of my favorite British Secret Agent: 007.",{"type":29,"tag":71,"props":9695,"children":9697},{"id":9696},"putting-together-the-puzzle-pieces",[9698],{"type":35,"value":9699},"Putting together the puzzle pieces",{"type":29,"tag":38,"props":9701,"children":9702},{},[9703],{"type":35,"value":9704},"Here's how I set up an MVP for my project project to get started. I set up a simple graph (a linked list, really) that included the following nodes. *Important: in this context, a node is an agent, and that agent is a simple Python function. It takes one parameter which is the state, a Python dictionary, that holds the output of LLM calls that the agents make. Not all nodes make LLM calls, some just run basic functions like initializing directories or calling external stable diffusion APIs.",{"type":29,"tag":88,"props":9706,"children":9707},{},[9708,9713,9718,9723,9728,9733,9738,9743],{"type":29,"tag":92,"props":9709,"children":9710},{},[9711],{"type":35,"value":9712},"Casting Agent ‚Üí come up with some characters",{"type":29,"tag":92,"props":9714,"children":9715},{},[9716],{"type":35,"value":9717},"Location Agent ‚Üí come up with some locations",{"type":29,"tag":92,"props":9719,"children":9720},{},[9721],{"type":35,"value":9722},"Synopsis Agent ‚Üí write a synopsis based on the characters and locations",{"type":29,"tag":92,"props":9724,"children":9725},{},[9726],{"type":35,"value":9727},"Scene Agent ‚Üí write some number of scenes based on the synopsis based on the synopsis",{"type":29,"tag":92,"props":9729,"children":9730},{},[9731],{"type":35,"value":9732},"Shot agent ‚Üí describe some number of camera shots for each scene based on the scene",{"type":29,"tag":92,"props":9734,"children":9735},{},[9736],{"type":35,"value":9737},"Photography agent ‚Üí take each shot description and generate and image",{"type":29,"tag":92,"props":9739,"children":9740},{},[9741],{"type":35,"value":9742},"Videography agent ‚Üí take each image generated by the photography agent and convert it to a 4 second clip using stable video diffusion",{"type":29,"tag":92,"props":9744,"children":9745},{},[9746],{"type":35,"value":9747},"Editor agent ‚Üí compile the movie clips together",{"type":29,"tag":38,"props":9749,"children":9750},{},[9751],{"type":29,"tag":192,"props":9752,"children":9755},{"alt":9753,"src":9754},"simple graph of agents of inference","/static/aoi/graph.png",[],{"type":29,"tag":38,"props":9757,"children":9758},{},[9759],{"type":35,"value":9760},"It may look simple, but there is a lot going on in this graph.",{"type":29,"tag":123,"props":9762,"children":9764},{"id":9763},"casting-and-location",[9765],{"type":35,"value":9766},"Casting and Location",{"type":29,"tag":38,"props":9768,"children":9769},{},[9770],{"type":35,"value":9771},"The first two agents in my graph are tasked with generating characters and locations that would appear in a British secret agent film. The prompts used for these agents are as follows:",{"type":29,"tag":6518,"props":9773,"children":9774},{},[9775],{"type":29,"tag":38,"props":9776,"children":9777},{},[9778,9783],{"type":29,"tag":44,"props":9779,"children":9780},{},[9781],{"type":35,"value":9782},"casting",{"type":35,"value":9784},": \"Come up with four to five characters who will appear in an upcoming British spy movie. The list should include the main character who is male, the villain, an attractive female actress who eventually falls in love with the main character, and some other characters as well.\"",{"type":29,"tag":6518,"props":9786,"children":9787},{},[9788],{"type":29,"tag":38,"props":9789,"children":9790},{},[9791,9796],{"type":29,"tag":44,"props":9792,"children":9793},{},[9794],{"type":35,"value":9795},"locations",{"type":35,"value":9797},": \"Provide three main locations that can be used in an international British Spy movie. The locations should include a variety of cities, remote environments, iconic landmarks, etc. The locations should make for good background scenes for an action movie with lots of stunts, chases, explosions, fights, etc. and other things you would find in an action movie. Be sure to include the country and a description of the environment where these places are.\"",{"type":29,"tag":38,"props":9799,"children":9800},{},[9801,9803,9808],{"type":35,"value":9802},"These agents leverage the LangChain Expression Language (LCEL) to generate ",{"type":29,"tag":44,"props":9804,"children":9805},{},[9806],{"type":35,"value":9807},"structured output",{"type":35,"value":9809}," based on Pydantic models. For",{"type":29,"tag":514,"props":9811,"children":9813},{"code":9812,"language":2049,"meta":8,"className":2050,"style":8},"class Character(BaseModel):\n    \"\"\"\n    The type for character that the casting agent casts for a role in the movie\n    \"\"\"\n    full_name: str = Field(description=\"The character's name\")\n    short_name: str = Field(description=\"The character's short name\")\n    background: str = Field(description=\"The character's background\")\n    physical_traits: str = Field(description=\"The physical traits of the character\")\n    ethnicity: str = Field(description=\"The character's ethnicity\")\n    gender: str = Field(description=\"The character's gender, either male of female\")\n    nationality: str = Field(description=\"The character's nationality\")\n    main_character: bool = Field(description=\"If the character is or is not the main character\")\n\n",[9814],{"type":29,"tag":427,"props":9815,"children":9816},{"__ignoreMap":8},[9817,9842,9849,9857,9864,9904,9941,9978,10015,10052,10089,10126],{"type":29,"tag":441,"props":9818,"children":9819},{"class":525,"line":526},[9820,9824,9829,9833,9838],{"type":29,"tag":441,"props":9821,"children":9822},{"style":2091},[9823],{"type":35,"value":4328},{"type":29,"tag":441,"props":9825,"children":9826},{"style":2147},[9827],{"type":35,"value":9828}," Character",{"type":29,"tag":441,"props":9830,"children":9831},{"style":536},[9832],{"type":35,"value":2068},{"type":29,"tag":441,"props":9834,"children":9835},{"style":2157},[9836],{"type":35,"value":9837},"BaseModel",{"type":29,"tag":441,"props":9839,"children":9840},{"style":536},[9841],{"type":35,"value":2165},{"type":29,"tag":441,"props":9843,"children":9844},{"class":525,"line":542},[9845],{"type":29,"tag":441,"props":9846,"children":9847},{"style":588},[9848],{"type":35,"value":5825},{"type":29,"tag":441,"props":9850,"children":9851},{"class":525,"line":562},[9852],{"type":29,"tag":441,"props":9853,"children":9854},{"style":588},[9855],{"type":35,"value":9856},"    The type for character that the casting agent casts for a role in the movie\n",{"type":29,"tag":441,"props":9858,"children":9859},{"class":525,"line":575},[9860],{"type":29,"tag":441,"props":9861,"children":9862},{"style":588},[9863],{"type":35,"value":5825},{"type":29,"tag":441,"props":9865,"children":9866},{"class":525,"line":594},[9867,9872,9876,9881,9886,9891,9895,9900],{"type":29,"tag":441,"props":9868,"children":9869},{"style":536},[9870],{"type":35,"value":9871},"    full_name: ",{"type":29,"tag":441,"props":9873,"children":9874},{"style":2303},[9875],{"type":35,"value":2306},{"type":29,"tag":441,"props":9877,"children":9878},{"style":2077},[9879],{"type":35,"value":9880}," =",{"type":29,"tag":441,"props":9882,"children":9883},{"style":536},[9884],{"type":35,"value":9885}," Field(",{"type":29,"tag":441,"props":9887,"children":9888},{"style":2071},[9889],{"type":35,"value":9890},"description",{"type":29,"tag":441,"props":9892,"children":9893},{"style":2077},[9894],{"type":35,"value":2080},{"type":29,"tag":441,"props":9896,"children":9897},{"style":588},[9898],{"type":35,"value":9899},"\"The character's name\"",{"type":29,"tag":441,"props":9901,"children":9902},{"style":536},[9903],{"type":35,"value":3948},{"type":29,"tag":441,"props":9905,"children":9906},{"class":525,"line":607},[9907,9912,9916,9920,9924,9928,9932,9937],{"type":29,"tag":441,"props":9908,"children":9909},{"style":536},[9910],{"type":35,"value":9911},"    short_name: ",{"type":29,"tag":441,"props":9913,"children":9914},{"style":2303},[9915],{"type":35,"value":2306},{"type":29,"tag":441,"props":9917,"children":9918},{"style":2077},[9919],{"type":35,"value":9880},{"type":29,"tag":441,"props":9921,"children":9922},{"style":536},[9923],{"type":35,"value":9885},{"type":29,"tag":441,"props":9925,"children":9926},{"style":2071},[9927],{"type":35,"value":9890},{"type":29,"tag":441,"props":9929,"children":9930},{"style":2077},[9931],{"type":35,"value":2080},{"type":29,"tag":441,"props":9933,"children":9934},{"style":588},[9935],{"type":35,"value":9936},"\"The character's short name\"",{"type":29,"tag":441,"props":9938,"children":9939},{"style":536},[9940],{"type":35,"value":3948},{"type":29,"tag":441,"props":9942,"children":9943},{"class":525,"line":631},[9944,9949,9953,9957,9961,9965,9969,9974],{"type":29,"tag":441,"props":9945,"children":9946},{"style":536},[9947],{"type":35,"value":9948},"    background: ",{"type":29,"tag":441,"props":9950,"children":9951},{"style":2303},[9952],{"type":35,"value":2306},{"type":29,"tag":441,"props":9954,"children":9955},{"style":2077},[9956],{"type":35,"value":9880},{"type":29,"tag":441,"props":9958,"children":9959},{"style":536},[9960],{"type":35,"value":9885},{"type":29,"tag":441,"props":9962,"children":9963},{"style":2071},[9964],{"type":35,"value":9890},{"type":29,"tag":441,"props":9966,"children":9967},{"style":2077},[9968],{"type":35,"value":2080},{"type":29,"tag":441,"props":9970,"children":9971},{"style":588},[9972],{"type":35,"value":9973},"\"The character's background\"",{"type":29,"tag":441,"props":9975,"children":9976},{"style":536},[9977],{"type":35,"value":3948},{"type":29,"tag":441,"props":9979,"children":9980},{"class":525,"line":644},[9981,9986,9990,9994,9998,10002,10006,10011],{"type":29,"tag":441,"props":9982,"children":9983},{"style":536},[9984],{"type":35,"value":9985},"    physical_traits: ",{"type":29,"tag":441,"props":9987,"children":9988},{"style":2303},[9989],{"type":35,"value":2306},{"type":29,"tag":441,"props":9991,"children":9992},{"style":2077},[9993],{"type":35,"value":9880},{"type":29,"tag":441,"props":9995,"children":9996},{"style":536},[9997],{"type":35,"value":9885},{"type":29,"tag":441,"props":9999,"children":10000},{"style":2071},[10001],{"type":35,"value":9890},{"type":29,"tag":441,"props":10003,"children":10004},{"style":2077},[10005],{"type":35,"value":2080},{"type":29,"tag":441,"props":10007,"children":10008},{"style":588},[10009],{"type":35,"value":10010},"\"The physical traits of the character\"",{"type":29,"tag":441,"props":10012,"children":10013},{"style":536},[10014],{"type":35,"value":3948},{"type":29,"tag":441,"props":10016,"children":10017},{"class":525,"line":658},[10018,10023,10027,10031,10035,10039,10043,10048],{"type":29,"tag":441,"props":10019,"children":10020},{"style":536},[10021],{"type":35,"value":10022},"    ethnicity: ",{"type":29,"tag":441,"props":10024,"children":10025},{"style":2303},[10026],{"type":35,"value":2306},{"type":29,"tag":441,"props":10028,"children":10029},{"style":2077},[10030],{"type":35,"value":9880},{"type":29,"tag":441,"props":10032,"children":10033},{"style":536},[10034],{"type":35,"value":9885},{"type":29,"tag":441,"props":10036,"children":10037},{"style":2071},[10038],{"type":35,"value":9890},{"type":29,"tag":441,"props":10040,"children":10041},{"style":2077},[10042],{"type":35,"value":2080},{"type":29,"tag":441,"props":10044,"children":10045},{"style":588},[10046],{"type":35,"value":10047},"\"The character's ethnicity\"",{"type":29,"tag":441,"props":10049,"children":10050},{"style":536},[10051],{"type":35,"value":3948},{"type":29,"tag":441,"props":10053,"children":10054},{"class":525,"line":671},[10055,10060,10064,10068,10072,10076,10080,10085],{"type":29,"tag":441,"props":10056,"children":10057},{"style":536},[10058],{"type":35,"value":10059},"    gender: ",{"type":29,"tag":441,"props":10061,"children":10062},{"style":2303},[10063],{"type":35,"value":2306},{"type":29,"tag":441,"props":10065,"children":10066},{"style":2077},[10067],{"type":35,"value":9880},{"type":29,"tag":441,"props":10069,"children":10070},{"style":536},[10071],{"type":35,"value":9885},{"type":29,"tag":441,"props":10073,"children":10074},{"style":2071},[10075],{"type":35,"value":9890},{"type":29,"tag":441,"props":10077,"children":10078},{"style":2077},[10079],{"type":35,"value":2080},{"type":29,"tag":441,"props":10081,"children":10082},{"style":588},[10083],{"type":35,"value":10084},"\"The character's gender, either male of female\"",{"type":29,"tag":441,"props":10086,"children":10087},{"style":536},[10088],{"type":35,"value":3948},{"type":29,"tag":441,"props":10090,"children":10091},{"class":525,"line":684},[10092,10097,10101,10105,10109,10113,10117,10122],{"type":29,"tag":441,"props":10093,"children":10094},{"style":536},[10095],{"type":35,"value":10096},"    nationality: ",{"type":29,"tag":441,"props":10098,"children":10099},{"style":2303},[10100],{"type":35,"value":2306},{"type":29,"tag":441,"props":10102,"children":10103},{"style":2077},[10104],{"type":35,"value":9880},{"type":29,"tag":441,"props":10106,"children":10107},{"style":536},[10108],{"type":35,"value":9885},{"type":29,"tag":441,"props":10110,"children":10111},{"style":2071},[10112],{"type":35,"value":9890},{"type":29,"tag":441,"props":10114,"children":10115},{"style":2077},[10116],{"type":35,"value":2080},{"type":29,"tag":441,"props":10118,"children":10119},{"style":588},[10120],{"type":35,"value":10121},"\"The character's nationality\"",{"type":29,"tag":441,"props":10123,"children":10124},{"style":536},[10125],{"type":35,"value":3948},{"type":29,"tag":441,"props":10127,"children":10128},{"class":525,"line":697},[10129,10134,10138,10142,10146,10150,10154,10159],{"type":29,"tag":441,"props":10130,"children":10131},{"style":536},[10132],{"type":35,"value":10133},"    main_character: ",{"type":29,"tag":441,"props":10135,"children":10136},{"style":2303},[10137],{"type":35,"value":5813},{"type":29,"tag":441,"props":10139,"children":10140},{"style":2077},[10141],{"type":35,"value":9880},{"type":29,"tag":441,"props":10143,"children":10144},{"style":536},[10145],{"type":35,"value":9885},{"type":29,"tag":441,"props":10147,"children":10148},{"style":2071},[10149],{"type":35,"value":9890},{"type":29,"tag":441,"props":10151,"children":10152},{"style":2077},[10153],{"type":35,"value":2080},{"type":29,"tag":441,"props":10155,"children":10156},{"style":588},[10157],{"type":35,"value":10158},"\"If the character is or is not the main character\"",{"type":29,"tag":441,"props":10160,"children":10161},{"style":536},[10162],{"type":35,"value":3948},{"type":29,"tag":38,"props":10164,"children":10165},{},[10166],{"type":35,"value":10167},"LCEL offers wonderful syntactic sugar, I can use this model in a parse and pip that into the output from the mode:",{"type":29,"tag":514,"props":10169,"children":10171},{"code":10170,"language":2049,"meta":8,"className":2050,"style":8},"chain = prompt | model | parser\n",[10172],{"type":29,"tag":427,"props":10173,"children":10174},{"__ignoreMap":8},[10175],{"type":29,"tag":441,"props":10176,"children":10177},{"class":525,"line":526},[10178,10183,10187,10192,10197,10202,10206],{"type":29,"tag":441,"props":10179,"children":10180},{"style":536},[10181],{"type":35,"value":10182},"chain ",{"type":29,"tag":441,"props":10184,"children":10185},{"style":2077},[10186],{"type":35,"value":2080},{"type":29,"tag":441,"props":10188,"children":10189},{"style":536},[10190],{"type":35,"value":10191}," prompt ",{"type":29,"tag":441,"props":10193,"children":10194},{"style":2077},[10195],{"type":35,"value":10196},"|",{"type":29,"tag":441,"props":10198,"children":10199},{"style":536},[10200],{"type":35,"value":10201}," model ",{"type":29,"tag":441,"props":10203,"children":10204},{"style":2077},[10205],{"type":35,"value":10196},{"type":29,"tag":441,"props":10207,"children":10208},{"style":536},[10209],{"type":35,"value":10210}," parser\n",{"type":29,"tag":38,"props":10212,"children":10213},{},[10214],{"type":35,"value":10215},"This results in our structured data:",{"type":29,"tag":514,"props":10217,"children":10221},{"code":10218,"language":10219,"meta":8,"className":10220,"style":8},"cast:\n- background: Former MI6 agent\n  ethnicity: British\n  full_name: James Alexander\n  gender: Male\n  main_character: true\n  nationality: British\n  physical_traits: Tall, dark hair, blue eyes\n  short_name: Jamie\n","yml","language-yml shiki shiki-themes github-light github-dark monokai",[10222],{"type":29,"tag":427,"props":10223,"children":10224},{"__ignoreMap":8},[10225,10237,10259,10276,10293,10310,10326,10342,10359],{"type":29,"tag":441,"props":10226,"children":10227},{"class":525,"line":526},[10228,10233],{"type":29,"tag":441,"props":10229,"children":10230},{"style":530},[10231],{"type":35,"value":10232},"cast",{"type":29,"tag":441,"props":10234,"children":10235},{"style":536},[10236],{"type":35,"value":539},{"type":29,"tag":441,"props":10238,"children":10239},{"class":525,"line":542},[10240,10245,10250,10254],{"type":29,"tag":441,"props":10241,"children":10242},{"style":536},[10243],{"type":35,"value":10244},"- ",{"type":29,"tag":441,"props":10246,"children":10247},{"style":530},[10248],{"type":35,"value":10249},"background",{"type":29,"tag":441,"props":10251,"children":10252},{"style":536},[10253],{"type":35,"value":553},{"type":29,"tag":441,"props":10255,"children":10256},{"style":588},[10257],{"type":35,"value":10258},"Former MI6 agent\n",{"type":29,"tag":441,"props":10260,"children":10261},{"class":525,"line":562},[10262,10267,10271],{"type":29,"tag":441,"props":10263,"children":10264},{"style":530},[10265],{"type":35,"value":10266},"  ethnicity",{"type":29,"tag":441,"props":10268,"children":10269},{"style":536},[10270],{"type":35,"value":553},{"type":29,"tag":441,"props":10272,"children":10273},{"style":588},[10274],{"type":35,"value":10275},"British\n",{"type":29,"tag":441,"props":10277,"children":10278},{"class":525,"line":575},[10279,10284,10288],{"type":29,"tag":441,"props":10280,"children":10281},{"style":530},[10282],{"type":35,"value":10283},"  full_name",{"type":29,"tag":441,"props":10285,"children":10286},{"style":536},[10287],{"type":35,"value":553},{"type":29,"tag":441,"props":10289,"children":10290},{"style":588},[10291],{"type":35,"value":10292},"James Alexander\n",{"type":29,"tag":441,"props":10294,"children":10295},{"class":525,"line":594},[10296,10301,10305],{"type":29,"tag":441,"props":10297,"children":10298},{"style":530},[10299],{"type":35,"value":10300},"  gender",{"type":29,"tag":441,"props":10302,"children":10303},{"style":536},[10304],{"type":35,"value":553},{"type":29,"tag":441,"props":10306,"children":10307},{"style":588},[10308],{"type":35,"value":10309},"Male\n",{"type":29,"tag":441,"props":10311,"children":10312},{"class":525,"line":607},[10313,10318,10322],{"type":29,"tag":441,"props":10314,"children":10315},{"style":530},[10316],{"type":35,"value":10317},"  main_character",{"type":29,"tag":441,"props":10319,"children":10320},{"style":536},[10321],{"type":35,"value":553},{"type":29,"tag":441,"props":10323,"children":10324},{"style":556},[10325],{"type":35,"value":559},{"type":29,"tag":441,"props":10327,"children":10328},{"class":525,"line":631},[10329,10334,10338],{"type":29,"tag":441,"props":10330,"children":10331},{"style":530},[10332],{"type":35,"value":10333},"  nationality",{"type":29,"tag":441,"props":10335,"children":10336},{"style":536},[10337],{"type":35,"value":553},{"type":29,"tag":441,"props":10339,"children":10340},{"style":588},[10341],{"type":35,"value":10275},{"type":29,"tag":441,"props":10343,"children":10344},{"class":525,"line":644},[10345,10350,10354],{"type":29,"tag":441,"props":10346,"children":10347},{"style":530},[10348],{"type":35,"value":10349},"  physical_traits",{"type":29,"tag":441,"props":10351,"children":10352},{"style":536},[10353],{"type":35,"value":553},{"type":29,"tag":441,"props":10355,"children":10356},{"style":588},[10357],{"type":35,"value":10358},"Tall, dark hair, blue eyes\n",{"type":29,"tag":441,"props":10360,"children":10361},{"class":525,"line":658},[10362,10367,10371],{"type":29,"tag":441,"props":10363,"children":10364},{"style":530},[10365],{"type":35,"value":10366},"  short_name",{"type":29,"tag":441,"props":10368,"children":10369},{"style":536},[10370],{"type":35,"value":553},{"type":29,"tag":441,"props":10372,"children":10373},{"style":588},[10374],{"type":35,"value":10375},"Jamie\n",{"type":29,"tag":38,"props":10377,"children":10378},{},[10379,10381,10387,10389,10400],{"type":35,"value":10380},"I saved the state for all \"Agents of Inference\" invocations in the ",{"type":29,"tag":427,"props":10382,"children":10384},{"className":10383},[],[10385],{"type":35,"value":10386},"output",{"type":35,"value":10388}," directory of my ",{"type":29,"tag":57,"props":10390,"children":10393},{"href":10391,"rel":10392},"https://github.com/briancaffey/agents-of-inference/tree/main/output",[60],[10394],{"type":29,"tag":427,"props":10395,"children":10397},{"className":10396},[],[10398],{"type":35,"value":10399},"agents-of-inference",{"type":35,"value":10401}," GitHub repo. I didn't commit the images and videos, but you can follow @AgentInference on X to see more of the results from my development process and future improvements, as well!",{"type":29,"tag":123,"props":10403,"children":10405},{"id":10404},"synopsis-agent",[10406],{"type":35,"value":10407},"Synopsis Agent",{"type":29,"tag":38,"props":10409,"children":10410},{},[10411],{"type":35,"value":10412},"With a cast of characters and locations selected, we need a synopsis to determine what happens. Here's the prompt:",{"type":29,"tag":514,"props":10414,"children":10416},{"code":10415,"language":517,"meta":8,"className":518,"style":8},"synopsis: |\n  Generate a synopsis for a British spy agent movie in the style of the James Bond series. The synopsis should include the following elements:\n  Protagonist: A charismatic and skilled British secret agent with a code name (e.g., \"Agent X\") who works for a top-secret government agency (e.g., MI6).\n  Antagonist: A formidable villain with a grand, sinister plan that threatens global security. The antagonist should have a unique, memorable persona and a well-defined motivation.\n  Mission: Outline the high-stakes mission that the protagonist must undertake to thwart the antagonist‚Äôs plan.\n  Gadgets and Vehicles: Mention the cutting-edge gadgets and vehicles that the protagonist uses throughout the mission. These should be inventive and integral to the plot.\n  Action Sequences: Include a brief description of some thrilling action sequences, such as car, boat, plane chases, hand-to-hand combat, and daring escapes, and dangerous situations.\n  Big Reveal: There is a big reveal toward the end of the storyline that is surprising and the reveal helps to move the story along.\n  Climactic Showdown: Describe the final confrontation between the protagonist and the antagonist. This should be intense and action-packed, leading to a satisfying resolution. Should include details about the main character is victorious.\n  Setting: Ensure that the settings are diverse and visually striking, adding to the overall excitement and suspense of the story. This should involve multiple locations in exotic environments, the wilderness, in dangerous situations, on board planes, trains, boats and fancy cars, etc.\n  Tone and Style: Maintain the sophisticated, suave, and adventurous tone that is characteristic of the James Bond series. Include elements of intrigue, romance, and humor.\n",[10417],{"type":29,"tag":427,"props":10418,"children":10419},{"__ignoreMap":8},[10420,10437,10445,10453,10461,10469,10477,10485,10493,10501,10509],{"type":29,"tag":441,"props":10421,"children":10422},{"class":525,"line":526},[10423,10428,10432],{"type":29,"tag":441,"props":10424,"children":10425},{"style":530},[10426],{"type":35,"value":10427},"synopsis",{"type":29,"tag":441,"props":10429,"children":10430},{"style":536},[10431],{"type":35,"value":553},{"type":29,"tag":441,"props":10433,"children":10434},{"style":2077},[10435],{"type":35,"value":10436},"|\n",{"type":29,"tag":441,"props":10438,"children":10439},{"class":525,"line":542},[10440],{"type":29,"tag":441,"props":10441,"children":10442},{"style":588},[10443],{"type":35,"value":10444},"  Generate a synopsis for a British spy agent movie in the style of the James Bond series. The synopsis should include the following elements:\n",{"type":29,"tag":441,"props":10446,"children":10447},{"class":525,"line":562},[10448],{"type":29,"tag":441,"props":10449,"children":10450},{"style":588},[10451],{"type":35,"value":10452},"  Protagonist: A charismatic and skilled British secret agent with a code name (e.g., \"Agent X\") who works for a top-secret government agency (e.g., MI6).\n",{"type":29,"tag":441,"props":10454,"children":10455},{"class":525,"line":575},[10456],{"type":29,"tag":441,"props":10457,"children":10458},{"style":588},[10459],{"type":35,"value":10460},"  Antagonist: A formidable villain with a grand, sinister plan that threatens global security. The antagonist should have a unique, memorable persona and a well-defined motivation.\n",{"type":29,"tag":441,"props":10462,"children":10463},{"class":525,"line":594},[10464],{"type":29,"tag":441,"props":10465,"children":10466},{"style":588},[10467],{"type":35,"value":10468},"  Mission: Outline the high-stakes mission that the protagonist must undertake to thwart the antagonist‚Äôs plan.\n",{"type":29,"tag":441,"props":10470,"children":10471},{"class":525,"line":607},[10472],{"type":29,"tag":441,"props":10473,"children":10474},{"style":588},[10475],{"type":35,"value":10476},"  Gadgets and Vehicles: Mention the cutting-edge gadgets and vehicles that the protagonist uses throughout the mission. These should be inventive and integral to the plot.\n",{"type":29,"tag":441,"props":10478,"children":10479},{"class":525,"line":631},[10480],{"type":29,"tag":441,"props":10481,"children":10482},{"style":588},[10483],{"type":35,"value":10484},"  Action Sequences: Include a brief description of some thrilling action sequences, such as car, boat, plane chases, hand-to-hand combat, and daring escapes, and dangerous situations.\n",{"type":29,"tag":441,"props":10486,"children":10487},{"class":525,"line":644},[10488],{"type":29,"tag":441,"props":10489,"children":10490},{"style":588},[10491],{"type":35,"value":10492},"  Big Reveal: There is a big reveal toward the end of the storyline that is surprising and the reveal helps to move the story along.\n",{"type":29,"tag":441,"props":10494,"children":10495},{"class":525,"line":658},[10496],{"type":29,"tag":441,"props":10497,"children":10498},{"style":588},[10499],{"type":35,"value":10500},"  Climactic Showdown: Describe the final confrontation between the protagonist and the antagonist. This should be intense and action-packed, leading to a satisfying resolution. Should include details about the main character is victorious.\n",{"type":29,"tag":441,"props":10502,"children":10503},{"class":525,"line":671},[10504],{"type":29,"tag":441,"props":10505,"children":10506},{"style":588},[10507],{"type":35,"value":10508},"  Setting: Ensure that the settings are diverse and visually striking, adding to the overall excitement and suspense of the story. This should involve multiple locations in exotic environments, the wilderness, in dangerous situations, on board planes, trains, boats and fancy cars, etc.\n",{"type":29,"tag":441,"props":10510,"children":10511},{"class":525,"line":684},[10512],{"type":29,"tag":441,"props":10513,"children":10514},{"style":588},[10515],{"type":35,"value":10516},"  Tone and Style: Maintain the sophisticated, suave, and adventurous tone that is characteristic of the James Bond series. Include elements of intrigue, romance, and humor.\n",{"type":29,"tag":38,"props":10518,"children":10519},{},[10520,10522,10528,10530,10536,10538,10543],{"type":35,"value":10521},"The synopsis to any good film is key, so I decided to use a feature of LangGraph that would allow a ",{"type":29,"tag":427,"props":10523,"children":10525},{"className":10524},[],[10526],{"type":35,"value":10527},"synopsis_review_agent",{"type":35,"value":10529}," to provide multiple rounds of feedback to the ",{"type":29,"tag":427,"props":10531,"children":10533},{"className":10532},[],[10534],{"type":35,"value":10535},"synopsis_agent",{"type":35,"value":10537}," to make it even better. Here's what the new graph look like after implementing the ",{"type":29,"tag":427,"props":10539,"children":10541},{"className":10540},[],[10542],{"type":35,"value":10527},{"type":35,"value":10544}," using conditional graph edges:",{"type":29,"tag":38,"props":10546,"children":10547},{},[10548],{"type":29,"tag":192,"props":10549,"children":10551},{"alt":10527,"src":10550},"/static/aoi/graph_with_cycle.png",[],{"type":29,"tag":38,"props":10553,"children":10554},{},[10555],{"type":35,"value":10556},"Conditional edges are a very powerful feature and I just used it in one part of my graph. Other parts of the graph could benefit from this as well, and they can allow for \"human-in-the-loop\" interactions which are becoming very popular in AI-powered applications.",{"type":29,"tag":123,"props":10558,"children":10560},{"id":10559},"scene-and-shot-agents",[10561],{"type":35,"value":10562},"Scene and shot agents",{"type":29,"tag":38,"props":10564,"children":10565},{},[10566],{"type":35,"value":10567},"With our perfected synopsis, we are ready to put more agents to work. The scene agent builds out the basic structure of the storyline. It provides a structured list of the main sections of the movie. The shot agent then loops over the scenes and creates a number of different shots for the given scene. This was an effective way to have consistent thematic content for shots within a scene. Here are the prompts I used for the scene and shot agents:",{"type":29,"tag":514,"props":10569,"children":10571},{"code":10570,"language":517,"meta":8,"className":518,"style":8},"scenes: |\n  Create a list of detailed scenes for an exciting and entertaining British spy film. The scenes should be comprehensive and include all scenes necessary for a complete film. Each scene should include the following elements:\n  Location: Describe the location and setting of the scene, including any notable landmarks, time of day, and general atmosphere.\n  Characters Involved: List the main characters present in the scene, with a brief description of their roles and appearances.\n  Description of What Happens: Provide a detailed account of the action, and key events that take place in the scene.\nshot: |\n  You are a film director working on a new British spy film and your writers have provided you with a scene. Your task is to come up with four to five shots that will be filmed during the scene. The shot descriptions needs to be specific and should include a varietry of closeup shots on characters, environment shots that consider the scene location and shots of specific items or other things that are featured in the scene. Each shot should also have a title. The description should be a brief densely worded block of text that captures the important elements of the scene. Consider the style of camera angle, lighting, character expressions, clothing, and other important visual elements for each shot. Be very descriptive. The description will be used to generate an image of the shot. Also, there should be at most one actor for each shot that contains people. Don't use the name of the character, instead use a physical description of the character based on their physical traits described below if needed. Also consider what the actor is wearing in the description.\n",[10572],{"type":29,"tag":427,"props":10573,"children":10574},{"__ignoreMap":8},[10575,10591,10599,10607,10615,10623,10639],{"type":29,"tag":441,"props":10576,"children":10577},{"class":525,"line":526},[10578,10583,10587],{"type":29,"tag":441,"props":10579,"children":10580},{"style":530},[10581],{"type":35,"value":10582},"scenes",{"type":29,"tag":441,"props":10584,"children":10585},{"style":536},[10586],{"type":35,"value":553},{"type":29,"tag":441,"props":10588,"children":10589},{"style":2077},[10590],{"type":35,"value":10436},{"type":29,"tag":441,"props":10592,"children":10593},{"class":525,"line":542},[10594],{"type":29,"tag":441,"props":10595,"children":10596},{"style":588},[10597],{"type":35,"value":10598},"  Create a list of detailed scenes for an exciting and entertaining British spy film. The scenes should be comprehensive and include all scenes necessary for a complete film. Each scene should include the following elements:\n",{"type":29,"tag":441,"props":10600,"children":10601},{"class":525,"line":562},[10602],{"type":29,"tag":441,"props":10603,"children":10604},{"style":588},[10605],{"type":35,"value":10606},"  Location: Describe the location and setting of the scene, including any notable landmarks, time of day, and general atmosphere.\n",{"type":29,"tag":441,"props":10608,"children":10609},{"class":525,"line":575},[10610],{"type":29,"tag":441,"props":10611,"children":10612},{"style":588},[10613],{"type":35,"value":10614},"  Characters Involved: List the main characters present in the scene, with a brief description of their roles and appearances.\n",{"type":29,"tag":441,"props":10616,"children":10617},{"class":525,"line":594},[10618],{"type":29,"tag":441,"props":10619,"children":10620},{"style":588},[10621],{"type":35,"value":10622},"  Description of What Happens: Provide a detailed account of the action, and key events that take place in the scene.\n",{"type":29,"tag":441,"props":10624,"children":10625},{"class":525,"line":607},[10626,10631,10635],{"type":29,"tag":441,"props":10627,"children":10628},{"style":530},[10629],{"type":35,"value":10630},"shot",{"type":29,"tag":441,"props":10632,"children":10633},{"style":536},[10634],{"type":35,"value":553},{"type":29,"tag":441,"props":10636,"children":10637},{"style":2077},[10638],{"type":35,"value":10436},{"type":29,"tag":441,"props":10640,"children":10641},{"class":525,"line":631},[10642],{"type":29,"tag":441,"props":10643,"children":10644},{"style":588},[10645],{"type":35,"value":10646},"  You are a film director working on a new British spy film and your writers have provided you with a scene. Your task is to come up with four to five shots that will be filmed during the scene. The shot descriptions needs to be specific and should include a varietry of closeup shots on characters, environment shots that consider the scene location and shots of specific items or other things that are featured in the scene. Each shot should also have a title. The description should be a brief densely worded block of text that captures the important elements of the scene. Consider the style of camera angle, lighting, character expressions, clothing, and other important visual elements for each shot. Be very descriptive. The description will be used to generate an image of the shot. Also, there should be at most one actor for each shot that contains people. Don't use the name of the character, instead use a physical description of the character based on their physical traits described below if needed. Also consider what the actor is wearing in the description.\n",{"type":29,"tag":123,"props":10648,"children":10650},{"id":10649},"stable-diffusion-and-stable-video-diffusion-agents",[10651],{"type":35,"value":10652},"Stable Diffusion and Stable Video Diffusion agents",{"type":29,"tag":38,"props":10654,"children":10655},{},[10656],{"type":35,"value":10657},"The stable diffusion agent makes an API call to a local instance of the Stable Diffusion WebUI API, saves the generated image and saves a reference to that image in the state:",{"type":29,"tag":514,"props":10659,"children":10661},{"code":10660,"language":517,"meta":8,"className":518,"style":8},"- description: A medium close-up shot of Ethan Jameson's face, with a concerned expression,\n    as he reads the message from Natalie Jackson. The lighting is dim, with only a\n    single lamp on his desk casting a warm glow. His eyes are narrowed, and his brow\n    is furrowed in concentration. He is wearing a dark blue suit and a white shirt.\n  image: 000.png\n  title: Ethan's Concerned Expression\n  video: 000.mp4\n",[10662],{"type":29,"tag":427,"props":10663,"children":10664},{"__ignoreMap":8},[10665,10685,10693,10701,10709,10726,10743],{"type":29,"tag":441,"props":10666,"children":10667},{"class":525,"line":526},[10668,10672,10676,10680],{"type":29,"tag":441,"props":10669,"children":10670},{"style":536},[10671],{"type":35,"value":10244},{"type":29,"tag":441,"props":10673,"children":10674},{"style":530},[10675],{"type":35,"value":9890},{"type":29,"tag":441,"props":10677,"children":10678},{"style":536},[10679],{"type":35,"value":553},{"type":29,"tag":441,"props":10681,"children":10682},{"style":588},[10683],{"type":35,"value":10684},"A medium close-up shot of Ethan Jameson's face, with a concerned expression,\n",{"type":29,"tag":441,"props":10686,"children":10687},{"class":525,"line":542},[10688],{"type":29,"tag":441,"props":10689,"children":10690},{"style":588},[10691],{"type":35,"value":10692},"    as he reads the message from Natalie Jackson. The lighting is dim, with only a\n",{"type":29,"tag":441,"props":10694,"children":10695},{"class":525,"line":562},[10696],{"type":29,"tag":441,"props":10697,"children":10698},{"style":588},[10699],{"type":35,"value":10700},"    single lamp on his desk casting a warm glow. His eyes are narrowed, and his brow\n",{"type":29,"tag":441,"props":10702,"children":10703},{"class":525,"line":575},[10704],{"type":29,"tag":441,"props":10705,"children":10706},{"style":588},[10707],{"type":35,"value":10708},"    is furrowed in concentration. He is wearing a dark blue suit and a white shirt.\n",{"type":29,"tag":441,"props":10710,"children":10711},{"class":525,"line":594},[10712,10717,10721],{"type":29,"tag":441,"props":10713,"children":10714},{"style":530},[10715],{"type":35,"value":10716},"  image",{"type":29,"tag":441,"props":10718,"children":10719},{"style":536},[10720],{"type":35,"value":553},{"type":29,"tag":441,"props":10722,"children":10723},{"style":588},[10724],{"type":35,"value":10725},"000.png\n",{"type":29,"tag":441,"props":10727,"children":10728},{"class":525,"line":607},[10729,10734,10738],{"type":29,"tag":441,"props":10730,"children":10731},{"style":530},[10732],{"type":35,"value":10733},"  title",{"type":29,"tag":441,"props":10735,"children":10736},{"style":536},[10737],{"type":35,"value":553},{"type":29,"tag":441,"props":10739,"children":10740},{"style":588},[10741],{"type":35,"value":10742},"Ethan's Concerned Expression\n",{"type":29,"tag":441,"props":10744,"children":10745},{"class":525,"line":631},[10746,10751,10755],{"type":29,"tag":441,"props":10747,"children":10748},{"style":530},[10749],{"type":35,"value":10750},"  video",{"type":29,"tag":441,"props":10752,"children":10753},{"style":536},[10754],{"type":35,"value":553},{"type":29,"tag":441,"props":10756,"children":10757},{"style":588},[10758],{"type":35,"value":10759},"000.mp4\n",{"type":29,"tag":38,"props":10761,"children":10762},{},[10763],{"type":29,"tag":192,"props":10764,"children":10767},{"alt":10765,"src":10766},"A medium close-up shot of Ethan Jameson's face","/static/aoi/ethan.png",[],{"type":29,"tag":38,"props":10769,"children":10770},{},[10771],{"type":35,"value":10772},"With the perfectly prompted image in hand, we can use Stable Video Diffusion to bring it to life. I prompted phind to come up with a FastAPI service that would accept an image in a post request and return a short video created with stable video diffusion using the diffusers library.",{"type":29,"tag":38,"props":10774,"children":10775},{},[10776],{"type":35,"value":10777},"Stable video diffusion can generate about 4 seconds of text at 7 frames per second. This isn't great, but I was able to use ffmpeg to do frame interpolation bringing the frame rate to a much smoother 14 fps using motion compensated interpolation (MCI):",{"type":29,"tag":514,"props":10779,"children":10783},{"code":10780,"language":10781,"meta":8,"className":10782,"style":8},"ffmpeg -i output/1718453390/final.mp4 -crf 10 -vf \"minterpolate=fps=14:mi_mode=mci:mc_mode=aobmc:me_mode=bidir:vsbmc=1\" output/1718453390/final.14fps.mp4\n","bash","language-bash shiki shiki-themes github-light github-dark monokai",[10784],{"type":29,"tag":427,"props":10785,"children":10786},{"__ignoreMap":8},[10787],{"type":29,"tag":441,"props":10788,"children":10789},{"class":525,"line":526},[10790,10795,10800,10805,10810,10815,10820,10825],{"type":29,"tag":441,"props":10791,"children":10792},{"style":2060},[10793],{"type":35,"value":10794},"ffmpeg",{"type":29,"tag":441,"props":10796,"children":10797},{"style":556},[10798],{"type":35,"value":10799}," -i",{"type":29,"tag":441,"props":10801,"children":10802},{"style":588},[10803],{"type":35,"value":10804}," output/1718453390/final.mp4",{"type":29,"tag":441,"props":10806,"children":10807},{"style":556},[10808],{"type":35,"value":10809}," -crf",{"type":29,"tag":441,"props":10811,"children":10812},{"style":556},[10813],{"type":35,"value":10814}," 10",{"type":29,"tag":441,"props":10816,"children":10817},{"style":556},[10818],{"type":35,"value":10819}," -vf",{"type":29,"tag":441,"props":10821,"children":10822},{"style":588},[10823],{"type":35,"value":10824}," \"minterpolate=fps=14:mi_mode=mci:mc_mode=aobmc:me_mode=bidir:vsbmc=1\"",{"type":29,"tag":441,"props":10826,"children":10827},{"style":588},[10828],{"type":35,"value":10829}," output/1718453390/final.14fps.mp4\n",{"type":29,"tag":38,"props":10831,"children":10832},{},[10833,10835,10841,10843,10849],{"type":35,"value":10834},"Finally, the ",{"type":29,"tag":427,"props":10836,"children":10838},{"className":10837},[],[10839],{"type":35,"value":10840},"editor_agent",{"type":35,"value":10842}," uses ",{"type":29,"tag":427,"props":10844,"children":10846},{"className":10845},[],[10847],{"type":35,"value":10848},"moviepy",{"type":35,"value":10850}," to join the clips together into a single video.",{"type":29,"tag":71,"props":10852,"children":10854},{"id":10853},"development-environment",[10855],{"type":35,"value":10856},"Development environment",{"type":29,"tag":38,"props":10858,"children":10859},{},[10860,10862,10868,10870,10876],{"type":35,"value":10861},"I struggled to optimize the ",{"type":29,"tag":427,"props":10863,"children":10865},{"className":10864},[],[10866],{"type":35,"value":10867},"meta-llama/Meta-Llama-3-8B-Instruct",{"type":35,"value":10869}," with TensorRT-LLM, so I ran LLM inference on a combination of older Llama2 TensorRT-LLM models, and ",{"type":29,"tag":427,"props":10871,"children":10873},{"className":10872},[],[10874],{"type":35,"value":10875},"Meta-Llama-3-8B-Instruct",{"type":35,"value":10877}," on LM Studio (which I found to be painfully slow compared to TensorRT-LLM).",{"type":29,"tag":38,"props":10879,"children":10880},{},[10881,10883,10889,10891,10897,10899,10905,10907,10914,10916,10921],{"type":35,"value":10882},"If you provide an ",{"type":29,"tag":427,"props":10884,"children":10886},{"className":10885},[],[10887],{"type":35,"value":10888},"NVIDIA_API_KEY",{"type":35,"value":10890}," in the ",{"type":29,"tag":427,"props":10892,"children":10894},{"className":10893},[],[10895],{"type":35,"value":10896},".env",{"type":35,"value":10898}," file, LLM calls will be made using the ",{"type":29,"tag":427,"props":10900,"children":10902},{"className":10901},[],[10903],{"type":35,"value":10904},"meta/llam3-70b-instruct",{"type":35,"value":10906}," model on ",{"type":29,"tag":57,"props":10908,"children":10911},{"href":10909,"rel":10910},"https://build.nvidia.com/meta/llama3-70b",[60],[10912],{"type":35,"value":10913},"build.nvidia.com/meta/llama3-70b",{"type":35,"value":10915},". In fact, ",{"type":29,"tag":427,"props":10917,"children":10919},{"className":10918},[],[10920],{"type":35,"value":3795},{"type":35,"value":10922}," also provides stable diffusion and stable video diffusion inference via API. This would be very convenient in the event that my RTX PCs become compromised.",{"type":29,"tag":38,"props":10924,"children":10925},{},[10926],{"type":35,"value":10927},"My RTX 4090 GPU with 24 GB of memory was able to run lots of different inference servers concurrently (LLM, Stable Diffusion WebUI, ComfyUI, InvokeAI, Stable Video Diffusion FastAPI service), but I generally stuck to doing one type of inference at a time, otherwise things would grind to a hault or crash. I also experimented with ChatTTS, a new text-to-speech model.",{"type":29,"tag":38,"props":10929,"children":10930},{},[10931],{"type":35,"value":10932},"I developed this project on a MacBook Pro, and I used my RTX PC as if it were a remote service providing inference for text, images and video. This is a helpful mindset when working with hybrid AI workflows that leverage inference services both on local machines and in the cloud.",{"type":29,"tag":71,"props":10934,"children":10936},{"id":10935},"how-it-works",[10937],{"type":35,"value":10938},"How it works",{"type":29,"tag":38,"props":10940,"children":10941},{},[10942,10944,10950],{"type":35,"value":10943},"To run the program, you need to install python dependencies and then run an OpenAI compatible LLM and Stable Duffsion WebUI server with the ",{"type":29,"tag":427,"props":10945,"children":10947},{"className":10946},[],[10948],{"type":35,"value":10949},"--api",{"type":35,"value":10951}," flag. You also need to run the Stable Video Diffusion service. Apologies for any hardcoded local IP address in the source code. Deadlines, you know! With everything configured, you can run the following command:",{"type":29,"tag":514,"props":10953,"children":10955},{"code":10954},"~/git/github/agents-of-inference$ poetry run python agents_of_inference/main.py\n## üìÄ Using local models üìÄ ##\n## üé≠ Generating Cast üé≠ ##\n## üó∫Ô∏è Generating Locations üó∫Ô∏è ##\n## ‚úçÔ∏è Generating Synopsis ‚úçÔ∏è ##\n## going to synopsis_review_agent ##\n## üìë Reviewing Synopsis üìë ##\n## ‚úçÔ∏è Generating Synopsis ‚úçÔ∏è ##\n## going to synopsis_review_agent ##\n## üìë Reviewing Synopsis üìë ##\n## ‚úçÔ∏è Generating Synopsis ‚úçÔ∏è ##\n## going to scene_agent ##\n## üìí Generating Scenes üìí ##\n## üé¨ Generating Shots üé¨ ##\n## Generated 5 shots for scene 1/5 ##\n## Generated 5 shots for scene 2/5 ##\n## Generated 5 shots for scene 3/5 ##\n## Generated 5 shots for scene 4/5 ##\n## Generated 5 shots for scene 5/5 ##\n\n000/0025\nA medium shot of a bustling Tokyo street, with neon lights reflecting off wet pavement. Jim Thompson, dressed in a black leather jacket and dark jeans, walks purposefully through the crowd, his piercing blue eyes scanning the area. The sound design features the hum of traffic and chatter of pedestrians.\nGenerated image output/1718426686/images/000.png\n\n001/0025\nA tight close-up shot of Emily Chen's face, her piercing brown eyes intense as she briefs Jim on the situation. Her short black hair is styled neatly, and she wears a crisp white blouse with a silver necklace. The camera lingers on her lips as she speaks, emphasizing the importance of the information.\nGenerated image output/1718426686/images/001.png\n\nGenerated video output/1718426686/videos/000.mp4\n== stable video diffusion generation complete ==\nGenerated video output/1718426686/videos/001.mp4\n== stable video diffusion generation complete ==\n",[10956],{"type":29,"tag":427,"props":10957,"children":10958},{"__ignoreMap":8},[10959],{"type":35,"value":10954},{"type":29,"tag":71,"props":10961,"children":10963},{"id":10962},"demo-video-for-contest-submission",[10964],{"type":35,"value":10965},"Demo Video for Contest Submission",{"type":29,"tag":10967,"props":10968,"children":10969},"agents-of-inference-video",{},[],{"type":29,"tag":38,"props":10971,"children":10972},{},[10973],{"type":35,"value":10974},"Making this video was a lot of fun. The \"Agents of Inference\" highlight reel includes some of the most interesting, exciting and fun clips that I found in the dozens of short films it created. It is important to note that a lot of the content is not very good. Misunderstood prompts, color confusion (prompt includes green eyes, but other things in the scene are also conspicuously green), unrealistic or noisy motion from Stable Video Diffusion--these are some of the issues you will find in the films. Generating AI images sometimes feels like panning for gold: you go through a lot of sediment to get a few good flakes.",{"type":29,"tag":38,"props":10976,"children":10977},{},[10978],{"type":35,"value":10979},"Also, I added a few short animations that I made with Blender. The final scene shows the NVIDIA Omniverse orange humanoid from the barrel of a pistol. I think we are rapidly approaching a future where agents can generate full-scale theatrical movies by generating OpenUSD code, directly or indirectly. Maybe for the next NVIDIA Developer contest!",{"type":29,"tag":71,"props":10981,"children":10983},{"id":10982},"shortcomings-of-my-project",[10984],{"type":35,"value":10985},"Shortcomings of my project",{"type":29,"tag":38,"props":10987,"children":10988},{},[10989],{"type":35,"value":10990},"My goodness, how embarrasing. There are quite a few shortcomings that can be easily identified looking over the output and the source code. Here are a few:",{"type":29,"tag":123,"props":10992,"children":10994},{"id":10993},"character-variety",[10995],{"type":35,"value":10996},"Character variety",{"type":29,"tag":38,"props":10998,"children":10999},{},[11000],{"type":35,"value":11001},"When generating characters I would frequently see one named Dr. Sophia Patel who is apparently a brilliant cryptologist. Other characters would often have different names or backgrounds, but a saw Dr. Sophia Patel more often than not.",{"type":29,"tag":123,"props":11003,"children":11005},{"id":11004},"character-consistency",[11006],{"type":35,"value":11007},"Character consistency",{"type":29,"tag":38,"props":11009,"children":11010},{},[11011],{"type":35,"value":11012},"The characters are not consistent. This is a notoriously difficult problem to solve, but I made a lot of progress on it during this contest. I experimented with calling the ComfyUI API to run a custom workflow built with the ComfyUI graph-based workflow tool for face transfer:",{"type":29,"tag":38,"props":11014,"children":11015},{},[11016],{"type":29,"tag":192,"props":11017,"children":11020},{"alt":11018,"src":11019},"Dr. Sophia Patel","/static/aoi/sophia.png",[],{"type":29,"tag":38,"props":11022,"children":11023},{},[11024],{"type":35,"value":11025},"Using ComfyUI would be nice, but it wouldn't be as easy to tap into cloud APIs if my workflow heavily relied on ComfyUI server with custom models.",{"type":29,"tag":123,"props":11027,"children":11029},{"id":11028},"understanding-langchain",[11030],{"type":35,"value":11031},"Understanding LangChain",{"type":29,"tag":38,"props":11033,"children":11034},{},[11035,11037,11042],{"type":35,"value":11036},"I started out with the idea I would store all LLM calls to a local JSON to serve as a cache, allowing me to avoid regenerating responses from early in the workflow. This worked well, until I tried to serialize an Annotated list (required for cycles such as the one used with ",{"type":29,"tag":427,"props":11038,"children":11040},{"className":11039},[],[11041],{"type":35,"value":10527},{"type":35,"value":11043},"). I ended up wasting a lot of time trying to figure this out, and I came across some built-in LangChain features for storing state in memory and in Sqlite. I'm sure there are other areas where I used the wrong pattern, but I turned over a lot of stones and look forward to continuing development with LangChain.",{"type":29,"tag":71,"props":11045,"children":11046},{"id":3584},[11047],{"type":35,"value":11048},"What's next?",{"type":29,"tag":38,"props":11050,"children":11051},{},[11052],{"type":35,"value":11053},"Thank you to NVIDIA and LangChain for organizing this contest. It was a great way to explore a powerful toolset for automated content generation using AI agents.",{"type":29,"tag":38,"props":11055,"children":11056},{},[11057],{"type":35,"value":11058},"Video models like Dream Machine and Sora have made some big splashes on the internet and the results are remarkable. However, I'm still almost more interested in finding the limitations of quality content using open-source models on consumer hardware like RTX GPUs.",{"type":29,"tag":38,"props":11060,"children":11061},{},[11062],{"type":35,"value":11063},"I would also have loved to generate my own music for these films. I am a Suno poweruser and love the songs I have generated on that site. Will the gap between video and music generation on private, payed services and local machines? Or does it just need time to catch up? Hopefully a future installment of \"Agents of Inference\" will integrate music and voice, and can't wait to hear it!",{"type":29,"tag":3594,"props":11065,"children":11066},{},[11067],{"type":35,"value":3598},{"title":8,"searchDepth":542,"depth":542,"links":11069},[11070,11071,11072,11073,11074,11080,11081,11082,11083,11088],{"id":9630,"depth":542,"text":9633},{"id":9214,"depth":542,"text":9217},{"id":9674,"depth":542,"text":9677},{"id":9685,"depth":542,"text":9688},{"id":9696,"depth":542,"text":9699,"children":11075},[11076,11077,11078,11079],{"id":9763,"depth":562,"text":9766},{"id":10404,"depth":562,"text":10407},{"id":10559,"depth":562,"text":10562},{"id":10649,"depth":562,"text":10652},{"id":10853,"depth":542,"text":10856},{"id":10935,"depth":542,"text":10938},{"id":10962,"depth":542,"text":10965},{"id":10982,"depth":542,"text":10985,"children":11084},[11085,11086,11087],{"id":10993,"depth":562,"text":10996},{"id":11004,"depth":562,"text":11007},{"id":11028,"depth":562,"text":11031},{"id":3584,"depth":542,"text":11048},"content:2024:06:17:agents-of-inference-nvidia-and-langchain-generative-ai-agent-developer-contest.md","2024/06/17/agents-of-inference-nvidia-and-langchain-generative-ai-agent-developer-contest.md","2024/06/17/agents-of-inference-nvidia-and-langchain-generative-ai-agent-developer-contest",{"_path":11093,"_dir":9619,"_draft":7,"_partial":7,"_locale":8,"title":11094,"description":11095,"date":11096,"image":11097,"tags":11098,"external":11102,"comments":24,"body":11110,"_type":3618,"_id":13329,"_source":3620,"_file":13330,"_stem":13331,"_extension":3623},"/2024/02/17/rocket-league-botchat-nvidia-generative-ai-on-rtx-pcs-developer-contest","Rocket League BotChat powered by TensorRT-LLM: My submission for NVIDIA's Generative AI on RTX PCs Developer Contest","This article discusses my entry for NVIDIA's Generative AI on RTX PCs Developer Contest: Rocket Leauge BotChat","2024-02-17","/static/rlbc/cover.png",[14,9199,9200,3634,15,17,9202,11099,11100,11101],"rocket-league","gaming","windows",[11103,11105,11108],{"link":11104,"site":23},"https://twitter.com/briancaffey/status/1760529251072118901",{"link":11106,"site":11107},"https://www.reddit.com/r/RocketLeague/comments/1au0po3/rocket_league_botchat_an_llmpowered_bakkesmod/","reddit",{"link":11109,"site":3642},"https://dev.to/briancaffey/rocket-league-botchat-powered-by-tensorrt-llm-my-submission-for-nvidias-generative-ai-on-rtx-pcs-developer-contest-2oao",{"type":26,"children":11111,"toc":13306},[11112,11116,11121,11125,11129,11141,11147,11152,11160,11165,11170,11175,11180,11188,11193,11198,11206,11214,11219,11227,11232,11237,11242,11247,11255,11259,11264,11373,11394,11407,11442,11447,11460,11489,11494,11506,11511,11637,11658,11666,11687,11733,11738,11771,11775,11780,11788,11857,11863,11875,12169,12175,12180,12311,12324,12329,12337,12349,12354,12359,12367,12371,12383,12389,12402,12556,12562,12575,12767,12773,12778,12843,12855,12888,12901,12907,12912,12920,12926,12931,13096,13117,13123,13128,13133,13138,13142,13146,13151,13159,13211,13219,13227,13235,13244,13248,13260,13265,13270,13283,13287,13292,13297,13302],{"type":29,"tag":71,"props":11113,"children":11114},{"id":9214},[11115],{"type":35,"value":9217},{"type":29,"tag":38,"props":11117,"children":11118},{},[11119],{"type":35,"value":11120},"This article is about my submission to NVIDIA's Generative AI on RTX PCs Developer Contest: Rocket League BotChat. Rocket League BotChat is a BakkesMod plugin for Rocket League that allows bots to send chat messages based on in-game events. It is designed to be used with a local LLM service optimized and accelerated with NVIDIA's TensorRT-LLM library.",{"type":29,"tag":38,"props":11122,"children":11123},{},[11124],{"type":35,"value":9658},{"type":29,"tag":11126,"props":11127,"children":11128},"rocket-league-bot-chat-tweet",{},[],{"type":29,"tag":38,"props":11130,"children":11131},{},[11132,11133,11140],{"type":35,"value":9244},{"type":29,"tag":57,"props":11134,"children":11137},{"href":11135,"rel":11136},"https://github.com/briancaffey/RocketLeagueBotChat",[60],[11138],{"type":35,"value":11139},"Rocket League BotChat GitHub repository",{"type":35,"value":3764},{"type":29,"tag":71,"props":11142,"children":11144},{"id":11143},"nvidias-gen-ai-developer-contest",[11145],{"type":35,"value":11146},"NVIDIA's Gen AI Developer Contest",{"type":29,"tag":38,"props":11148,"children":11149},{},[11150],{"type":35,"value":11151},"The following email caught my attention last month:",{"type":29,"tag":6518,"props":11153,"children":11154},{},[11155],{"type":29,"tag":38,"props":11156,"children":11157},{},[11158],{"type":35,"value":11159},"Generative AI on RTX PCs Developer Contest: Build your next innovative Gen AI project using NVIDIA TensorRT or TensorRT-LLM on Windows PC with NVIDIA RTX systems",{"type":29,"tag":38,"props":11161,"children":11162},{},[11163],{"type":35,"value":11164},"The part about ‚Äúon Windows PC‚Äù made me think: why would a developer contest focus on a particular operating system? I use all three of the major operating systems: macOS, Ubuntu and Windows 11, but most of the development work I do is on macOS and Ubuntu. I discovered WSL (Windows Subsystem for Linux) a few years ago and really enjoy using that for development as well, but I had never considered doing development work on Windows outside of WSL. I had also never used any of the Windows-specific development frameworks like .NET or Visual Studio.",{"type":29,"tag":38,"props":11166,"children":11167},{},[11168],{"type":35,"value":11169},"My experience with Windows goes back to 2016 when I built my fist PC with an NVIDIA GeForce GTX 1080 graphics card. When I built another personal computer last year in 2023, getting the NVIDIA GeForce RTX 4090 graphics card was a big step up. I bought two NVMe drives in order to dual boot into both Windows and Ubuntu operating systems. Switching between the operating systems requires turning off the computer, going into the BIOS settings and changing the boot order and restarting the computer.",{"type":29,"tag":38,"props":11171,"children":11172},{},[11173],{"type":35,"value":11174},"Last year I started learning more about AI image generation using Stable Diffusion with programs like Automatic1111, InvokeAI and ComfyUI. I set up everything on my PC's Ubuntu operating system, and frequently had to switch between using Ubuntu for working with stable diffusion and Windows for gaming and other Windows-specific software. The friction of having to constantly switch operating systems pushed me to move my stable diffusion software workflows to Windows. All of my models and images are stored to external drives, so moving things over to Windows was pretty easy.",{"type":29,"tag":38,"props":11176,"children":11177},{},[11178],{"type":35,"value":11179},"I learned PowerShell and got more familiar with how Windows works as a development machine. Environment variables and system variables are one example of how Windows does things differently compared ot Linux-based operating systems. And just like that, I became a Windows developer! This experience got me interested in coming up with an idea for the NVIDIA Generative AI on NVIDIA RTX PCs Developer Contest.",{"type":29,"tag":38,"props":11181,"children":11182},{},[11183],{"type":29,"tag":192,"props":11184,"children":11187},{"alt":11185,"src":11186},"Windows winfetch screenshot","/static/rlbc/winfetch.png",[],{"type":29,"tag":71,"props":11189,"children":11190},{"id":9685},[11191],{"type":35,"value":11192},"Coming up with an Idea",{"type":29,"tag":38,"props":11194,"children":11195},{},[11196],{"type":35,"value":11197},"The contest description and some related NVIDIA articles about the contest helped me with brainstorming:",{"type":29,"tag":6518,"props":11199,"children":11200},{},[11201],{"type":29,"tag":38,"props":11202,"children":11203},{},[11204],{"type":35,"value":11205},"Whether it‚Äôs a RAG-based chatbot, a plug-in for an existing application, or a code generation tool, the possibilities are endless.",{"type":29,"tag":6518,"props":11207,"children":11208},{},[11209],{"type":29,"tag":38,"props":11210,"children":11211},{},[11212],{"type":35,"value":11213},"Many use cases would benefit from running LLMs locally on Windows PCs, including gaming, creativity, productivity, and developer experiences.",{"type":29,"tag":38,"props":11215,"children":11216},{},[11217],{"type":35,"value":11218},"This contest is focused on NVIDIA's consumer hardware line: GeForce RTX. It has a diverse set of use cases including gaming, crypto mining, VR, simulation software, creative tools and new AI techniques including image generation and LLM (Large Language Model) inference.",{"type":29,"tag":38,"props":11220,"children":11221},{},[11222],{"type":29,"tag":192,"props":11223,"children":11226},{"alt":11224,"src":11225},"A stacked bar chart showing the composition of Nvidia's revenue each quarter going back to fiscal 2019.","https://g.foolcdn.com/image/?url=https%3A%2F%2Fg.foolcdn.com%2Feditorial%2Fimages%2F764886%2Fnvda_revenue_bar.png&op=resize&w=700",[],{"type":29,"tag":38,"props":11228,"children":11229},{},[11230],{"type":35,"value":11231},"Gaming seemed like an interesting avenue for me to explore. PC gaming is still an industry that is developed primarily for Windows operating systems, and the gaming industry has been the largest revenue driver of NVIDIA in recent years, only recently surpassed by the data center segment. GPUs are needed to render graphics of enormous open-world environments. Some story-driven games include huge amounts of dialogue that can be considered as huge literary works in their own right. Red Dead Redemption and Genshin Impact are two massively popular games of this type. There might be an interesting project idea that could use LLMs and RAG (retrieval augmented generation), but I don't play these types of games and it didn't seem practical for a project that would be built in just over a month. I thought about trying to build something for a simpler game that I already know.",{"type":29,"tag":38,"props":11233,"children":11234},{},[11235],{"type":35,"value":11236},"Rocket League is a vehicular soccer game that is played on both game consoles and on PCs. It is an eSports with a very high skill ceiling and a massive player base (85 million active players in the last 30 days). I started playing it during the pandemic with some of my friends and all got hooked. We also came to learn that Rocket League's in-game is varies from entertaining, annoying, toxic and in some cases, sportsmanlike.",{"type":29,"tag":38,"props":11238,"children":11239},{},[11240],{"type":35,"value":11241},"One other thing I learned about Rocket League is that it has an active modding community. Developers create plugins for the game for all different purposes, such as coaching, practice drills, capturing replays, tracking player statistics, etc. Most Rocket League Mods are written in a popular framework called Bakkesmod (developed Andreas \"bakkes\" Bakke, a Norwegian software engineer). Rocket League's in-game chat inspired the idea for my submission to NVIDIA's Generative AI Developer Contest: Rocket League BotChat. The idea for my project is to build a plugin with Bakkesmod that allows Rocket League bots to send chat messages based on game events using an LLM accelerated and optimized by TensorRT-LLM (more on TensorRT-LLM soon!)",{"type":29,"tag":38,"props":11243,"children":11244},{},[11245],{"type":35,"value":11246},"Bots are built into the Rocket League game and you can play with or against them in offline matches. However, the built-in bots are not very good. Another 3rd-party project called RLBot allows players to play against community-developed AI bots that are developed with machine learning frameworks like TensorFlow and PyTorch. These bots are very good, but they are not infallible. My contest project idea was now clear: develop a plugin for Rocket League capable of sending messages from bot players. This idea seemed to check the boxes for the large language model category of NVIDIA's developer contest: develop a project in a Windows environment for a Windows-specific program, and use an LLM powered by TensorRT-LLM.",{"type":29,"tag":38,"props":11248,"children":11249},{},[11250],{"type":29,"tag":192,"props":11251,"children":11254},{"alt":11252,"src":11253},"RLBot Ascii Art","/static/rlbc/bot.png",[],{"type":29,"tag":71,"props":11256,"children":11257},{"id":9696},[11258],{"type":35,"value":9699},{"type":29,"tag":38,"props":11260,"children":11261},{},[11262],{"type":35,"value":11263},"With this idea in mind, I looked into the project's feasibility. I really had no idea if this would work. I looked through the Bakkesmod documentation and found some helpful resources that gave me confidence that I could pull something together for at least a proof-of-concept.",{"type":29,"tag":88,"props":11265,"children":11266},{},[11267,11313,11332,11343],{"type":29,"tag":92,"props":11268,"children":11269},{},[11270,11272,11278],{"type":35,"value":11271},"The Bakkesmod Plugin Wiki ",{"type":29,"tag":57,"props":11273,"children":11276},{"href":11274,"rel":11275},"https://wiki.bakkesplugins.com/",[60],[11277],{"type":35,"value":11274},{"type":29,"tag":88,"props":11279,"children":11280},{},[11281,11297],{"type":29,"tag":92,"props":11282,"children":11283},{},[11284,11295],{"type":29,"tag":57,"props":11285,"children":11288},{"href":11286,"rel":11287},"https://wiki.bakkesplugins.com/code_snippets/using_http_wrapper/",[60],[11289],{"type":29,"tag":427,"props":11290,"children":11292},{"className":11291},[],[11293],{"type":35,"value":11294},"HttpWrapper",{"type":35,"value":11296}," for sending HTTP requests from Bakkesmod",{"type":29,"tag":92,"props":11298,"children":11299},{},[11300,11311],{"type":29,"tag":57,"props":11301,"children":11304},{"href":11302,"rel":11303},"https://wiki.bakkesplugins.com/functions/stat_events/",[60],[11305],{"type":29,"tag":427,"props":11306,"children":11308},{"className":11307},[],[11309],{"type":35,"value":11310},"StatEvents",{"type":35,"value":11312}," that allow for running custom code when specific event functions are triggered in the game (such as scoring a goal, or making a save).",{"type":29,"tag":92,"props":11314,"children":11315},{},[11316,11318,11324],{"type":35,"value":11317},"The Bakkesmod plugin template: ",{"type":29,"tag":57,"props":11319,"children":11322},{"href":11320,"rel":11321},"https://github.com/Martinii89/BakkesmodPluginTemplate",[60],[11323],{"type":35,"value":11320},{"type":29,"tag":88,"props":11325,"children":11326},{},[11327],{"type":29,"tag":92,"props":11328,"children":11329},{},[11330],{"type":35,"value":11331},"This provides a great starting-off point for developing Bakkesmod plugins. Plugins for Bakkesmod are written in C++ and this repo provides an organized file structure that allows your to get started quickly",{"type":29,"tag":92,"props":11333,"children":11334},{},[11335,11337],{"type":35,"value":11336},"Plugin Tutorial: ",{"type":29,"tag":57,"props":11338,"children":11341},{"href":11339,"rel":11340},"https://wiki.bakkesplugins.com/plugin_tutorial/getting_started/",[60],[11342],{"type":35,"value":11339},{"type":29,"tag":92,"props":11344,"children":11345},{},[11346,11348],{"type":35,"value":11347},"Open-source chat-related Bakkesmod plugins on GitHub\n",{"type":29,"tag":88,"props":11349,"children":11350},{},[11351,11362],{"type":29,"tag":92,"props":11352,"children":11353},{},[11354,11356],{"type":35,"value":11355},"BetterChat: ",{"type":29,"tag":57,"props":11357,"children":11360},{"href":11358,"rel":11359},"https://github.com/JulienML/BetterChat",[60],[11361],{"type":35,"value":11358},{"type":29,"tag":92,"props":11363,"children":11364},{},[11365,11367],{"type":35,"value":11366},"Translate: ",{"type":29,"tag":57,"props":11368,"children":11371},{"href":11369,"rel":11370},"https://github.com/0xleft/trnslt",[60],[11372],{"type":35,"value":11369},{"type":29,"tag":38,"props":11374,"children":11375},{},[11376,11378,11384,11386,11392],{"type":35,"value":11377},"Starting with the Plugin Template, I wrote a simple console command that when triggered sends an HTTP request to ",{"type":29,"tag":427,"props":11379,"children":11381},{"className":11380},[],[11382],{"type":35,"value":11383},"localhost:8000/hello",{"type":35,"value":11385},". I set up a Hello World Flask app running on ",{"type":29,"tag":427,"props":11387,"children":11389},{"className":11388},[],[11390],{"type":35,"value":11391},"localhost:8000",{"type":35,"value":11393}," and I was able to get a response from my Hello World server! There didn't seem to be any network or permission errors that would prevent my game code from communicating with other applications on my PC.",{"type":29,"tag":38,"props":11395,"children":11396},{},[11397,11399,11405],{"type":35,"value":11398},"Next I started looking into how to build and run optimized LLMs with NVIDIA's TensorRT-LLM library, the software that this contest is promoting. The contest announcement included an interesting building block that I thought could be very useful: an example repo showing how to run ",{"type":29,"tag":427,"props":11400,"children":11402},{"className":11401},[],[11403],{"type":35,"value":11404},"CodeLlama-13b-instruct-hf",{"type":35,"value":11406}," optimized by TensorRT-LLM to provide inference for a VSCode extension called Continue (Continue.dev).",{"type":29,"tag":88,"props":11408,"children":11409},{},[11410,11420,11432,11437],{"type":29,"tag":92,"props":11411,"children":11412},{},[11413,11418],{"type":29,"tag":427,"props":11414,"children":11416},{"className":11415},[],[11417],{"type":35,"value":11404},{"type":35,"value":11419}," is an open source model from Meta that is trained on code and can help with code generation tasks",{"type":29,"tag":92,"props":11421,"children":11422},{},[11423,11425,11430],{"type":35,"value":11424},"TensorRT-LLM is a Python library that accelerates and optimizes inference performance of large language models. It takes a Large Language Model like ",{"type":29,"tag":427,"props":11426,"children":11428},{"className":11427},[],[11429],{"type":35,"value":11404},{"type":35,"value":11431}," and generates an engine that can be used for doing inference",{"type":29,"tag":92,"props":11433,"children":11434},{},[11435],{"type":35,"value":11436},"VSCode is an open source code editor developed by Microsoft with an large number of community plugins",{"type":29,"tag":92,"props":11438,"children":11439},{},[11440],{"type":35,"value":11441},"Continue.dev is a startup backed by Y Combinator that is developing an open-source autopilot (code assistant) for VSCode and JetBrains that works with local LLMs or paid services like ChatGPT",{"type":29,"tag":38,"props":11443,"children":11444},{},[11445],{"type":35,"value":11446},"To get the coding assistant project working I needed to build the TensorRT-LLM engine. Building TensorRT-LLM engines on Windows can be done in one of two ways:",{"type":29,"tag":88,"props":11448,"children":11449},{},[11450,11455],{"type":29,"tag":92,"props":11451,"children":11452},{},[11453],{"type":35,"value":11454},"using a \"bare-metal\" virtual environment on Windows (with PowerShell)",{"type":29,"tag":92,"props":11456,"children":11457},{},[11458],{"type":35,"value":11459},"using WSL",{"type":29,"tag":38,"props":11461,"children":11462},{},[11463,11465,11471,11473,11479,11481,11487],{"type":35,"value":11464},"At the time of writing, building a TensorRT-LLM engine on Windows can only be done with version ",{"type":29,"tag":427,"props":11466,"children":11468},{"className":11467},[],[11469],{"type":35,"value":11470},"v0.6.1",{"type":35,"value":11472}," of the TensorRT-LLM repo and version ",{"type":29,"tag":427,"props":11474,"children":11476},{"className":11475},[],[11477],{"type":35,"value":11478},"v0.7.1",{"type":35,"value":11480}," of the ",{"type":29,"tag":427,"props":11482,"children":11484},{"className":11483},[],[11485],{"type":35,"value":11486},"tensorrt_llm",{"type":35,"value":11488}," Python package.",{"type":29,"tag":38,"props":11490,"children":11491},{},[11492],{"type":35,"value":11493},"With WSL you can use the up-to-date versions of the TensorRT-LLM repo (main branch). The engines produced by Windows and WSL (Ubuntu) are not interchangeable and you will get errors if you try to use an engine created with one operating system on another operating system.",{"type":29,"tag":38,"props":11495,"children":11496},{},[11497,11499,11504],{"type":35,"value":11498},"Once the engines are built you can use them to run the example from the ",{"type":29,"tag":427,"props":11500,"children":11502},{"className":11501},[],[11503],{"type":35,"value":9372},{"type":35,"value":11505}," repo.",{"type":29,"tag":38,"props":11507,"children":11508},{},[11509],{"type":35,"value":11510},"The example repo exposes an OpenAI-compatible API locally that can do chat completions. You then need to configure the Continue.dev extension to use the local LLM service:",{"type":29,"tag":514,"props":11512,"children":11516},{"code":11513,"language":11514,"meta":8,"className":11515,"style":8},"{\n  \"title\": \"CodeLlama-13b-instruct-hf\",\n  \"apiBase\": \"http://192.168.5.96:5000/\",\n  \"provider\": \"openai\",\n  \"apiKey\": \"None\",\n  \"model\": \"gpt-4\"\n}\n","json","language-json shiki shiki-themes github-light github-dark monokai",[11517],{"type":29,"tag":427,"props":11518,"children":11519},{"__ignoreMap":8},[11520,11527,11549,11570,11591,11612,11629],{"type":29,"tag":441,"props":11521,"children":11522},{"class":525,"line":526},[11523],{"type":29,"tag":441,"props":11524,"children":11525},{"style":536},[11526],{"type":35,"value":5345},{"type":29,"tag":441,"props":11528,"children":11529},{"class":525,"line":542},[11530,11535,11539,11545],{"type":29,"tag":441,"props":11531,"children":11532},{"style":2303},[11533],{"type":35,"value":11534},"  \"title\"",{"type":29,"tag":441,"props":11536,"children":11537},{"style":536},[11538],{"type":35,"value":553},{"type":29,"tag":441,"props":11540,"children":11542},{"style":11541},"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#CFCFC2",[11543],{"type":35,"value":11544},"\"CodeLlama-13b-instruct-hf\"",{"type":29,"tag":441,"props":11546,"children":11547},{"style":536},[11548],{"type":35,"value":4775},{"type":29,"tag":441,"props":11550,"children":11551},{"class":525,"line":562},[11552,11557,11561,11566],{"type":29,"tag":441,"props":11553,"children":11554},{"style":2303},[11555],{"type":35,"value":11556},"  \"apiBase\"",{"type":29,"tag":441,"props":11558,"children":11559},{"style":536},[11560],{"type":35,"value":553},{"type":29,"tag":441,"props":11562,"children":11563},{"style":11541},[11564],{"type":35,"value":11565},"\"http://192.168.5.96:5000/\"",{"type":29,"tag":441,"props":11567,"children":11568},{"style":536},[11569],{"type":35,"value":4775},{"type":29,"tag":441,"props":11571,"children":11572},{"class":525,"line":575},[11573,11578,11582,11587],{"type":29,"tag":441,"props":11574,"children":11575},{"style":2303},[11576],{"type":35,"value":11577},"  \"provider\"",{"type":29,"tag":441,"props":11579,"children":11580},{"style":536},[11581],{"type":35,"value":553},{"type":29,"tag":441,"props":11583,"children":11584},{"style":11541},[11585],{"type":35,"value":11586},"\"openai\"",{"type":29,"tag":441,"props":11588,"children":11589},{"style":536},[11590],{"type":35,"value":4775},{"type":29,"tag":441,"props":11592,"children":11593},{"class":525,"line":594},[11594,11599,11603,11608],{"type":29,"tag":441,"props":11595,"children":11596},{"style":2303},[11597],{"type":35,"value":11598},"  \"apiKey\"",{"type":29,"tag":441,"props":11600,"children":11601},{"style":536},[11602],{"type":35,"value":553},{"type":29,"tag":441,"props":11604,"children":11605},{"style":11541},[11606],{"type":35,"value":11607},"\"None\"",{"type":29,"tag":441,"props":11609,"children":11610},{"style":536},[11611],{"type":35,"value":4775},{"type":29,"tag":441,"props":11613,"children":11614},{"class":525,"line":607},[11615,11620,11624],{"type":29,"tag":441,"props":11616,"children":11617},{"style":2303},[11618],{"type":35,"value":11619},"  \"model\"",{"type":29,"tag":441,"props":11621,"children":11622},{"style":536},[11623],{"type":35,"value":553},{"type":29,"tag":441,"props":11625,"children":11626},{"style":11541},[11627],{"type":35,"value":11628},"\"gpt-4\"\n",{"type":29,"tag":441,"props":11630,"children":11631},{"class":525,"line":631},[11632],{"type":29,"tag":441,"props":11633,"children":11634},{"style":536},[11635],{"type":35,"value":11636},"}\n",{"type":29,"tag":38,"props":11638,"children":11639},{},[11640,11642,11647,11649,11656],{"type":35,"value":11641},"The Continue.dev extension using ",{"type":29,"tag":427,"props":11643,"children":11645},{"className":11644},[],[11646],{"type":35,"value":11404},{"type":35,"value":11648}," accelerated and optimized by TensorRT-LLM is very fast. According to ",{"type":29,"tag":57,"props":11650,"children":11653},{"href":11651,"rel":11652},"https://blog.continue.dev/programming-languages/",[60],[11654],{"type":35,"value":11655},"this post on Continue.dev's blog",{"type":35,"value":11657},", C++ is a \"first tier\" language:",{"type":29,"tag":6518,"props":11659,"children":11660},{},[11661],{"type":29,"tag":38,"props":11662,"children":11663},{},[11664],{"type":35,"value":11665},"C++ has one of the largest presences on GitHub and Stack Overflow. This shows up in its representation in public LLM datasets, where it is one of the languages with the most data. Its performance is near the top of the MultiPL-E, BabelCode / TP3, MBXP / Multilingual HumanEval, and HumanEval-X benchmarks. However, given that C++ is often used when code performance and exact algorithm implementation is very important, many developers don‚Äôt believe that LLMs are as helpful for C++ as some of the other languages in this tier.",{"type":29,"tag":38,"props":11667,"children":11668},{},[11669,11671,11677,11679,11685],{"type":35,"value":11670},"Most of the time I'm working with either Python and TypeScript. I've read about C++ but haven't used it for anything before doing this project. I primarily used Microsoft Visual Studio to build the plugin, but VSCode with the Continue.dev autopilot extension was helpful for tackling smaller problems in a REPL-like environment. For example, I used Continue.dev in VSCode to figure out how to handle JSON. Coming from Python and JavaScript languages, I found the ",{"type":29,"tag":427,"props":11672,"children":11674},{"className":11673},[],[11675],{"type":35,"value":11676},"nlohmann/json",{"type":35,"value":11678}," JSON library syntax to be somewhat different. For example, here is how to add a message to ",{"type":29,"tag":427,"props":11680,"children":11682},{"className":11681},[],[11683],{"type":35,"value":11684},"messages",{"type":35,"value":11686}," in the body of an OpenAI API request:",{"type":29,"tag":514,"props":11688,"children":11692},{"code":11689,"language":11690,"meta":8,"className":11691,"style":8},"messages.push_back({ {\"role\", role}, {\"content\", content } });\n","cpp","language-cpp shiki shiki-themes github-light github-dark monokai",[11693],{"type":29,"tag":427,"props":11694,"children":11695},{"__ignoreMap":8},[11696],{"type":29,"tag":441,"props":11697,"children":11698},{"class":525,"line":526},[11699,11704,11709,11714,11719,11724,11728],{"type":29,"tag":441,"props":11700,"children":11701},{"style":536},[11702],{"type":35,"value":11703},"messages.",{"type":29,"tag":441,"props":11705,"children":11706},{"style":2060},[11707],{"type":35,"value":11708},"push_back",{"type":29,"tag":441,"props":11710,"children":11711},{"style":536},[11712],{"type":35,"value":11713},"({ {",{"type":29,"tag":441,"props":11715,"children":11716},{"style":588},[11717],{"type":35,"value":11718},"\"role\"",{"type":29,"tag":441,"props":11720,"children":11721},{"style":536},[11722],{"type":35,"value":11723},", role}, {",{"type":29,"tag":441,"props":11725,"children":11726},{"style":588},[11727],{"type":35,"value":4556},{"type":29,"tag":441,"props":11729,"children":11730},{"style":536},[11731],{"type":35,"value":11732},", content } });\n",{"type":29,"tag":38,"props":11734,"children":11735},{},[11736],{"type":35,"value":11737},"In Python the code for appending a message to a list of messages would be written differently:",{"type":29,"tag":514,"props":11739,"children":11741},{"code":11740,"language":2049,"meta":8,"className":2050,"style":8},"messages.append({\"role\": role, \"content\": content})\n",[11742],{"type":29,"tag":427,"props":11743,"children":11744},{"__ignoreMap":8},[11745],{"type":29,"tag":441,"props":11746,"children":11747},{"class":525,"line":526},[11748,11753,11757,11762,11766],{"type":29,"tag":441,"props":11749,"children":11750},{"style":536},[11751],{"type":35,"value":11752},"messages.append({",{"type":29,"tag":441,"props":11754,"children":11755},{"style":588},[11756],{"type":35,"value":11718},{"type":29,"tag":441,"props":11758,"children":11759},{"style":536},[11760],{"type":35,"value":11761},": role, ",{"type":29,"tag":441,"props":11763,"children":11764},{"style":588},[11765],{"type":35,"value":4556},{"type":29,"tag":441,"props":11767,"children":11768},{"style":536},[11769],{"type":35,"value":11770},": content})\n",{"type":29,"tag":71,"props":11772,"children":11773},{"id":10853},[11774],{"type":35,"value":10856},{"type":29,"tag":38,"props":11776,"children":11777},{},[11778],{"type":35,"value":11779},"While working on different projects using web technologies and frameworks in the Python and JavaScript ecosystems, I developed an appreciation for well-structured development environments that are easy to use. Development environment refers to the tools and processes by which a developer can make a change to source code and see these changes reflected in some version of the application running on a local environment. The local environment (the developer's computer) should be a close proxy for the production environment where the code will ultimately deployed to for end users. For this project the local development environment is our PC itself, which simplifies things. A development environment should support hot-reloading so incremental changes can be run to test functionality, offering a tight feedback loop. I really like the development environment for this project. Here's a screenshot that shows the different parts of the development environment I used for working on Rocket League BotChat:",{"type":29,"tag":38,"props":11781,"children":11782},{},[11783],{"type":29,"tag":192,"props":11784,"children":11787},{"alt":11785,"src":11786},"Screenshot of Rocket League BotChat development environment","/static/rlbc/devenv2.png",[],{"type":29,"tag":88,"props":11789,"children":11790},{},[11791,11804,11832,11845],{"type":29,"tag":92,"props":11792,"children":11793},{},[11794,11796,11802],{"type":35,"value":11795},"Rocket League (running with the ",{"type":29,"tag":427,"props":11797,"children":11799},{"className":11798},[],[11800],{"type":35,"value":11801},"-dev",{"type":35,"value":11803}," flag turned on). The console is helpful for viewing log messages and the plugin settings panel can be used to view and change plugin configuration values. The BakkesMod plugin also needs to be running in order to inject plugin code into the game engine",{"type":29,"tag":92,"props":11805,"children":11806},{},[11807,11809,11815,11817,11823,11824,11830],{"type":35,"value":11808},"Visual Studio for working on the plugin code. ",{"type":29,"tag":427,"props":11810,"children":11812},{"className":11811},[],[11813],{"type":35,"value":11814},"Control",{"type":35,"value":11816},"+",{"type":29,"tag":427,"props":11818,"children":11820},{"className":11819},[],[11821],{"type":35,"value":11822},"Shift",{"type":35,"value":11816},{"type":29,"tag":427,"props":11825,"children":11827},{"className":11826},[],[11828],{"type":35,"value":11829},"B",{"type":35,"value":11831}," rebuilds the code and automatically reloads the plugin in the game",{"type":29,"tag":92,"props":11833,"children":11834},{},[11835,11837,11843],{"type":35,"value":11836},"OpenAI-compatible LLM server powered by TensorRT-LLM (using ",{"type":29,"tag":427,"props":11838,"children":11840},{"className":11839},[],[11841],{"type":35,"value":11842},"Llama-2-13b-chat-hf",{"type":35,"value":11844}," with AWQ INT4 quantization) running in a docker container on Ubuntu in WSL",{"type":29,"tag":92,"props":11846,"children":11847},{},[11848,11850,11855],{"type":35,"value":11849},"VSCode for debugging C++ code with Continue.dev extension powered by TensorRT-LLM (using ",{"type":29,"tag":427,"props":11851,"children":11853},{"className":11852},[],[11854],{"type":35,"value":11404},{"type":35,"value":11856}," with AWQ INT4 quantization) running in a virtual environment on Windows",{"type":29,"tag":123,"props":11858,"children":11860},{"id":11859},"building-the-tensorrt-llm-engines",[11861],{"type":35,"value":11862},"Building the TensorRT-LLM engines",{"type":29,"tag":38,"props":11864,"children":11865},{},[11866,11868,11873],{"type":35,"value":11867},"I was able to build and run the TensorRT LLM engines for my game plugin's inference and the Continue.dev extension's inference both in Python virtual environments on Windows and on Ubuntu in WSL. For building the ",{"type":29,"tag":427,"props":11869,"children":11871},{"className":11870},[],[11872],{"type":35,"value":11842},{"type":35,"value":11874}," model with INT4 AWQ quantization on Windows 11 I used this command:",{"type":29,"tag":514,"props":11876,"children":11880},{"code":11877,"language":11878,"meta":8,"className":11879,"style":8},"(.venv) PS C:\\Users\\My PC\\GitHub\\TensorRT-LLM\\examples\\llama> python build.py --model_dir D:\\llama\\Llama-2-13b-chat-hf\\ --quant_ckpt_path D:\\llama\\Llama-2-13b-chat-hf\\llama_tp1_rank0.npz --dtype float16 --use_gpt_attention_plugin float16 --use_gemm_plugin float16 --use_weight_only --weight_only_precision int4_awq --per_group --enable_context_fmha --max_batch_size 1 --max_input_len 3500 --max_output_len 1024 --output_dir D:\\llama\\Llama-2-13b-chat-hf\\single-gpu\\ --vocab_size 32064\n","powershell","language-powershell shiki shiki-themes github-light github-dark monokai",[11881],{"type":29,"tag":427,"props":11882,"children":11883},{"__ignoreMap":8},[11884],{"type":29,"tag":441,"props":11885,"children":11886},{"class":525,"line":526},[11887,11892,11897,11902,11906,11911,11916,11921,11925,11930,11934,11939,11943,11948,11952,11957,11961,11966,11970,11974,11978,11982,11986,11990,11994,11999,12003,12008,12012,12017,12021,12026,12030,12035,12039,12044,12048,12053,12057,12062,12066,12071,12075,12080,12085,12090,12094,12099,12104,12108,12113,12117,12121,12125,12129,12133,12137,12141,12146,12150,12155,12159,12164],{"type":29,"tag":441,"props":11888,"children":11889},{"style":536},[11890],{"type":35,"value":11891},"(.venv) PS C:\\Users\\My PC\\GitHub\\TensorRT",{"type":29,"tag":441,"props":11893,"children":11894},{"style":2077},[11895],{"type":35,"value":11896},"-",{"type":29,"tag":441,"props":11898,"children":11899},{"style":536},[11900],{"type":35,"value":11901},"LLM\\examples\\llama",{"type":29,"tag":441,"props":11903,"children":11904},{"style":2077},[11905],{"type":35,"value":6038},{"type":29,"tag":441,"props":11907,"children":11908},{"style":536},[11909],{"type":35,"value":11910}," python build.py ",{"type":29,"tag":441,"props":11912,"children":11913},{"style":2077},[11914],{"type":35,"value":11915},"--",{"type":29,"tag":441,"props":11917,"children":11918},{"style":536},[11919],{"type":35,"value":11920},"model_dir D:\\llama\\Llama",{"type":29,"tag":441,"props":11922,"children":11923},{"style":2077},[11924],{"type":35,"value":11896},{"type":29,"tag":441,"props":11926,"children":11927},{"style":556},[11928],{"type":35,"value":11929},"2",{"type":29,"tag":441,"props":11931,"children":11932},{"style":2077},[11933],{"type":35,"value":11896},{"type":29,"tag":441,"props":11935,"children":11936},{"style":536},[11937],{"type":35,"value":11938},"13b",{"type":29,"tag":441,"props":11940,"children":11941},{"style":2077},[11942],{"type":35,"value":11896},{"type":29,"tag":441,"props":11944,"children":11945},{"style":536},[11946],{"type":35,"value":11947},"chat",{"type":29,"tag":441,"props":11949,"children":11950},{"style":2077},[11951],{"type":35,"value":11896},{"type":29,"tag":441,"props":11953,"children":11954},{"style":536},[11955],{"type":35,"value":11956},"hf\\ ",{"type":29,"tag":441,"props":11958,"children":11959},{"style":2077},[11960],{"type":35,"value":11915},{"type":29,"tag":441,"props":11962,"children":11963},{"style":536},[11964],{"type":35,"value":11965},"quant_ckpt_path D:\\llama\\Llama",{"type":29,"tag":441,"props":11967,"children":11968},{"style":2077},[11969],{"type":35,"value":11896},{"type":29,"tag":441,"props":11971,"children":11972},{"style":556},[11973],{"type":35,"value":11929},{"type":29,"tag":441,"props":11975,"children":11976},{"style":2077},[11977],{"type":35,"value":11896},{"type":29,"tag":441,"props":11979,"children":11980},{"style":536},[11981],{"type":35,"value":11938},{"type":29,"tag":441,"props":11983,"children":11984},{"style":2077},[11985],{"type":35,"value":11896},{"type":29,"tag":441,"props":11987,"children":11988},{"style":536},[11989],{"type":35,"value":11947},{"type":29,"tag":441,"props":11991,"children":11992},{"style":2077},[11993],{"type":35,"value":11896},{"type":29,"tag":441,"props":11995,"children":11996},{"style":536},[11997],{"type":35,"value":11998},"hf\\llama_tp1_rank0.npz ",{"type":29,"tag":441,"props":12000,"children":12001},{"style":2077},[12002],{"type":35,"value":11915},{"type":29,"tag":441,"props":12004,"children":12005},{"style":536},[12006],{"type":35,"value":12007},"dtype float16 ",{"type":29,"tag":441,"props":12009,"children":12010},{"style":2077},[12011],{"type":35,"value":11915},{"type":29,"tag":441,"props":12013,"children":12014},{"style":536},[12015],{"type":35,"value":12016},"use_gpt_attention_plugin float16 ",{"type":29,"tag":441,"props":12018,"children":12019},{"style":2077},[12020],{"type":35,"value":11915},{"type":29,"tag":441,"props":12022,"children":12023},{"style":536},[12024],{"type":35,"value":12025},"use_gemm_plugin float16 ",{"type":29,"tag":441,"props":12027,"children":12028},{"style":2077},[12029],{"type":35,"value":11915},{"type":29,"tag":441,"props":12031,"children":12032},{"style":536},[12033],{"type":35,"value":12034},"use_weight_only ",{"type":29,"tag":441,"props":12036,"children":12037},{"style":2077},[12038],{"type":35,"value":11915},{"type":29,"tag":441,"props":12040,"children":12041},{"style":536},[12042],{"type":35,"value":12043},"weight_only_precision int4_awq ",{"type":29,"tag":441,"props":12045,"children":12046},{"style":2077},[12047],{"type":35,"value":11915},{"type":29,"tag":441,"props":12049,"children":12050},{"style":536},[12051],{"type":35,"value":12052},"per_group ",{"type":29,"tag":441,"props":12054,"children":12055},{"style":2077},[12056],{"type":35,"value":11915},{"type":29,"tag":441,"props":12058,"children":12059},{"style":536},[12060],{"type":35,"value":12061},"enable_context_fmha ",{"type":29,"tag":441,"props":12063,"children":12064},{"style":2077},[12065],{"type":35,"value":11915},{"type":29,"tag":441,"props":12067,"children":12068},{"style":536},[12069],{"type":35,"value":12070},"max_batch_size ",{"type":29,"tag":441,"props":12072,"children":12073},{"style":556},[12074],{"type":35,"value":5087},{"type":29,"tag":441,"props":12076,"children":12077},{"style":2077},[12078],{"type":35,"value":12079}," --",{"type":29,"tag":441,"props":12081,"children":12082},{"style":536},[12083],{"type":35,"value":12084},"max_input_len ",{"type":29,"tag":441,"props":12086,"children":12087},{"style":556},[12088],{"type":35,"value":12089},"3500",{"type":29,"tag":441,"props":12091,"children":12092},{"style":2077},[12093],{"type":35,"value":12079},{"type":29,"tag":441,"props":12095,"children":12096},{"style":536},[12097],{"type":35,"value":12098},"max_output_len ",{"type":29,"tag":441,"props":12100,"children":12101},{"style":556},[12102],{"type":35,"value":12103},"1024",{"type":29,"tag":441,"props":12105,"children":12106},{"style":2077},[12107],{"type":35,"value":12079},{"type":29,"tag":441,"props":12109,"children":12110},{"style":536},[12111],{"type":35,"value":12112},"output_dir D:\\llama\\Llama",{"type":29,"tag":441,"props":12114,"children":12115},{"style":2077},[12116],{"type":35,"value":11896},{"type":29,"tag":441,"props":12118,"children":12119},{"style":556},[12120],{"type":35,"value":11929},{"type":29,"tag":441,"props":12122,"children":12123},{"style":2077},[12124],{"type":35,"value":11896},{"type":29,"tag":441,"props":12126,"children":12127},{"style":536},[12128],{"type":35,"value":11938},{"type":29,"tag":441,"props":12130,"children":12131},{"style":2077},[12132],{"type":35,"value":11896},{"type":29,"tag":441,"props":12134,"children":12135},{"style":536},[12136],{"type":35,"value":11947},{"type":29,"tag":441,"props":12138,"children":12139},{"style":2077},[12140],{"type":35,"value":11896},{"type":29,"tag":441,"props":12142,"children":12143},{"style":536},[12144],{"type":35,"value":12145},"hf\\single",{"type":29,"tag":441,"props":12147,"children":12148},{"style":2077},[12149],{"type":35,"value":11896},{"type":29,"tag":441,"props":12151,"children":12152},{"style":536},[12153],{"type":35,"value":12154},"gpu\\ ",{"type":29,"tag":441,"props":12156,"children":12157},{"style":2077},[12158],{"type":35,"value":11915},{"type":29,"tag":441,"props":12160,"children":12161},{"style":536},[12162],{"type":35,"value":12163},"vocab_size ",{"type":29,"tag":441,"props":12165,"children":12166},{"style":556},[12167],{"type":35,"value":12168},"32064\n",{"type":29,"tag":123,"props":12170,"children":12172},{"id":12171},"running-the-tensorrt-llm-engines",[12173],{"type":35,"value":12174},"Running the TensorRT-LLM engines",{"type":29,"tag":38,"props":12176,"children":12177},{},[12178],{"type":35,"value":12179},"Using Windows PowerShell to start the CodeLlama server for Continue.dev:",{"type":29,"tag":514,"props":12181,"children":12183},{"code":12182,"language":11878,"meta":8,"className":11879,"style":8},"(.venv) PS C:\\Users\\My PC\\GitHub\\trt-llm-as-openai-windows> python .\\app.py --trt_engine_path \"D:\\llama\\CodeLlama-13b-Instruct-hf\\trt_engines\\1-gpu\\\" --trt_engine_name llama_float16_tp1_rank0.engine --tokenizer_dir_path \"D:\\llama\\CodeLlama-13b-Instruct-hf\\\" --port 5000 --host 0.0.0.0\n",[12184],{"type":29,"tag":427,"props":12185,"children":12186},{"__ignoreMap":8},[12187],{"type":29,"tag":441,"props":12188,"children":12189},{"class":525,"line":526},[12190,12195,12199,12203,12207,12211,12215,12220,12224,12228,12232,12237,12241,12246,12251,12255,12260,12264,12269,12274,12278,12283,12288,12292,12297,12302,12306],{"type":29,"tag":441,"props":12191,"children":12192},{"style":536},[12193],{"type":35,"value":12194},"(.venv) PS C:\\Users\\My PC\\GitHub\\trt",{"type":29,"tag":441,"props":12196,"children":12197},{"style":2077},[12198],{"type":35,"value":11896},{"type":29,"tag":441,"props":12200,"children":12201},{"style":536},[12202],{"type":35,"value":17},{"type":29,"tag":441,"props":12204,"children":12205},{"style":2077},[12206],{"type":35,"value":11896},{"type":29,"tag":441,"props":12208,"children":12209},{"style":536},[12210],{"type":35,"value":5163},{"type":29,"tag":441,"props":12212,"children":12213},{"style":2077},[12214],{"type":35,"value":11896},{"type":29,"tag":441,"props":12216,"children":12217},{"style":536},[12218],{"type":35,"value":12219},"openai",{"type":29,"tag":441,"props":12221,"children":12222},{"style":2077},[12223],{"type":35,"value":11896},{"type":29,"tag":441,"props":12225,"children":12226},{"style":536},[12227],{"type":35,"value":11101},{"type":29,"tag":441,"props":12229,"children":12230},{"style":2077},[12231],{"type":35,"value":6038},{"type":29,"tag":441,"props":12233,"children":12234},{"style":536},[12235],{"type":35,"value":12236}," python .\\app.py ",{"type":29,"tag":441,"props":12238,"children":12239},{"style":2077},[12240],{"type":35,"value":11915},{"type":29,"tag":441,"props":12242,"children":12243},{"style":536},[12244],{"type":35,"value":12245},"trt_engine_path ",{"type":29,"tag":441,"props":12247,"children":12248},{"style":588},[12249],{"type":35,"value":12250},"\"D:\\llama\\CodeLlama-13b-Instruct-hf\\trt_engines\\1-gpu\\\"",{"type":29,"tag":441,"props":12252,"children":12253},{"style":2077},[12254],{"type":35,"value":12079},{"type":29,"tag":441,"props":12256,"children":12257},{"style":536},[12258],{"type":35,"value":12259},"trt_engine_name llama_float16_tp1_rank0.engine ",{"type":29,"tag":441,"props":12261,"children":12262},{"style":2077},[12263],{"type":35,"value":11915},{"type":29,"tag":441,"props":12265,"children":12266},{"style":536},[12267],{"type":35,"value":12268},"tokenizer_dir_path ",{"type":29,"tag":441,"props":12270,"children":12271},{"style":588},[12272],{"type":35,"value":12273},"\"D:\\llama\\CodeLlama-13b-Instruct-hf\\\"",{"type":29,"tag":441,"props":12275,"children":12276},{"style":2077},[12277],{"type":35,"value":12079},{"type":29,"tag":441,"props":12279,"children":12280},{"style":536},[12281],{"type":35,"value":12282},"port ",{"type":29,"tag":441,"props":12284,"children":12285},{"style":556},[12286],{"type":35,"value":12287},"5000",{"type":29,"tag":441,"props":12289,"children":12290},{"style":2077},[12291],{"type":35,"value":12079},{"type":29,"tag":441,"props":12293,"children":12294},{"style":536},[12295],{"type":35,"value":12296},"host ",{"type":29,"tag":441,"props":12298,"children":12299},{"style":556},[12300],{"type":35,"value":12301},"0.0",{"type":29,"tag":441,"props":12303,"children":12304},{"style":536},[12305],{"type":35,"value":3764},{"type":29,"tag":441,"props":12307,"children":12308},{"style":556},[12309],{"type":35,"value":12310},"0.0\n",{"type":29,"tag":38,"props":12312,"children":12313},{},[12314,12316,12322],{"type":35,"value":12315},"Tip: Adding ",{"type":29,"tag":427,"props":12317,"children":12319},{"className":12318},[],[12320],{"type":35,"value":12321},"--host 0.0.0.0",{"type":35,"value":12323}," isn't required here, but it allows me to use the CodeLlama/TensorRT-LLM server with VSCode any computer on my local network using my PC's local IP address in the Continue.dev configuration.",{"type":29,"tag":38,"props":12325,"children":12326},{},[12327],{"type":35,"value":12328},"Using docker in WSL to start the Llama-2-13b-chat-hf LLM server:",{"type":29,"tag":514,"props":12330,"children":12332},{"code":12331},"root@0a5b5b75f079:/code/git/TensorRT-LLM/examples/server/flask# python3 app.py --trt_engine_path /llama/Llama-2-13b-chat-hf/trt_engines/1-gpu/ --trt_engine_name  llama_float16_t_rank0.engine --tokenizer_dir_path /llama/Llama-2-13b-chat-hf/ --port 5001 --host 0.0.0.0\n",[12333],{"type":29,"tag":427,"props":12334,"children":12335},{"__ignoreMap":8},[12336],{"type":35,"value":12331},{"type":29,"tag":38,"props":12338,"children":12339},{},[12340,12342,12347],{"type":35,"value":12341},"Note: Here I also add ",{"type":29,"tag":427,"props":12343,"children":12345},{"className":12344},[],[12346],{"type":35,"value":12321},{"type":35,"value":12348},", but this is required in order for the service in the docker container to be reached from WSL by the game running on Windows.",{"type":29,"tag":38,"props":12350,"children":12351},{},[12352],{"type":35,"value":12353},"BakkesMod includes a console window that came in handy for debugging errors during development.",{"type":29,"tag":38,"props":12355,"children":12356},{},[12357],{"type":35,"value":12358},"At the beginning of this developer contest on January 9, NVIDIA announced Chat with RTX. This is a demo program for Windows that automates a lots of the processes needed to set up a TensorRT-LLM-powered LLM running on your PC. Keep an eye on this project as it may become the best way to install and manage large language models on Windows PCs.",{"type":29,"tag":38,"props":12360,"children":12361},{},[12362],{"type":29,"tag":192,"props":12363,"children":12366},{"alt":12364,"src":12365},"Chat with RTX image","/static/rlbc/chat_with_rtx.jpeg",[],{"type":29,"tag":71,"props":12368,"children":12369},{"id":10935},[12370],{"type":35,"value":10938},{"type":29,"tag":38,"props":12372,"children":12373},{},[12374,12376,12381],{"type":35,"value":12375},"Here's a quick look at key parts of the plugin source code (",{"type":29,"tag":57,"props":12377,"children":12379},{"href":11135,"rel":12378},[60],[12380],{"type":35,"value":11135},{"type":35,"value":12382},").",{"type":29,"tag":123,"props":12384,"children":12386},{"id":12385},"hooking-events",[12387],{"type":35,"value":12388},"Hooking events",{"type":29,"tag":38,"props":12390,"children":12391},{},[12392,12394,12400],{"type":35,"value":12393},"Hooking events is the core of how this plugin works. ",{"type":29,"tag":427,"props":12395,"children":12397},{"className":12396},[],[12398],{"type":35,"value":12399},"StatTickerMessage",{"type":35,"value":12401}," events cover most of the events that are triggered in Rocket League, such as scoring a goal, making a save or demolishing a car.",{"type":29,"tag":514,"props":12403,"children":12405},{"code":12404,"language":11690,"meta":8,"className":11691,"style":8},"    // Hooks different types of events that are handled in onStatTickerMessage\n    // See https://wiki.bakkesplugins.com/functions/stat_events/\n    gameWrapper->HookEventWithCallerPost\u003CServerWrapper>(\"Function TAGame.GFxHUD_TA.HandleStatTickerMessage\",\n        [this](ServerWrapper caller, void* params, std::string eventname) {\n            onStatTickerMessage(params);\n        });\n",[12406],{"type":29,"tag":427,"props":12407,"children":12408},{"__ignoreMap":8},[12409,12417,12425,12460,12535,12548],{"type":29,"tag":441,"props":12410,"children":12411},{"class":525,"line":526},[12412],{"type":29,"tag":441,"props":12413,"children":12414},{"style":1181},[12415],{"type":35,"value":12416},"    // Hooks different types of events that are handled in onStatTickerMessage\n",{"type":29,"tag":441,"props":12418,"children":12419},{"class":525,"line":542},[12420],{"type":29,"tag":441,"props":12421,"children":12422},{"style":1181},[12423],{"type":35,"value":12424},"    // See https://wiki.bakkesplugins.com/functions/stat_events/\n",{"type":29,"tag":441,"props":12426,"children":12427},{"class":525,"line":562},[12428,12433,12438,12443,12447,12451,12456],{"type":29,"tag":441,"props":12429,"children":12430},{"style":536},[12431],{"type":35,"value":12432},"    gameWrapper->HookEventWithCallerPost",{"type":29,"tag":441,"props":12434,"children":12435},{"style":2077},[12436],{"type":35,"value":12437},"\u003C",{"type":29,"tag":441,"props":12439,"children":12440},{"style":536},[12441],{"type":35,"value":12442},"ServerWrapper",{"type":29,"tag":441,"props":12444,"children":12445},{"style":2077},[12446],{"type":35,"value":6038},{"type":29,"tag":441,"props":12448,"children":12449},{"style":536},[12450],{"type":35,"value":2068},{"type":29,"tag":441,"props":12452,"children":12453},{"style":588},[12454],{"type":35,"value":12455},"\"Function TAGame.GFxHUD_TA.HandleStatTickerMessage\"",{"type":29,"tag":441,"props":12457,"children":12458},{"style":536},[12459],{"type":35,"value":4775},{"type":29,"tag":441,"props":12461,"children":12462},{"class":525,"line":575},[12463,12468,12473,12478,12482,12487,12491,12496,12501,12506,12510,12515,12520,12525,12530],{"type":29,"tag":441,"props":12464,"children":12465},{"style":536},[12466],{"type":35,"value":12467},"        [",{"type":29,"tag":441,"props":12469,"children":12470},{"style":2208},[12471],{"type":35,"value":12472},"this",{"type":29,"tag":441,"props":12474,"children":12475},{"style":536},[12476],{"type":35,"value":12477},"](",{"type":29,"tag":441,"props":12479,"children":12480},{"style":2147},[12481],{"type":35,"value":12442},{"type":29,"tag":441,"props":12483,"children":12484},{"style":2071},[12485],{"type":35,"value":12486}," caller",{"type":29,"tag":441,"props":12488,"children":12489},{"style":536},[12490],{"type":35,"value":2193},{"type":29,"tag":441,"props":12492,"children":12493},{"style":2091},[12494],{"type":35,"value":12495},"void",{"type":29,"tag":441,"props":12497,"children":12498},{"style":2077},[12499],{"type":35,"value":12500},"*",{"type":29,"tag":441,"props":12502,"children":12503},{"style":2071},[12504],{"type":35,"value":12505}," params",{"type":29,"tag":441,"props":12507,"children":12508},{"style":536},[12509],{"type":35,"value":2193},{"type":29,"tag":441,"props":12511,"children":12512},{"style":2147},[12513],{"type":35,"value":12514},"std",{"type":29,"tag":441,"props":12516,"children":12517},{"style":536},[12518],{"type":35,"value":12519},"::",{"type":29,"tag":441,"props":12521,"children":12522},{"style":2147},[12523],{"type":35,"value":12524},"string",{"type":29,"tag":441,"props":12526,"children":12527},{"style":2071},[12528],{"type":35,"value":12529}," eventname",{"type":29,"tag":441,"props":12531,"children":12532},{"style":536},[12533],{"type":35,"value":12534},") {\n",{"type":29,"tag":441,"props":12536,"children":12537},{"class":525,"line":594},[12538,12543],{"type":29,"tag":441,"props":12539,"children":12540},{"style":2060},[12541],{"type":35,"value":12542},"            onStatTickerMessage",{"type":29,"tag":441,"props":12544,"children":12545},{"style":536},[12546],{"type":35,"value":12547},"(params);\n",{"type":29,"tag":441,"props":12549,"children":12550},{"class":525,"line":607},[12551],{"type":29,"tag":441,"props":12552,"children":12553},{"style":536},[12554],{"type":35,"value":12555},"        });\n",{"type":29,"tag":123,"props":12557,"children":12559},{"id":12558},"handling-events-and-building-the-prompt",[12560],{"type":35,"value":12561},"Handling events and building the prompt",{"type":29,"tag":38,"props":12563,"children":12564},{},[12565,12567,12573],{"type":35,"value":12566},"We can unpack values from the event to determine the player to which the event should be attributed. The code then translates the game event and related data into an English sentence. This is appended to a vector of message objects with the ",{"type":29,"tag":427,"props":12568,"children":12570},{"className":12569},[],[12571],{"type":35,"value":12572},"appendToPrompt",{"type":35,"value":12574}," method.",{"type":29,"tag":514,"props":12576,"children":12578},{"code":12577,"language":11690,"meta":8,"className":11691,"style":8},"    // handle different events like scoring a goal or making a save\n    if (statEvent.GetEventName() == \"Goal\") {\n\n        // was the goal scored by the human player or the bot?\n        if (playerPRI.memory_address == receiver.memory_address) {\n            appendToPrompt(\"Your human opponent just scored a goal against you! \" + score_sentence, \"user\");\n        }\n        else {\n            appendToPrompt(\"You just scored a goal against the human player! \" + score_sentence, \"user\");\n        }\n    }\n",[12579],{"type":29,"tag":427,"props":12580,"children":12581},{"__ignoreMap":8},[12582,12590,12626,12633,12641,12663,12699,12707,12720,12752,12759],{"type":29,"tag":441,"props":12583,"children":12584},{"class":525,"line":526},[12585],{"type":29,"tag":441,"props":12586,"children":12587},{"style":1181},[12588],{"type":35,"value":12589},"    // handle different events like scoring a goal or making a save\n",{"type":29,"tag":441,"props":12591,"children":12592},{"class":525,"line":542},[12593,12598,12603,12608,12613,12617,12622],{"type":29,"tag":441,"props":12594,"children":12595},{"style":2077},[12596],{"type":35,"value":12597},"    if",{"type":29,"tag":441,"props":12599,"children":12600},{"style":536},[12601],{"type":35,"value":12602}," (statEvent.",{"type":29,"tag":441,"props":12604,"children":12605},{"style":2060},[12606],{"type":35,"value":12607},"GetEventName",{"type":29,"tag":441,"props":12609,"children":12610},{"style":536},[12611],{"type":35,"value":12612},"() ",{"type":29,"tag":441,"props":12614,"children":12615},{"style":2077},[12616],{"type":35,"value":5556},{"type":29,"tag":441,"props":12618,"children":12619},{"style":588},[12620],{"type":35,"value":12621}," \"Goal\"",{"type":29,"tag":441,"props":12623,"children":12624},{"style":536},[12625],{"type":35,"value":12534},{"type":29,"tag":441,"props":12627,"children":12628},{"class":525,"line":562},[12629],{"type":29,"tag":441,"props":12630,"children":12631},{"emptyLinePlaceholder":24},[12632],{"type":35,"value":1032},{"type":29,"tag":441,"props":12634,"children":12635},{"class":525,"line":575},[12636],{"type":29,"tag":441,"props":12637,"children":12638},{"style":1181},[12639],{"type":35,"value":12640},"        // was the goal scored by the human player or the bot?\n",{"type":29,"tag":441,"props":12642,"children":12643},{"class":525,"line":594},[12644,12649,12654,12658],{"type":29,"tag":441,"props":12645,"children":12646},{"style":2077},[12647],{"type":35,"value":12648},"        if",{"type":29,"tag":441,"props":12650,"children":12651},{"style":536},[12652],{"type":35,"value":12653}," (playerPRI.memory_address ",{"type":29,"tag":441,"props":12655,"children":12656},{"style":2077},[12657],{"type":35,"value":5556},{"type":29,"tag":441,"props":12659,"children":12660},{"style":536},[12661],{"type":35,"value":12662}," receiver.memory_address) {\n",{"type":29,"tag":441,"props":12664,"children":12665},{"class":525,"line":607},[12666,12671,12675,12680,12685,12690,12694],{"type":29,"tag":441,"props":12667,"children":12668},{"style":2060},[12669],{"type":35,"value":12670},"            appendToPrompt",{"type":29,"tag":441,"props":12672,"children":12673},{"style":536},[12674],{"type":35,"value":2068},{"type":29,"tag":441,"props":12676,"children":12677},{"style":588},[12678],{"type":35,"value":12679},"\"Your human opponent just scored a goal against you! \"",{"type":29,"tag":441,"props":12681,"children":12682},{"style":2077},[12683],{"type":35,"value":12684}," +",{"type":29,"tag":441,"props":12686,"children":12687},{"style":536},[12688],{"type":35,"value":12689}," score_sentence, ",{"type":29,"tag":441,"props":12691,"children":12692},{"style":588},[12693],{"type":35,"value":4770},{"type":29,"tag":441,"props":12695,"children":12696},{"style":536},[12697],{"type":35,"value":12698},");\n",{"type":29,"tag":441,"props":12700,"children":12701},{"class":525,"line":631},[12702],{"type":29,"tag":441,"props":12703,"children":12704},{"style":536},[12705],{"type":35,"value":12706},"        }\n",{"type":29,"tag":441,"props":12708,"children":12709},{"class":525,"line":644},[12710,12715],{"type":29,"tag":441,"props":12711,"children":12712},{"style":2077},[12713],{"type":35,"value":12714},"        else",{"type":29,"tag":441,"props":12716,"children":12717},{"style":536},[12718],{"type":35,"value":12719}," {\n",{"type":29,"tag":441,"props":12721,"children":12722},{"class":525,"line":658},[12723,12727,12731,12736,12740,12744,12748],{"type":29,"tag":441,"props":12724,"children":12725},{"style":2060},[12726],{"type":35,"value":12670},{"type":29,"tag":441,"props":12728,"children":12729},{"style":536},[12730],{"type":35,"value":2068},{"type":29,"tag":441,"props":12732,"children":12733},{"style":588},[12734],{"type":35,"value":12735},"\"You just scored a goal against the human player! \"",{"type":29,"tag":441,"props":12737,"children":12738},{"style":2077},[12739],{"type":35,"value":12684},{"type":29,"tag":441,"props":12741,"children":12742},{"style":536},[12743],{"type":35,"value":12689},{"type":29,"tag":441,"props":12745,"children":12746},{"style":588},[12747],{"type":35,"value":4770},{"type":29,"tag":441,"props":12749,"children":12750},{"style":536},[12751],{"type":35,"value":12698},{"type":29,"tag":441,"props":12753,"children":12754},{"class":525,"line":671},[12755],{"type":29,"tag":441,"props":12756,"children":12757},{"style":536},[12758],{"type":35,"value":12706},{"type":29,"tag":441,"props":12760,"children":12761},{"class":525,"line":684},[12762],{"type":29,"tag":441,"props":12763,"children":12764},{"style":536},[12765],{"type":35,"value":12766},"    }\n",{"type":29,"tag":123,"props":12768,"children":12770},{"id":12769},"making-requests-and-handling-responses",[12771],{"type":35,"value":12772},"Making requests and handling responses",{"type":29,"tag":38,"props":12774,"children":12775},{},[12776],{"type":35,"value":12777},"The last main part of the code is making a request to the LLM server with the prompt that we have formed above based on game messages. This code should look familiar to anyone who has worked with OpenAI's API.",{"type":29,"tag":514,"props":12779,"children":12781},{"code":12780,"language":11690,"meta":8,"className":11691,"style":8},"std::string message = response_json[\"choices\"][0][\"message\"][\"content\"];\n",[12782],{"type":29,"tag":427,"props":12783,"children":12784},{"__ignoreMap":8},[12785],{"type":29,"tag":441,"props":12786,"children":12787},{"class":525,"line":526},[12788,12792,12797,12801,12806,12811,12816,12821,12825,12830,12834,12838],{"type":29,"tag":441,"props":12789,"children":12790},{"style":2147},[12791],{"type":35,"value":12514},{"type":29,"tag":441,"props":12793,"children":12794},{"style":536},[12795],{"type":35,"value":12796},"::string message ",{"type":29,"tag":441,"props":12798,"children":12799},{"style":2077},[12800],{"type":35,"value":2080},{"type":29,"tag":441,"props":12802,"children":12803},{"style":536},[12804],{"type":35,"value":12805}," response_json[",{"type":29,"tag":441,"props":12807,"children":12808},{"style":588},[12809],{"type":35,"value":12810},"\"choices\"",{"type":29,"tag":441,"props":12812,"children":12813},{"style":536},[12814],{"type":35,"value":12815},"][",{"type":29,"tag":441,"props":12817,"children":12818},{"style":556},[12819],{"type":35,"value":12820},"0",{"type":29,"tag":441,"props":12822,"children":12823},{"style":536},[12824],{"type":35,"value":12815},{"type":29,"tag":441,"props":12826,"children":12827},{"style":588},[12828],{"type":35,"value":12829},"\"message\"",{"type":29,"tag":441,"props":12831,"children":12832},{"style":536},[12833],{"type":35,"value":12815},{"type":29,"tag":441,"props":12835,"children":12836},{"style":588},[12837],{"type":35,"value":4556},{"type":29,"tag":441,"props":12839,"children":12840},{"style":536},[12841],{"type":35,"value":12842},"];\n",{"type":29,"tag":38,"props":12844,"children":12845},{},[12846,12847,12853],{"type":35,"value":8955},{"type":29,"tag":427,"props":12848,"children":12850},{"className":12849},[],[12851],{"type":35,"value":12852},"LogToChatbox",{"type":35,"value":12854}," method is used to send a message to the in-game chat box with the name of the bot that is sending the message. Since messages could possibly be longer than the limit of 120 characters, I send messages to the chatbox in chunks of 120 characters at a time.",{"type":29,"tag":514,"props":12856,"children":12858},{"code":12857,"language":11690,"meta":8,"className":11691,"style":8},"gameWrapper->LogToChatbox(messages[i], this->bot_name);\n",[12859],{"type":29,"tag":427,"props":12860,"children":12861},{"__ignoreMap":8},[12862],{"type":29,"tag":441,"props":12863,"children":12864},{"class":525,"line":526},[12865,12870,12874,12879,12883],{"type":29,"tag":441,"props":12866,"children":12867},{"style":536},[12868],{"type":35,"value":12869},"gameWrapper->",{"type":29,"tag":441,"props":12871,"children":12872},{"style":2060},[12873],{"type":35,"value":12852},{"type":29,"tag":441,"props":12875,"children":12876},{"style":536},[12877],{"type":35,"value":12878},"(messages[i], ",{"type":29,"tag":441,"props":12880,"children":12881},{"style":2208},[12882],{"type":35,"value":12472},{"type":29,"tag":441,"props":12884,"children":12885},{"style":536},[12886],{"type":35,"value":12887},"->bot_name);\n",{"type":29,"tag":38,"props":12889,"children":12890},{},[12891,12893,12899],{"type":35,"value":12892},"That's it! The code isn't that complicated. I had to sanitize the message so that it would not include emoji or the stop character that the LLM server would include in messages (",{"type":29,"tag":427,"props":12894,"children":12896},{"className":12895},[],[12897],{"type":35,"value":12898},"\u003C/s>",{"type":35,"value":12900},"). Oddly, I had a hard time getting the LLM to not use emoji even when I instructed it to not use emoji in the system prompt.",{"type":29,"tag":71,"props":12902,"children":12904},{"id":12903},"rocket-league-botchat-ui",[12905],{"type":35,"value":12906},"Rocket League BotChat UI",{"type":29,"tag":38,"props":12908,"children":12909},{},[12910],{"type":35,"value":12911},"Most BakkesMod plugins for RocketLeague UIs that allow for controlling settings. Here's what the UI for Rocket League BotChat looks like:",{"type":29,"tag":38,"props":12913,"children":12914},{},[12915],{"type":29,"tag":192,"props":12916,"children":12919},{"alt":12917,"src":12918},"Rocket League BotChat Plugin UI","/static/rlbc/rlbcui.png",[],{"type":29,"tag":123,"props":12921,"children":12923},{"id":12922},"system-prompt",[12924],{"type":35,"value":12925},"System prompt",{"type":29,"tag":38,"props":12927,"children":12928},{},[12929],{"type":35,"value":12930},"The system prompt instructs the bot on how it shoud reply. This is an important part of the prompt engineering for this project, and I used Postman to experiment with lots of different types of instructions. Here's the default prompt that I used:",{"type":29,"tag":514,"props":12932,"children":12934},{"code":12933,"language":11690,"meta":8,"className":11691,"style":8},"    std::string ai_player = \"You are an elite AI player in the car soccer game Rocket League. \";\n    std::string one_v_one = \"You are playing a 1v1 match against a human player. \";\n    std::string instructions = \"You will send short chat messages to your human opponent in response to what happens in the game. \";\n    std::string details = \"Respond to the human player with brief messages no more than 12 words long.\";\n    // initial system prompt\n    std::string initial_system_prompt = ai_player + one_v_one + instructions + details;\n",[12935],{"type":29,"tag":427,"props":12936,"children":12937},{"__ignoreMap":8},[12938,12965,12990,13015,13040,13048],{"type":29,"tag":441,"props":12939,"children":12940},{"class":525,"line":526},[12941,12946,12951,12955,12960],{"type":29,"tag":441,"props":12942,"children":12943},{"style":2147},[12944],{"type":35,"value":12945},"    std",{"type":29,"tag":441,"props":12947,"children":12948},{"style":536},[12949],{"type":35,"value":12950},"::string ai_player ",{"type":29,"tag":441,"props":12952,"children":12953},{"style":2077},[12954],{"type":35,"value":2080},{"type":29,"tag":441,"props":12956,"children":12957},{"style":588},[12958],{"type":35,"value":12959}," \"You are an elite AI player in the car soccer game Rocket League. \"",{"type":29,"tag":441,"props":12961,"children":12962},{"style":536},[12963],{"type":35,"value":12964},";\n",{"type":29,"tag":441,"props":12966,"children":12967},{"class":525,"line":542},[12968,12972,12977,12981,12986],{"type":29,"tag":441,"props":12969,"children":12970},{"style":2147},[12971],{"type":35,"value":12945},{"type":29,"tag":441,"props":12973,"children":12974},{"style":536},[12975],{"type":35,"value":12976},"::string one_v_one ",{"type":29,"tag":441,"props":12978,"children":12979},{"style":2077},[12980],{"type":35,"value":2080},{"type":29,"tag":441,"props":12982,"children":12983},{"style":588},[12984],{"type":35,"value":12985}," \"You are playing a 1v1 match against a human player. \"",{"type":29,"tag":441,"props":12987,"children":12988},{"style":536},[12989],{"type":35,"value":12964},{"type":29,"tag":441,"props":12991,"children":12992},{"class":525,"line":562},[12993,12997,13002,13006,13011],{"type":29,"tag":441,"props":12994,"children":12995},{"style":2147},[12996],{"type":35,"value":12945},{"type":29,"tag":441,"props":12998,"children":12999},{"style":536},[13000],{"type":35,"value":13001},"::string instructions ",{"type":29,"tag":441,"props":13003,"children":13004},{"style":2077},[13005],{"type":35,"value":2080},{"type":29,"tag":441,"props":13007,"children":13008},{"style":588},[13009],{"type":35,"value":13010}," \"You will send short chat messages to your human opponent in response to what happens in the game. \"",{"type":29,"tag":441,"props":13012,"children":13013},{"style":536},[13014],{"type":35,"value":12964},{"type":29,"tag":441,"props":13016,"children":13017},{"class":525,"line":575},[13018,13022,13027,13031,13036],{"type":29,"tag":441,"props":13019,"children":13020},{"style":2147},[13021],{"type":35,"value":12945},{"type":29,"tag":441,"props":13023,"children":13024},{"style":536},[13025],{"type":35,"value":13026},"::string details ",{"type":29,"tag":441,"props":13028,"children":13029},{"style":2077},[13030],{"type":35,"value":2080},{"type":29,"tag":441,"props":13032,"children":13033},{"style":588},[13034],{"type":35,"value":13035}," \"Respond to the human player with brief messages no more than 12 words long.\"",{"type":29,"tag":441,"props":13037,"children":13038},{"style":536},[13039],{"type":35,"value":12964},{"type":29,"tag":441,"props":13041,"children":13042},{"class":525,"line":594},[13043],{"type":29,"tag":441,"props":13044,"children":13045},{"style":1181},[13046],{"type":35,"value":13047},"    // initial system prompt\n",{"type":29,"tag":441,"props":13049,"children":13050},{"class":525,"line":607},[13051,13055,13060,13064,13069,13073,13078,13082,13087,13091],{"type":29,"tag":441,"props":13052,"children":13053},{"style":2147},[13054],{"type":35,"value":12945},{"type":29,"tag":441,"props":13056,"children":13057},{"style":536},[13058],{"type":35,"value":13059},"::string initial_system_prompt ",{"type":29,"tag":441,"props":13061,"children":13062},{"style":2077},[13063],{"type":35,"value":2080},{"type":29,"tag":441,"props":13065,"children":13066},{"style":536},[13067],{"type":35,"value":13068}," ai_player ",{"type":29,"tag":441,"props":13070,"children":13071},{"style":2077},[13072],{"type":35,"value":11816},{"type":29,"tag":441,"props":13074,"children":13075},{"style":536},[13076],{"type":35,"value":13077}," one_v_one ",{"type":29,"tag":441,"props":13079,"children":13080},{"style":2077},[13081],{"type":35,"value":11816},{"type":29,"tag":441,"props":13083,"children":13084},{"style":536},[13085],{"type":35,"value":13086}," instructions ",{"type":29,"tag":441,"props":13088,"children":13089},{"style":2077},[13090],{"type":35,"value":11816},{"type":29,"tag":441,"props":13092,"children":13093},{"style":536},[13094],{"type":35,"value":13095}," details;\n",{"type":29,"tag":38,"props":13097,"children":13098},{},[13099,13101,13107,13109,13115],{"type":35,"value":13100},"The last part about ",{"type":29,"tag":427,"props":13102,"children":13104},{"className":13103},[],[13105],{"type":35,"value":13106},"no more than 12 words long",{"type":35,"value":13108}," was the most effective way of controlling the length responses from the LLM. I tried changing the ",{"type":29,"tag":427,"props":13110,"children":13112},{"className":13111},[],[13113],{"type":35,"value":13114},"max_output_len",{"type":35,"value":13116}," when building the TensorRT engine, but this degraded the quality of the responses. The system prompt can be changed by the user. Changing the system prompt was a lot of fun to expirment with!",{"type":29,"tag":123,"props":13118,"children":13120},{"id":13119},"temperature-and-seed",[13121],{"type":35,"value":13122},"Temperature and Seed",{"type":29,"tag":38,"props":13124,"children":13125},{},[13126],{"type":35,"value":13127},"These values are included in the body of the request to the LLM, but I didn't have much luck with these. Early on I had issues with getting sufficient variation in the responses from the LLM, so I tried using random values for seed and temperature, but this didn't really work.",{"type":29,"tag":123,"props":13129,"children":13130},{"id":11684},[13131],{"type":35,"value":13132},"Messages",{"type":29,"tag":38,"props":13134,"children":13135},{},[13136],{"type":35,"value":13137},"This section of the UI displays the messages that are used in requests to the LLM. In order keep the prompt within the context window limit, I only used the most recent six messages sent from the \"user\" (which are messages about game events) and the \"assistant\" (which are LLM responses from the bot). Whenever the user changes the system prompt, the messages vector is reset to only include the new system prompt.",{"type":29,"tag":71,"props":13139,"children":13140},{"id":10962},[13141],{"type":35,"value":10965},{"type":29,"tag":13143,"props":13144,"children":13145},"rocket-league-bot-chat-video",{},[],{"type":29,"tag":38,"props":13147,"children":13148},{},[13149],{"type":35,"value":13150},"I used Blender's sequence editor to create a demo video for my contest submission. I don't edit a lot of videos, but it is a fun process and I learned a lot about Blender and non-linear video editing in the process. Here's how I approached creating the demo video for my project.",{"type":29,"tag":38,"props":13152,"children":13153},{},[13154],{"type":29,"tag":192,"props":13155,"children":13158},{"alt":13156,"src":13157},"Blender video sequence editor UI used to create my project video","/static/rlbc/blender.png",[],{"type":29,"tag":88,"props":13160,"children":13161},{},[13162,13167,13179,13201,13206],{"type":29,"tag":92,"props":13163,"children":13164},{},[13165],{"type":35,"value":13166},"Structure the video in three main parts: introduction to my project and the contest, description of how it works, demo of my project in action",{"type":29,"tag":92,"props":13168,"children":13169},{},[13170,13172],{"type":35,"value":13171},"Find an upbeat song from playlists included in Rocket League with no vocals to use as background music. I used ",{"type":29,"tag":57,"props":13173,"children":13176},{"href":13174,"rel":13175},"https://open.spotify.com/track/68ahXxPJrxcEvQFjRmC2ja?si=2147d6d652064d51",[60],[13177],{"type":35,"value":13178},"\"Dads in Space\" by Steven Walking",{"type":29,"tag":92,"props":13180,"children":13181},{},[13182,13184,13190,13192,13199],{"type":35,"value":13183},"Get stock Rocket League footage from YouTube with ",{"type":29,"tag":427,"props":13185,"children":13187},{"className":13186},[],[13188],{"type":35,"value":13189},"youtube-dl",{"type":35,"value":13191}," (this is an amazing tool!). I mostly used footage from the ",{"type":29,"tag":57,"props":13193,"children":13196},{"href":13194,"rel":13195},"https://www.youtube.com/watch?v=e1tqWldCYOI&pp=ygUQcmxjcyB3aW50ZXIgMjAyMw%3D%3D",[60],[13197],{"type":35,"value":13198},"RLCS 2023 Winter Major Trailer",{"type":35,"value":13200},". This video was uploaded at 24 fps, and my Blender Video project frame rate was set to 29.97, so I used ffmpeg to convert this video from 24 fps to 29.97 fps.",{"type":29,"tag":92,"props":13202,"children":13203},{},[13204],{"type":35,"value":13205},"Record myself playing Rocket League with my plugin enabled using NVIDIA Share. Miraculously, I was able to score against the Nexto bot!",{"type":29,"tag":92,"props":13207,"children":13208},{},[13209],{"type":35,"value":13210},"Use ComfyUI to animate some of the images used in the contest description and use these in my video",{"type":29,"tag":38,"props":13212,"children":13213},{},[13214],{"type":29,"tag":192,"props":13215,"children":13218},{"alt":13216,"src":13217},"ComfyUI workflow for animating images using img2vid model","/static/rlbc/comfyui.png",[],{"type":29,"tag":88,"props":13220,"children":13221},{},[13222],{"type":29,"tag":92,"props":13223,"children":13224},{},[13225],{"type":35,"value":13226},"Use ElevenLabs to narrate a simple voice over script that describes the video content. This tuned out a lot better than I expected. I paid $1 for the ElevenLabs creator plan and got lots of tokens to experiment with different settings for voice generation using a clone of my voice.",{"type":29,"tag":38,"props":13228,"children":13229},{},[13230],{"type":29,"tag":192,"props":13231,"children":13234},{"alt":13232,"src":13233},"Eleven Labs Voice Generation Web UI","/static/rlbc/elevenlabs.png",[],{"type":29,"tag":38,"props":13236,"children":13237},{},[13238],{"type":29,"tag":57,"props":13239,"children":13241},{"href":13240},"#",[13242],{"type":35,"value":13243},"Embed twitter video here",{"type":29,"tag":71,"props":13245,"children":13246},{"id":10982},[13247],{"type":35,"value":10985},{"type":29,"tag":38,"props":13249,"children":13250},{},[13251,13253,13258],{"type":35,"value":13252},"This plugin is a proof of concept and it has some shortcomings. One issue is that some events that my plugin listens to can happen in rapid succession. This results in \"user\" and \"assistant\" prompts getting out of order which breaks assertions on the ",{"type":29,"tag":427,"props":13254,"children":13256},{"className":13255},[],[13257],{"type":35,"value":9372},{"type":35,"value":13259}," repo. It would make more sense to have the bot send messages not immediately after the events are triggered, but on a different type of schedule that allows for multiple events to happen before sending the prompt to the LLM.",{"type":29,"tag":38,"props":13261,"children":13262},{},[13263],{"type":35,"value":13264},"There are lots of events that are triggered that would be interesting things for the bot to react to, but I decided not to prompt on every event since the above situation would be triggered frequently. For example, suppose I listen for events like taking a shot on goal and scoring a goal. If the goal is scored immediately after the shot is taken, then the second prompt is sent before the response for the first prompt comes back. For this reason I decided to simply not listen to events like \"shot on goal\" to avoid prompt messages getting out of order. This could also be addressed with more code logic.",{"type":29,"tag":38,"props":13266,"children":13267},{},[13268],{"type":35,"value":13269},"Prompt engineering is something that can always be improved. It is hard to measure and testing it is subjective. I am pleased with the results I was able to capture for the demo video, but the quality of the LLM responses can very depending on what happens during gameplay. One idea I had to address this would be to provide multiple English translations for any given event, and then select one at random. This might help improve the variety of responses, for example.",{"type":29,"tag":38,"props":13271,"children":13272},{},[13273,13275,13281],{"type":35,"value":13274},"I faced some limitations that are built in to the game iteself. For example, it is not possible for a player to send messages to the in-game chat in offline matches, which makes sense! I built a backdoor for doing this through the BakkesMod developer console, so you can send messages to the bot by typing something like ",{"type":29,"tag":427,"props":13276,"children":13278},{"className":13277},[],[13279],{"type":35,"value":13280},"SendMessage Good shot, bot!",{"type":35,"value":13282},", for example.",{"type":29,"tag":71,"props":13284,"children":13285},{"id":3584},[13286],{"type":35,"value":11048},{"type":29,"tag":38,"props":13288,"children":13289},{},[13290],{"type":35,"value":13291},"Participating in this contest was a great opportunity to learn more about LLMs and how to use them to extend programs in a Windows environment. It was also a lot of fun to build something by putting together new tools like TensorRT-LLM. Seeing the bot send me chat messages was very satisfying when I first got it to work! Overall it is a pretty simple implementation, but this idea could be extended to produce useful application. I could imagine a \"Rocket League Coach\" plugin that expands on this idea to give helpful feedback based on higher-level data, statistical trends, training goals, etc.",{"type":29,"tag":38,"props":13293,"children":13294},{},[13295],{"type":35,"value":13296},"I think the gaming industry's adoption of LLMs for new games will be BIG, and it will present a huge opportunity for LLM optimization and acceleration software like TensorRT-LLM that I was able to use in my Rocket League BotChat. This is not to discredit the work of writers which play an important role in game development. I'm excited to see what other developers have built for this contest, especially submissions that are building mods for games using TensorRT-LLM.",{"type":29,"tag":38,"props":13298,"children":13299},{},[13300],{"type":35,"value":13301},"Thanks NVIDIA and the TensorRT and TensorRT-LLM teams for organizing this contest! Keep on building!!",{"type":29,"tag":3594,"props":13303,"children":13304},{},[13305],{"type":35,"value":3598},{"title":8,"searchDepth":542,"depth":542,"links":13307},[13308,13309,13310,13311,13312,13316,13321,13326,13327,13328],{"id":9214,"depth":542,"text":9217},{"id":11143,"depth":542,"text":11146},{"id":9685,"depth":542,"text":11192},{"id":9696,"depth":542,"text":9699},{"id":10853,"depth":542,"text":10856,"children":13313},[13314,13315],{"id":11859,"depth":562,"text":11862},{"id":12171,"depth":562,"text":12174},{"id":10935,"depth":542,"text":10938,"children":13317},[13318,13319,13320],{"id":12385,"depth":562,"text":12388},{"id":12558,"depth":562,"text":12561},{"id":12769,"depth":562,"text":12772},{"id":12903,"depth":542,"text":12906,"children":13322},[13323,13324,13325],{"id":12922,"depth":562,"text":12925},{"id":13119,"depth":562,"text":13122},{"id":11684,"depth":562,"text":13132},{"id":10962,"depth":542,"text":10965},{"id":10982,"depth":542,"text":10985},{"id":3584,"depth":542,"text":11048},"content:2024:02:17:rocket-league-botchat-nvidia-generative-ai-on-rtx-pcs-developer-contest.md","2024/02/17/rocket-league-botchat-nvidia-generative-ai-on-rtx-pcs-developer-contest.md","2024/02/17/rocket-league-botchat-nvidia-generative-ai-on-rtx-pcs-developer-contest",{"_path":13333,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":13334,"description":13335,"date":13336,"image":13337,"tags":13338,"external":13343,"comments":24,"body":13351,"_type":3618,"_id":16665,"_source":3620,"_file":16666,"_stem":16667,"_extension":3623},"/2023/08/27/python-vue-chinese-llama-2-and-the-three-body-problem","Python, Vue, Chinese-LLaMA-2 and The Three-Body Problem","Translating The Three-Body Problem book to English with Chinese LLMs, making visualizations with stable diffusion and running n-body simulations with CUDA","2023-11-23","/static/three-body-problem/cover.png",[13339,9202,17,15,3635,2049,14,13340,9200,9204,9198,13341,13342],"three-body-problem","cuda","vue","three.js",[13344,13347,13349],{"link":13345,"site":13346},"https://news.ycombinator.com/item?id=38393757","hn",{"link":13348,"site":11107},"https://www.reddit.com/r/threebodyproblem/comments/1823l5j/python_vue_chinesellama2_and_the_threebody_problem/",{"link":13350,"site":23},"https://twitter.com/briancaffey/status/1727710878349332614",{"type":26,"children":13352,"toc":16648},[13353,13357,13362,13405,13410,13415,13421,13426,13434,13448,13453,13461,13466,13474,13479,13487,13492,13501,13506,13512,13517,13540,13545,13578,13584,13598,13611,13617,13631,13636,13663,13671,13677,13682,13687,13692,13697,13705,13710,13715,13720,13743,13749,13754,13981,13989,14002,14010,14018,14206,14218,14226,14231,14269,14275,14280,14288,14298,14306,14314,14319,14325,14330,14336,14341,15383,15388,15499,15504,15913,15939,15944,16117,16130,16143,16307,16312,16371,16383,16388,16449,16461,16466,16471,16476,16484,16490,16495,16500,16506,16511,16519,16524,16532,16537,16542,16547,16553,16566,16571,16622,16636,16644],{"type":29,"tag":30,"props":13354,"children":13355},{"id":9214},[13356],{"type":35,"value":9217},{"type":29,"tag":38,"props":13358,"children":13359},{},[13360],{"type":35,"value":13361},"This articles brings together several of my interest, both old and new:",{"type":29,"tag":88,"props":13363,"children":13364},{},[13365,13370,13375,13380,13385,13390,13395,13400],{"type":29,"tag":92,"props":13366,"children":13367},{},[13368],{"type":35,"value":13369},"The Sci-Fi book series 'Three-Body Problem' by Liu Cixun",{"type":29,"tag":92,"props":13371,"children":13372},{},[13373],{"type":35,"value":13374},"Chinese language",{"type":29,"tag":92,"props":13376,"children":13377},{},[13378],{"type":35,"value":13379},"NLP techniques",{"type":29,"tag":92,"props":13381,"children":13382},{},[13383],{"type":35,"value":13384},"Large Language Models (LLMs)",{"type":29,"tag":92,"props":13386,"children":13387},{},[13388],{"type":35,"value":13389},"Stable Diffusion",{"type":29,"tag":92,"props":13391,"children":13392},{},[13393],{"type":35,"value":13394},"Data visualization and 3D graphics",{"type":29,"tag":92,"props":13396,"children":13397},{},[13398],{"type":35,"value":13399},"Mathematics",{"type":29,"tag":92,"props":13401,"children":13402},{},[13403],{"type":35,"value":13404},"NVIDIA / CUDA",{"type":29,"tag":38,"props":13406,"children":13407},{},[13408],{"type":35,"value":13409},"This is a linguistic, artistic and computational experiment with the two big AI algorithms of 2023: large language models (LLMs) and Stable Diffusion. I used the leading open-source LLMs from China‚Äôs tech sector to translate and summarize the text of Chinese author Liu Cixin‚Äôs award-winning science fiction novel: The Three-Body Problem. The book's storyline is based on a simple yet elusive problem from classical physics: predicting the movement of three gravitationally-attracted objects in space. I generated code for simulations and visualizations of this physics problem to present my own solutions to the three-body problem based on parallel computation. I also used Stable Diffusion to portray the imaginitive solutions to the three-body physics problem from one of the book‚Äôs main settings: an immersive virtual-reality game that spans centries of world history.",{"type":29,"tag":38,"props":13411,"children":13412},{},[13413],{"type":35,"value":13414},"I also share some of my experiences in China as an exchange student and research manager in the renewable energy technology sector. I wrote this article in English and translated it into Chinese using the same large language models I used to translate the Chinese text of the sci-fi novel into English. Warning: this article contains spoilers for the first book in the trilogy!",{"type":29,"tag":71,"props":13416,"children":13418},{"id":13417},"back-story",[13419],{"type":35,"value":13420},"Back story",{"type":29,"tag":38,"props":13422,"children":13423},{},[13424],{"type":35,"value":13425},"A few months ago my company announced that another round of layoffs was to come the following week. I'm on an engineering team that had already been impacted by a few rounds of layoffs in the past year, and I was expecting to be let go. On an impulse I bought a book at the top of my reading list from Amazon: \"Three-Body Problem\". It is an award-winning Sci-Fi trilogy written by Liu Cixin, a Chinese computer engineer who started writing the book as a series of essays that were published in China's \"World of Sci-Fi\" magazine.",{"type":29,"tag":38,"props":13427,"children":13428},{},[13429],{"type":29,"tag":192,"props":13430,"children":13433},{"alt":13431,"src":13432},"Images of Three Body Problem Book Series","/static/three-body-problem/books.png",[],{"type":29,"tag":38,"props":13435,"children":13436},{},[13437,13439,13446],{"type":35,"value":13438},"I started learning Chinese in college, adding a major in Chinese Language to the mathematics major I decided on in my freshman year after taking vector calculus and linear algebra. In my sophmore year I did a semester abroad at Fudan University's ",{"type":29,"tag":57,"props":13440,"children":13443},{"href":13441,"rel":13442},"https://ices.fudan.edu.cn/6628/list.htm",[60],[13444],{"type":35,"value":13445},"International Cultural Exchange School",{"type":35,"value":13447},". In 2007, living and studying Chinese in Shanghai as a 19 year old American was a really fun time. I was placed in an advanced-level course with a diverse group of students where English was not the lowest common linguistic denominator. We had a demanding cirriculum that emphasized reading, listening and speaking Chinese, but most of the language learning came through extracirricular activities: exploring Shanghai's food scene, bartering with vendors at the fabric markets, late night clubbing, walking around the Bund and the French Concession and chatting with my taxi cab drivers. It is hard to imagine how I did this without an iPhone, but I was able to get pretty far with an old Nokia 3310.",{"type":29,"tag":38,"props":13449,"children":13450},{},[13451],{"type":35,"value":13452},"At the end of one night of particularly heavy drinking, some of my classmates and I dropped in on an wangba (internet cafe) before heading back to the international dorm. Chinese internet cafes in 2007 were an expansive underground dens of computers, monitors, MMORPGs, FPSs, cigarets, and on-demand instant noodles delivered directly to your seat through an app on the desktop. That night our game of choice was Counter-Strike. In one of the lowest points of my gaming career, my classmates and I were crushed by our Chinese counterterrorist opponent.",{"type":29,"tag":38,"props":13454,"children":13455},{},[13456],{"type":29,"tag":192,"props":13457,"children":13460},{"alt":13458,"src":13459},"Chinese internet cafe","/static/three-body-problem/wangba.webp",[],{"type":29,"tag":38,"props":13462,"children":13463},{},[13464],{"type":35,"value":13465},"My favorite memory of that semester at Fudan University was travelling on an epic over-night sleeper train from Shanghai to Guangxi province with a school-sponsored class trip to see Guilin. Multiple games of sam-yuk-gu (3-6-9) ran in parallel across the matrix of 3-by-2 sleeper car bunk beds lining the train car like workloads distributed across multiple GPU cores. The rules of 3-6-9 are simple: a group of people go around in a circle counting up from 1. If your number contains a 3, 6 or 9, you clap once for each occurance of the number instead of saying your number. The first person to break the rules takes a drink. Then repeat indefinitely. The next morning we all boarded a boat cruise in a daze to see the Lijiang river's stunning limestone peaks featured on the 20 yuan note:",{"type":29,"tag":38,"props":13467,"children":13468},{},[13469],{"type":29,"tag":192,"props":13470,"children":13473},{"alt":13471,"src":13472},"20 yuan note with Guilin rock formations","/static/three-body-problem/twenty_small.gif",[],{"type":29,"tag":38,"props":13475,"children":13476},{},[13477],{"type":35,"value":13478},"My second job after college took me back to China where I specialized in the technologies, policies and applications of large scale battery projects as a research manager for China's energy storage industry association. The job exposed me to the power industry and cutting-edge battery projects, and also sharpened my technical Chinese as I was frequently reading, translating in a bi-linguagl environment. It was fun  I didn't realize it at the time, but that job was great preperation for reading Chinese Sci-Fi novels.",{"type":29,"tag":38,"props":13480,"children":13481},{},[13482],{"type":29,"tag":192,"props":13483,"children":13486},{"alt":13484,"src":13485},"State Grid HQ in Xi Cheng","/static/three-body-problem/invokeai/castles.png",[],{"type":29,"tag":38,"props":13488,"children":13489},{},[13490],{"type":35,"value":13491},"My first introduction to the 'Three-Body Problem' book came from one of my best friends from college. He lived at the inner-most leaf-node of one of Beijing's most labrythnian hutongs next to a family that trained racing pigeons. My friend and I bonded over our study of Chinese language, classical guitar and our experiences in Beijing. I strongly considered his recommendation to check out ‰∏â‰Ωì (Three Body), the Chinese Sci-Fi novel about alien life in a solar system with three stars as he described it, but I never had the chance to read the book.",{"type":29,"tag":13493,"props":13494,"children":13500},"iframe",{"width":13495,"height":13496,"src":13497,"title":13498,"frameBorder":12820,"allow":13499,"allowFullScreen":24},"100%",315,"https://www.youtube.com/embed/5lj99Uz1d50?si=TwrypbY4vTfeWGRf","YouTube video player","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",[],{"type":29,"tag":38,"props":13502,"children":13503},{},[13504],{"type":35,"value":13505},"Almost 10 years later I came across across a preview for the Netflix production of \"3 Body Problem\" scheduled to come out in early 2024. With the possibility of loosing my job weighing heavily on me, I picked up the books on Amazon hoping to have something to if I was going to be layed off. Over the weekend I was able to read a few of the chapters on my Kindle. I had not completely forgotten how to speak Chinese, and I could easily look up words and translate entire paragraphs with Google Translate.",{"type":29,"tag":71,"props":13507,"children":13509},{"id":13508},"chinese-in-numbers",[13510],{"type":35,"value":13511},"Chinese in numbers",{"type":29,"tag":38,"props":13513,"children":13514},{},[13515],{"type":35,"value":13516},"Here's a quick primer on the Chinese language from a mathematical perspective. This will be helpful before jumping into using NLP and LLMs with Chinese text later in this article.",{"type":29,"tag":38,"props":13518,"children":13519},{},[13520,13522,13529,13531,13538],{"type":35,"value":13521},"First, how many Chinese characters are there? This question isn't specific enough to have a single answer. A common rule of thumb that I have heard before says that there are over 50,000 characters in total with roughly 10,000 characters in use and about 3,000 characters frequently used in Chinese media and newspapers (",{"type":29,"tag":57,"props":13523,"children":13526},{"href":13524,"rel":13525},"https://en.wikipedia.org/wiki/Chinese_language#Vocabulary",[60],[13527],{"type":35,"value":13528},"source",{"type":35,"value":13530},"). ",{"type":29,"tag":57,"props":13532,"children":13535},{"href":13533,"rel":13534},"https://stackoverflow.com/a/1366113/6084948",[60],[13536],{"type":35,"value":13537},"This answer",{"type":35,"value":13539}," from StackOverflow's legendary #1 ranked user VonC gives a good answer based on the number of Unicode characters in the CJK Unified Ideographs block: 20,992.",{"type":29,"tag":38,"props":13541,"children":13542},{},[13543],{"type":35,"value":13544},"Here are some numbers and statistics to be better understand the text of the Three-Body Problem Chinese text:",{"type":29,"tag":88,"props":13546,"children":13547},{},[13548,13553,13558,13563,13568,13573],{"type":29,"tag":92,"props":13549,"children":13550},{},[13551],{"type":35,"value":13552},"188,380 total charactes in the book",{"type":29,"tag":92,"props":13554,"children":13555},{},[13556],{"type":35,"value":13557},"2,859 unique characters in the book",{"type":29,"tag":92,"props":13559,"children":13560},{},[13561],{"type":35,"value":13562},"36 chapters in the book",{"type":29,"tag":92,"props":13564,"children":13565},{},[13566],{"type":35,"value":13567},"average of 69.78 paragraphs per chapter",{"type":29,"tag":92,"props":13569,"children":13570},{},[13571],{"type":35,"value":13572},"total of 2,512 paragraphs in the book",{"type":29,"tag":92,"props":13574,"children":13575},{},[13576],{"type":35,"value":13577},"average of 74.99 characters per paragraph",{"type":29,"tag":123,"props":13579,"children":13581},{"id":13580},"character-frequency",[13582],{"type":35,"value":13583},"Character Frequency",{"type":29,"tag":38,"props":13585,"children":13586},{},[13587,13589,13596],{"type":35,"value":13588},"Let's look at how frequently each character in the book is used. We can also combine this with some data on the overall frequency of Chinese characters. The best measurement I found for overall character frequency is from ",{"type":29,"tag":57,"props":13590,"children":13593},{"href":13591,"rel":13592},"https://lingua.mtsu.edu/chinese-computing/statistics/char/list.php?Which=MO",[60],[13594],{"type":35,"value":13595},"Middle Tennessee State University",{"type":35,"value":13597},". Here's a visualization that shows of all of unique characters in the book. The height of a column represents how frequently a character occurs in the book, and the color represents the relatively frequency of the character in Chinese language overall.",{"type":29,"tag":13599,"props":13600,"children":13603},"div",{"className":13601},[13602],"wrap",[13604],{"type":29,"tag":13493,"props":13605,"children":13610},{"className":13606,"src":13608,"width":13495,"height":13609},[13607],"p-4","https://briancaffey.github.io/three-body-problem/tjs/load.html",550,[],{"type":29,"tag":71,"props":13612,"children":13614},{"id":13613},"meta-llms-and-grass-mud-horse",[13615],{"type":35,"value":13616},"Meta, LLMs, and Grass Mud Horse",{"type":29,"tag":38,"props":13618,"children":13619},{},[13620,13622,13629],{"type":35,"value":13621},"In recent months I have been following the development of big open source AI projects. Two projects in particular are InvokeAI, an image generation tool based on Stable Diffusion, and ",{"type":29,"tag":57,"props":13623,"children":13626},{"href":13624,"rel":13625},"https://ai.meta.com/llama/",[60],[13627],{"type":35,"value":13628},"LLaMA 2",{"type":35,"value":13630},", the latest generation of Meta's open source LLM. The name LLaMA stands for 'Large Language Model Meta AI', which happens to be the same spelling as the word for the domesticated South American camelid: llama. Before going deeper into LLMs we need a quick Chinese lesson.",{"type":29,"tag":38,"props":13632,"children":13633},{},[13634],{"type":35,"value":13635},"ËçâÊ≥•È©¨ is a non-technical word that referes to animals like Llama or Alpaca. It can be directly translated as \"Grass Mud Horse\" and it is phonetically similar to the most common Chinese profanity: Êìç‰Ω†Â¶à, which literally means \"f*** your mother\". The characters in these two words are nearly synonymous: the sounds of both words are \"cao ni ma\", but the tones are different, which in Chinese changes the meaning completely. The llama is basically a legendary Chinese internet meme subversive in the face of government censorship. ü¶ô was approved as part of Unicode 11.0 in 2018. The extended version of this profanity is ËçâÊ≥•È©¨ÊààÂ£Å (C«éon√≠m«é Gƒìb√¨: Grass Mud Horse Gobi), refering to the geographical origin of this mythical creature: the Gobi Dessert. This term is more explicit as it synonymous with \"f*** your mother's c***\". Coincidentally, the Gobi Desert is a region of Inner Mongolia which borders the mountainous region of Greater Khingan Range (Â§ßÂÖ¥ÂÆâÂ≤≠), the location of Red Coast and Radar Peak in Three-Body Problem where Ye Wenjie makes first contact with the Trisolarians.",{"type":29,"tag":38,"props":13637,"children":13638},{},[13639,13641,13652,13654,13661],{"type":35,"value":13640},"I requested access to Meta's LLaMa 2 models as soon as they came out and I was able to get it to run on my NVIDIA RTX 4090 GPU. I also joined a subreddit called ",{"type":29,"tag":57,"props":13642,"children":13645},{"href":13643,"rel":13644},"https://www.reddit.com/r/LocalLLaMA/",[60],[13646],{"type":29,"tag":427,"props":13647,"children":13649},{"className":13648},[],[13650],{"type":35,"value":13651},"r/LocalLLaMa",{"type":35,"value":13653}," with over seventy thousand members discussing how to run large language models on consumer hardware. Another annoucement that caught my attention in July was the release of ",{"type":29,"tag":57,"props":13655,"children":13658},{"href":13656,"rel":13657},"https://github.com/ymcui/Chinese-LLaMA-Alpaca-2",[60],[13659],{"type":35,"value":13660},"Chinese LLaMa 2",{"type":35,"value":13662},", an open-source large language model trained on Chinese and English which does very well against Chinese Language LLM Benchmarks such as the CMMCU: Chinese Massive Multitask Language Understanding.",{"type":29,"tag":38,"props":13664,"children":13665},{},[13666],{"type":29,"tag":192,"props":13667,"children":13670},{"alt":13668,"src":13669},"image of CMMLU","/static/three-body-problem/cmmlu.jpeg",[],{"type":29,"tag":71,"props":13672,"children":13674},{"id":13673},"translation-in-and-of-the-three-body-problem",[13675],{"type":35,"value":13676},"Translation in and of The Three-Body Problem",{"type":29,"tag":38,"props":13678,"children":13679},{},[13680],{"type":35,"value":13681},"There are two important plot developments related to language translation in the Three-Body Problem novel, both of which involve book‚Äôs main female protagonist Ye Wenjie. First, copying the translation of Rachel Carson's 'Silent Spring' leads to her being relegated to the Red Coast project. At the Red Coast Ye Wenjie communicates with extraterrestrial life through a universal translation technology developed by the top-secret project.",{"type":29,"tag":38,"props":13683,"children":13684},{},[13685],{"type":35,"value":13686},"Ken Liu‚Äôs translation of the Three-Body Problem book from Chinese to English places the events during the Cultural Revolution at the beginning of the book rather than in the middle of the book. According to Liu, this was done in order to avoid attention of government censors, and his original intention was to tell the story in this way, starting with the events of the late 1960's in China.",{"type":29,"tag":38,"props":13688,"children":13689},{},[13690],{"type":35,"value":13691},"I tried translating the Chinese text of the Three-Body Problem book using LLMs. I started with the Chinese-LLaMA-2 model and then tried Qwen-7B-Chat, Baichuan-13B-Chat when these models came out. I found that the Qwen-7B-Chat model worked best for my translation tasks. Qwen is short for Qian Wen (ÂçÉÈóÆ, or \"one thousand questions\") and is developed by Alibaba Cloud.",{"type":29,"tag":38,"props":13693,"children":13694},{},[13695],{"type":35,"value":13696},"How do you get an LLM to translate text? Ultimately the quality of the translation returned by the LLM depends on the prompt and other parameters used for inference. I experimented with both chat and completion approaches and tried lots of different kinds of prompts. The models I worked with have a 4K context window (the number of tokens the model can take as input when generating responses), so for translation tasks I had the LLM work on one paragraph at a time. Here's the prompt I used with the Qwen-7B-Chat model:",{"type":29,"tag":514,"props":13698,"children":13700},{"code":13699},"\"‰Ω†ÊòØ‰∏ÄÂêçÁøªËØë„ÄÇËØ∑Â∞ÜÊØèÊù°Ê∂àÊÅØ‰ªé‰∏≠ÊñáÁøªËØëÊàêËã±Êñá„ÄÇ\"\n(You are a translator. Please translate each message from Chinese to English.)\n",[13701],{"type":29,"tag":427,"props":13702,"children":13703},{"__ignoreMap":8},[13704],{"type":35,"value":13699},{"type":29,"tag":38,"props":13706,"children":13707},{},[13708],{"type":35,"value":13709},"I did some basic prompt engineering to get the LLM to translate the books in the Three-Body problem paragraph by paragraph. My computer was able to translate the first book overnight in under 500 minutes. Here are the results of my translation of Three-Body Problem with Qwen-7B-Chat model:",{"type":29,"tag":13493,"props":13711,"children":13714},{"className":13712,"src":13713,"width":13495,"height":13609},[13607],"https://briancaffey.github.io/three-body-problem/reader/?book=three_body&chapterNumber=1",[],{"type":29,"tag":38,"props":13716,"children":13717},{},[13718],{"type":35,"value":13719},"It was interesting to see the failure modes of translation tasks for the different models. Most of the time the LLM was able to provided accurate translations. Some of the failure modes I observed were:",{"type":29,"tag":88,"props":13721,"children":13722},{},[13723,13728,13733,13738],{"type":29,"tag":92,"props":13724,"children":13725},{},[13726],{"type":35,"value":13727},"a few Chinese characters would show up in the English translations",{"type":29,"tag":92,"props":13729,"children":13730},{},[13731],{"type":35,"value":13732},"a complete Chinese sentence would show up in an otherwise complete translation of a paragraph",{"type":29,"tag":92,"props":13734,"children":13735},{},[13736],{"type":35,"value":13737},"The LLM refused to translate certain paragraphs that included violent imagery, such as the violent scenes from the Cultural Revolution chapters",{"type":29,"tag":92,"props":13739,"children":13740},{},[13741],{"type":35,"value":13742},"If the sentence it was asked to translate was a question, the LLM would respond in Chinese to the question rather than providing a translation of the question itself",{"type":29,"tag":123,"props":13744,"children":13746},{"id":13745},"tokenization",[13747],{"type":35,"value":13748},"Tokenization",{"type":29,"tag":38,"props":13750,"children":13751},{},[13752],{"type":35,"value":13753},"When you feed a prompt to an LLM, it first puts the prompt through a process called tokenization. Tokenization takes a string of text and breaks it down into tokens (defined by the Large Language Model you are using). The process of tokenization is similar to the tokenization done by spaCy mentioned earlier. These tokens produced by LLM tokenization are numbers. Here's an example of tokenization in action using the Chinese-Llama-2 model:",{"type":29,"tag":514,"props":13755,"children":13757},{"code":13756,"language":2049,"meta":8,"className":2050,"style":8},"import json\nimport os\nfrom llama_cpp import Llama, LlamaTokenizer\n\nllm = Llama(\n    model_path=\"/path/to/models/ggml-model-q4_0.bin\",\n    n_ctx=4096,\n    n_gpu_layers=30\n)\n\ntokenizer = LlamaTokenizer(llama=llm)\n\nTEXT=\"Âú®ÈÇ£‰∏™Â∑≤Ë¢´ÂøòÂç¥ÁöÑÊó•Â≠êÈáåÔºåÂÆÉÁöÑ‰∏ñÁïåÈ¢†Ë¶Ü‰∫Ü„ÄÇÊ≥•ÂúüÈ£ûËµ∞ÔºåÂá∫Áé∞‰∫Ü‰∏ÄÊù°ÂèàÊ∑±ÂèàÂÆΩÁöÑÂ≥°Ë∞∑ÔºåÁÑ∂ÂêéÊ≥•ÂúüÂèàËΩ∞ÈöÜÈöÜÂú∞È£ûÂõûÊù•ÔºåÂ≥°Ë∞∑Ê∂àÂ§±‰∫ÜÔºåÂú®ÂéüÊù•Â≥°Ë∞∑ÁöÑÂ∞ΩÂ§¥Âá∫Áé∞‰∫Ü‰∏ÄÂ∫ßÈªëËâ≤ÁöÑÂ≠§Â≥∞„ÄÇÂÖ∂ÂÆûÔºåÂú®ËøôÁâáÂπøÈòîÁöÑÁñÜÂüü‰∏äÔºåËøôÁßç‰∫ãÂ∏∏Â∏∏ÂèëÁîüÔºåÊ≥•ÂúüÈ£ûËµ∞ÂèàÈ£ûÂõûÔºåÂ≥°Ë∞∑Âá∫Áé∞ÂèàÊ∂àÂ§±ÔºåÁÑ∂ÂêéÊòØÂ≠§Â≥∞Èôç‰∏¥ÔºåÂ•ΩÂÉèÊòØÁªôÊØèÊ¨°ÁÅæÂèòÊâì‰∏ä‰∏Ä‰∏™ÈÜíÁõÆÁöÑÊ†áËÆ∞„ÄÇË§êËöÅÂíåÂá†Áôæ‰∏™ÂêåÊóèÂ∏¶ÁùÄÂπ∏Â≠òÁöÑËöÅÂêéÂêëÂ§™Èò≥ËêΩ‰∏ãÁöÑÊñπÂêëËµ∞‰∫Ü‰∏ÄÊÆµË∑ØÔºåÂª∫Á´ã‰∫ÜÊñ∞ÁöÑÂ∏ùÂõΩ„ÄÇ\"\ntokens = tokenizer.encode(TEXT)\n",[13758],{"type":29,"tag":427,"props":13759,"children":13760},{"__ignoreMap":8},[13761,13773,13785,13806,13813,13829,13850,13871,13888,13895,13902,13932,13939,13956],{"type":29,"tag":441,"props":13762,"children":13763},{"class":525,"line":526},[13764,13768],{"type":29,"tag":441,"props":13765,"children":13766},{"style":2077},[13767],{"type":35,"value":4915},{"type":29,"tag":441,"props":13769,"children":13770},{"style":536},[13771],{"type":35,"value":13772}," json\n",{"type":29,"tag":441,"props":13774,"children":13775},{"class":525,"line":542},[13776,13780],{"type":29,"tag":441,"props":13777,"children":13778},{"style":2077},[13779],{"type":35,"value":4915},{"type":29,"tag":441,"props":13781,"children":13782},{"style":536},[13783],{"type":35,"value":13784}," os\n",{"type":29,"tag":441,"props":13786,"children":13787},{"class":525,"line":562},[13788,13792,13797,13801],{"type":29,"tag":441,"props":13789,"children":13790},{"style":2077},[13791],{"type":35,"value":4905},{"type":29,"tag":441,"props":13793,"children":13794},{"style":536},[13795],{"type":35,"value":13796}," llama_cpp ",{"type":29,"tag":441,"props":13798,"children":13799},{"style":2077},[13800],{"type":35,"value":4915},{"type":29,"tag":441,"props":13802,"children":13803},{"style":536},[13804],{"type":35,"value":13805}," Llama, LlamaTokenizer\n",{"type":29,"tag":441,"props":13807,"children":13808},{"class":525,"line":575},[13809],{"type":29,"tag":441,"props":13810,"children":13811},{"emptyLinePlaceholder":24},[13812],{"type":35,"value":1032},{"type":29,"tag":441,"props":13814,"children":13815},{"class":525,"line":594},[13816,13820,13824],{"type":29,"tag":441,"props":13817,"children":13818},{"style":536},[13819],{"type":35,"value":3991},{"type":29,"tag":441,"props":13821,"children":13822},{"style":2077},[13823],{"type":35,"value":2080},{"type":29,"tag":441,"props":13825,"children":13826},{"style":536},[13827],{"type":35,"value":13828}," Llama(\n",{"type":29,"tag":441,"props":13830,"children":13831},{"class":525,"line":607},[13832,13837,13841,13846],{"type":29,"tag":441,"props":13833,"children":13834},{"style":2071},[13835],{"type":35,"value":13836},"    model_path",{"type":29,"tag":441,"props":13838,"children":13839},{"style":2077},[13840],{"type":35,"value":2080},{"type":29,"tag":441,"props":13842,"children":13843},{"style":588},[13844],{"type":35,"value":13845},"\"/path/to/models/ggml-model-q4_0.bin\"",{"type":29,"tag":441,"props":13847,"children":13848},{"style":536},[13849],{"type":35,"value":4775},{"type":29,"tag":441,"props":13851,"children":13852},{"class":525,"line":631},[13853,13858,13862,13867],{"type":29,"tag":441,"props":13854,"children":13855},{"style":2071},[13856],{"type":35,"value":13857},"    n_ctx",{"type":29,"tag":441,"props":13859,"children":13860},{"style":2077},[13861],{"type":35,"value":2080},{"type":29,"tag":441,"props":13863,"children":13864},{"style":556},[13865],{"type":35,"value":13866},"4096",{"type":29,"tag":441,"props":13868,"children":13869},{"style":536},[13870],{"type":35,"value":4775},{"type":29,"tag":441,"props":13872,"children":13873},{"class":525,"line":644},[13874,13879,13883],{"type":29,"tag":441,"props":13875,"children":13876},{"style":2071},[13877],{"type":35,"value":13878},"    n_gpu_layers",{"type":29,"tag":441,"props":13880,"children":13881},{"style":2077},[13882],{"type":35,"value":2080},{"type":29,"tag":441,"props":13884,"children":13885},{"style":556},[13886],{"type":35,"value":13887},"30\n",{"type":29,"tag":441,"props":13889,"children":13890},{"class":525,"line":658},[13891],{"type":29,"tag":441,"props":13892,"children":13893},{"style":536},[13894],{"type":35,"value":3948},{"type":29,"tag":441,"props":13896,"children":13897},{"class":525,"line":671},[13898],{"type":29,"tag":441,"props":13899,"children":13900},{"emptyLinePlaceholder":24},[13901],{"type":35,"value":1032},{"type":29,"tag":441,"props":13903,"children":13904},{"class":525,"line":684},[13905,13910,13914,13919,13923,13927],{"type":29,"tag":441,"props":13906,"children":13907},{"style":536},[13908],{"type":35,"value":13909},"tokenizer ",{"type":29,"tag":441,"props":13911,"children":13912},{"style":2077},[13913],{"type":35,"value":2080},{"type":29,"tag":441,"props":13915,"children":13916},{"style":536},[13917],{"type":35,"value":13918}," LlamaTokenizer(",{"type":29,"tag":441,"props":13920,"children":13921},{"style":2071},[13922],{"type":35,"value":9202},{"type":29,"tag":441,"props":13924,"children":13925},{"style":2077},[13926],{"type":35,"value":2080},{"type":29,"tag":441,"props":13928,"children":13929},{"style":536},[13930],{"type":35,"value":13931},"llm)\n",{"type":29,"tag":441,"props":13933,"children":13934},{"class":525,"line":697},[13935],{"type":29,"tag":441,"props":13936,"children":13937},{"emptyLinePlaceholder":24},[13938],{"type":35,"value":1032},{"type":29,"tag":441,"props":13940,"children":13941},{"class":525,"line":720},[13942,13947,13951],{"type":29,"tag":441,"props":13943,"children":13944},{"style":556},[13945],{"type":35,"value":13946},"TEXT",{"type":29,"tag":441,"props":13948,"children":13949},{"style":2077},[13950],{"type":35,"value":2080},{"type":29,"tag":441,"props":13952,"children":13953},{"style":588},[13954],{"type":35,"value":13955},"\"Âú®ÈÇ£‰∏™Â∑≤Ë¢´ÂøòÂç¥ÁöÑÊó•Â≠êÈáåÔºåÂÆÉÁöÑ‰∏ñÁïåÈ¢†Ë¶Ü‰∫Ü„ÄÇÊ≥•ÂúüÈ£ûËµ∞ÔºåÂá∫Áé∞‰∫Ü‰∏ÄÊù°ÂèàÊ∑±ÂèàÂÆΩÁöÑÂ≥°Ë∞∑ÔºåÁÑ∂ÂêéÊ≥•ÂúüÂèàËΩ∞ÈöÜÈöÜÂú∞È£ûÂõûÊù•ÔºåÂ≥°Ë∞∑Ê∂àÂ§±‰∫ÜÔºåÂú®ÂéüÊù•Â≥°Ë∞∑ÁöÑÂ∞ΩÂ§¥Âá∫Áé∞‰∫Ü‰∏ÄÂ∫ßÈªëËâ≤ÁöÑÂ≠§Â≥∞„ÄÇÂÖ∂ÂÆûÔºåÂú®ËøôÁâáÂπøÈòîÁöÑÁñÜÂüü‰∏äÔºåËøôÁßç‰∫ãÂ∏∏Â∏∏ÂèëÁîüÔºåÊ≥•ÂúüÈ£ûËµ∞ÂèàÈ£ûÂõûÔºåÂ≥°Ë∞∑Âá∫Áé∞ÂèàÊ∂àÂ§±ÔºåÁÑ∂ÂêéÊòØÂ≠§Â≥∞Èôç‰∏¥ÔºåÂ•ΩÂÉèÊòØÁªôÊØèÊ¨°ÁÅæÂèòÊâì‰∏ä‰∏Ä‰∏™ÈÜíÁõÆÁöÑÊ†áËÆ∞„ÄÇË§êËöÅÂíåÂá†Áôæ‰∏™ÂêåÊóèÂ∏¶ÁùÄÂπ∏Â≠òÁöÑËöÅÂêéÂêëÂ§™Èò≥ËêΩ‰∏ãÁöÑÊñπÂêëËµ∞‰∫Ü‰∏ÄÊÆµË∑ØÔºåÂª∫Á´ã‰∫ÜÊñ∞ÁöÑÂ∏ùÂõΩ„ÄÇ\"\n",{"type":29,"tag":441,"props":13957,"children":13958},{"class":525,"line":737},[13959,13964,13968,13973,13977],{"type":29,"tag":441,"props":13960,"children":13961},{"style":536},[13962],{"type":35,"value":13963},"tokens ",{"type":29,"tag":441,"props":13965,"children":13966},{"style":2077},[13967],{"type":35,"value":2080},{"type":29,"tag":441,"props":13969,"children":13970},{"style":536},[13971],{"type":35,"value":13972}," tokenizer.encode(",{"type":29,"tag":441,"props":13974,"children":13975},{"style":556},[13976],{"type":35,"value":13946},{"type":29,"tag":441,"props":13978,"children":13979},{"style":536},[13980],{"type":35,"value":3948},{"type":29,"tag":514,"props":13982,"children":13984},{"code":13983},"print(str(tokens[:4]) + \" ...\")\n",[13985],{"type":29,"tag":427,"props":13986,"children":13987},{"__ignoreMap":8},[13988],{"type":35,"value":13983},{"type":29,"tag":6518,"props":13990,"children":13991},{},[13992],{"type":29,"tag":38,"props":13993,"children":13994},{},[13995,14000],{"type":29,"tag":441,"props":13996,"children":13997},{},[13998],{"type":35,"value":13999},"1, 30505, 32380, 36812",{"type":35,"value":14001}," ...",{"type":29,"tag":514,"props":14003,"children":14005},{"code":14004},"for token in tokens:\n    text = tokenizer.decode([token])\n    print(text, end=\" \")\n",[14006],{"type":29,"tag":427,"props":14007,"children":14008},{"__ignoreMap":8},[14009],{"type":35,"value":14004},{"type":29,"tag":6518,"props":14011,"children":14012},{},[14013],{"type":29,"tag":38,"props":14014,"children":14015},{},[14016],{"type":35,"value":14017},"Âú® ÈÇ£‰∏™ Â∑≤Ë¢´ Âøò Âç¥ ÁöÑÊó•Â≠ê Èáå Ôºå ÂÆÉÁöÑ ‰∏ñÁïå È¢†Ë¶Ü ‰∫Ü „ÄÇ Ê≥• Âúü È£û Ëµ∞ Ôºå Âá∫Áé∞‰∫Ü ‰∏ÄÊù° Âèà Ê∑± Âèà ÂÆΩ ÁöÑ Â≥°Ë∞∑ Ôºå ÁÑ∂Âêé Ê≥• Âúü Âèà ËΩ∞ ÈöÜ ÈöÜ Âú∞ È£û ÂõûÊù• Ôºå Â≥°Ë∞∑ Ê∂àÂ§± ‰∫Ü Ôºå Âú® ÂéüÊù• Â≥°Ë∞∑ ÁöÑ Â∞ΩÂ§¥ Âá∫Áé∞‰∫Ü ‰∏ÄÂ∫ß ÈªëËâ≤ ÁöÑ Â≠§ Â≥∞ „ÄÇ ÂÖ∂ÂÆû Ôºå Âú®Ëøô Áâá ÂπøÈòî ÁöÑ ÁñÜ Âüü ‰∏ä Ôºå ËøôÁßç‰∫ã Â∏∏Â∏∏ ÂèëÁîü Ôºå Ê≥• Âúü È£û Ëµ∞ Âèà È£û Âõû Ôºå Â≥°Ë∞∑ Âá∫Áé∞ Âèà Ê∂àÂ§± Ôºå ÁÑ∂Âêé ÊòØ Â≠§ Â≥∞ Èôç‰∏¥ Ôºå Â•ΩÂÉèÊòØ Áªô ÊØèÊ¨° ÁÅæ Âèò Êâì ‰∏ä ‰∏Ä‰∏™ ÈÜíÁõÆ ÁöÑ Ê†áËÆ∞ „ÄÇ Ë§ê ËöÅ Âíå Âá†Áôæ ‰∏™ Âêå Êóè Â∏¶ÁùÄ Âπ∏ Â≠ò ÁöÑ ËöÅ Âêé Âêë Â§™Èò≥ ËêΩ ‰∏ãÁöÑ ÊñπÂêë Ëµ∞‰∫Ü ‰∏ÄÊÆµ Ë∑Ø Ôºå Âª∫Á´ã‰∫Ü Êñ∞ÁöÑ Â∏ùÂõΩ „ÄÇ",{"type":29,"tag":514,"props":14019,"children":14021},{"code":14020,"language":2049,"meta":8,"className":2050,"style":8},"english_text = \"This is an example of tokenization using a large language model.\"\nenglish_tokens = tokenizer.encode(english_text)\nprint(str(english_tokens[:4]) + \" ...\")\n\nfor token in english_tokens:\n    text = tokenizer.decode([token])\n    print(f\"'{text}'\", end=\" \")\n",[14022],{"type":29,"tag":427,"props":14023,"children":14024},{"__ignoreMap":8},[14025,14042,14059,14101,14108,14129,14146],{"type":29,"tag":441,"props":14026,"children":14027},{"class":525,"line":526},[14028,14033,14037],{"type":29,"tag":441,"props":14029,"children":14030},{"style":536},[14031],{"type":35,"value":14032},"english_text ",{"type":29,"tag":441,"props":14034,"children":14035},{"style":2077},[14036],{"type":35,"value":2080},{"type":29,"tag":441,"props":14038,"children":14039},{"style":588},[14040],{"type":35,"value":14041}," \"This is an example of tokenization using a large language model.\"\n",{"type":29,"tag":441,"props":14043,"children":14044},{"class":525,"line":542},[14045,14050,14054],{"type":29,"tag":441,"props":14046,"children":14047},{"style":536},[14048],{"type":35,"value":14049},"english_tokens ",{"type":29,"tag":441,"props":14051,"children":14052},{"style":2077},[14053],{"type":35,"value":2080},{"type":29,"tag":441,"props":14055,"children":14056},{"style":536},[14057],{"type":35,"value":14058}," tokenizer.encode(english_text)\n",{"type":29,"tag":441,"props":14060,"children":14061},{"class":525,"line":562},[14062,14066,14070,14074,14079,14083,14088,14092,14097],{"type":29,"tag":441,"props":14063,"children":14064},{"style":2176},[14065],{"type":35,"value":7754},{"type":29,"tag":441,"props":14067,"children":14068},{"style":536},[14069],{"type":35,"value":2068},{"type":29,"tag":441,"props":14071,"children":14072},{"style":2303},[14073],{"type":35,"value":2306},{"type":29,"tag":441,"props":14075,"children":14076},{"style":536},[14077],{"type":35,"value":14078},"(english_tokens[:",{"type":29,"tag":441,"props":14080,"children":14081},{"style":556},[14082],{"type":35,"value":4045},{"type":29,"tag":441,"props":14084,"children":14085},{"style":536},[14086],{"type":35,"value":14087},"]) ",{"type":29,"tag":441,"props":14089,"children":14090},{"style":2077},[14091],{"type":35,"value":11816},{"type":29,"tag":441,"props":14093,"children":14094},{"style":588},[14095],{"type":35,"value":14096}," \" ...\"",{"type":29,"tag":441,"props":14098,"children":14099},{"style":536},[14100],{"type":35,"value":3948},{"type":29,"tag":441,"props":14102,"children":14103},{"class":525,"line":575},[14104],{"type":29,"tag":441,"props":14105,"children":14106},{"emptyLinePlaceholder":24},[14107],{"type":35,"value":1032},{"type":29,"tag":441,"props":14109,"children":14110},{"class":525,"line":594},[14111,14115,14120,14124],{"type":29,"tag":441,"props":14112,"children":14113},{"style":2077},[14114],{"type":35,"value":4702},{"type":29,"tag":441,"props":14116,"children":14117},{"style":536},[14118],{"type":35,"value":14119}," token ",{"type":29,"tag":441,"props":14121,"children":14122},{"style":2077},[14123],{"type":35,"value":4155},{"type":29,"tag":441,"props":14125,"children":14126},{"style":536},[14127],{"type":35,"value":14128}," english_tokens:\n",{"type":29,"tag":441,"props":14130,"children":14131},{"class":525,"line":607},[14132,14137,14141],{"type":29,"tag":441,"props":14133,"children":14134},{"style":536},[14135],{"type":35,"value":14136},"    text ",{"type":29,"tag":441,"props":14138,"children":14139},{"style":2077},[14140],{"type":35,"value":2080},{"type":29,"tag":441,"props":14142,"children":14143},{"style":536},[14144],{"type":35,"value":14145}," tokenizer.decode([token])\n",{"type":29,"tag":441,"props":14147,"children":14148},{"class":525,"line":631},[14149,14154,14158,14162,14167,14171,14175,14179,14184,14188,14193,14197,14202],{"type":29,"tag":441,"props":14150,"children":14151},{"style":2176},[14152],{"type":35,"value":14153},"    print",{"type":29,"tag":441,"props":14155,"children":14156},{"style":536},[14157],{"type":35,"value":2068},{"type":29,"tag":441,"props":14159,"children":14160},{"style":2091},[14161],{"type":35,"value":2750},{"type":29,"tag":441,"props":14163,"children":14164},{"style":588},[14165],{"type":35,"value":14166},"\"'",{"type":29,"tag":441,"props":14168,"children":14169},{"style":556},[14170],{"type":35,"value":2760},{"type":29,"tag":441,"props":14172,"children":14173},{"style":536},[14174],{"type":35,"value":35},{"type":29,"tag":441,"props":14176,"children":14177},{"style":556},[14178],{"type":35,"value":2769},{"type":29,"tag":441,"props":14180,"children":14181},{"style":588},[14182],{"type":35,"value":14183},"'\"",{"type":29,"tag":441,"props":14185,"children":14186},{"style":536},[14187],{"type":35,"value":2193},{"type":29,"tag":441,"props":14189,"children":14190},{"style":2071},[14191],{"type":35,"value":14192},"end",{"type":29,"tag":441,"props":14194,"children":14195},{"style":2077},[14196],{"type":35,"value":2080},{"type":29,"tag":441,"props":14198,"children":14199},{"style":588},[14200],{"type":35,"value":14201},"\" \"",{"type":29,"tag":441,"props":14203,"children":14204},{"style":536},[14205],{"type":35,"value":3948},{"type":29,"tag":6518,"props":14207,"children":14208},{},[14209],{"type":29,"tag":38,"props":14210,"children":14211},{},[14212,14217],{"type":29,"tag":441,"props":14213,"children":14214},{},[14215],{"type":35,"value":14216},"1, 4013, 338, 385",{"type":35,"value":14001},{"type":29,"tag":6518,"props":14219,"children":14220},{},[14221],{"type":29,"tag":38,"props":14222,"children":14223},{},[14224],{"type":35,"value":14225},"'' 'This' ' is' ' an' ' example' ' of' ' token' 'ization' ' using' ' a' ' large' ' language' ' model' '.'",{"type":29,"tag":38,"props":14227,"children":14228},{},[14229],{"type":35,"value":14230},"Here are some key differences between English and Chinese that have implications for how the language is tokenized by large language models:",{"type":29,"tag":88,"props":14232,"children":14233},{},[14234,14239,14244,14249,14254,14259,14264],{"type":29,"tag":92,"props":14235,"children":14236},{},[14237],{"type":35,"value":14238},"Chinese does not use spaces between words like English does",{"type":29,"tag":92,"props":14240,"children":14241},{},[14242],{"type":35,"value":14243},"Chinese words are typically formed from 2 or more characters",{"type":29,"tag":92,"props":14245,"children":14246},{},[14247],{"type":35,"value":14248},"Chinese verbs are not conjugated and do not have different tenses",{"type":29,"tag":92,"props":14250,"children":14251},{},[14252],{"type":35,"value":14253},"Chinese words don't have singular and plural variants",{"type":29,"tag":92,"props":14255,"children":14256},{},[14257],{"type":35,"value":14258},"Chinese grammar is very simple and is similar to English",{"type":29,"tag":92,"props":14260,"children":14261},{},[14262],{"type":35,"value":14263},"Chinese characters do not have capitization like ASCII characters",{"type":29,"tag":92,"props":14265,"children":14266},{},[14267],{"type":35,"value":14268},"The token represented by the number 1 encodes a starting token",{"type":29,"tag":71,"props":14270,"children":14272},{"id":14271},"imagining-scenes-from-three-body-problem-with-stable-diffusion",[14273],{"type":35,"value":14274},"Imagining scenes from Three-Body Problem with Stable Diffusion",{"type":29,"tag":38,"props":14276,"children":14277},{},[14278],{"type":35,"value":14279},"Here are some images I generated using Stable Diffusion with InvokeAI that depict scenes from the Three-Body Problem book. These scenes portray solutions to the Three-Body Problem that players in the Three-Body game devised. The first is a Confucian system of etiquette for predicting the movement of the three suns. The second is a human-powered computer that Qin Shi Huang used to try to predict the movement of the three suns.",{"type":29,"tag":6518,"props":14281,"children":14282},{},[14283],{"type":29,"tag":38,"props":14284,"children":14285},{},[14286],{"type":35,"value":14287},"Prompt: Ceremonies and etiquette system related to the sun and multiple celestial++ bodies Confucius artistic style",{"type":29,"tag":14289,"props":14290,"children":14291},"client-only",{},[14292],{"type":29,"tag":14293,"props":14294,"children":14297},"carousel",{":count":14295,"dir":14296},"8","confucius",[],{"type":29,"tag":6518,"props":14299,"children":14300},{},[14301],{"type":29,"tag":38,"props":14302,"children":14303},{},[14304],{"type":35,"value":14305},"array of chinese++ warriors++ on a electronics+ circuit+ board qing+ dynasty style art logic puzzle",{"type":29,"tag":14289,"props":14307,"children":14308},{},[14309],{"type":29,"tag":14293,"props":14310,"children":14313},{":count":14311,"dir":14312},"5","computer",[],{"type":29,"tag":38,"props":14315,"children":14316},{},[14317],{"type":35,"value":14318},"Congrats to the InvokeAI team on the 3.0 release. It has been awesome to use and the current docker compose setup is a huge improvement on the 2.x version.",{"type":29,"tag":71,"props":14320,"children":14322},{"id":14321},"n-body-simulations-cuda-and-threejs",[14323],{"type":35,"value":14324},"n-body simulations, CUDA and Three.js",{"type":29,"tag":38,"props":14326,"children":14327},{},[14328],{"type":35,"value":14329},"The nbody problem has no closed-form analytical solution, but it is possible to do a basic simulation of the three-body problem on consumer hardware and open source software, like NVIDIA and CUDA.",{"type":29,"tag":123,"props":14331,"children":14333},{"id":14332},"three-body-cuda-simulation",[14334],{"type":35,"value":14335},"Three-Body CUDA simulation",{"type":29,"tag":38,"props":14337,"children":14338},{},[14339],{"type":35,"value":14340},"I wrote a simple program with the help of ChatGPT for running nbody problem simulations. The program uses CuPy, a Python library that exposes APIs for doing matrix multiplication to predict the position of three bodies using Euclidian Integration. Here's the script:",{"type":29,"tag":514,"props":14342,"children":14346},{"code":14343,"language":14344,"meta":8,"className":14345,"style":8},"import numpy as np\nimport cupy as cp\nimport time\nimport json\n\n# Simulation parameters\nNUM_PARTICLES = 3\nDIMENSIONS = 3 # 3D space\nNUM_STEPS = 30\nDT = 0.1\n\n# Generate initial positions and velocities\nnp_positions = np.random.randn(NUM_PARTICLES, DIMENSIONS)\nnp_velocities = np.random.randn(NUM_PARTICLES, DIMENSIONS)\n\ncp_positions = cp.array(np_positions)\ncp_velocities = cp.array(np_velocities)\n\nnp_ticks = np.expand_dims(np_positions, axis=0)\ncp_ticks = cp.array(np_ticks)\n\n# nbody simulation loop\nstart_time = time.time()\nfor step in range(NUM_STEPS):\n\n    # this gets pairwise differences\n    diff = cp_positions[:, None, :] - cp_positions[None, :, :]\n    distances = cp.sqrt(cp.sum(diff**2, axis=2))\n\n    # avoid division by zero\n    epsilon = 1e-5\n    inv_distances = 1.0 / cp.maximum(distances, epsilon)\n\n    # calculate forces\n    cp_forces = cp.sum((diff.T * inv_distances**3).T, axis=1)\n\n    # update velocities and positions\n    cp_velocities += DT * cp_forces\n    cp_positions += DT * cp_velocities\n    cp_ticks = cp.append(cp_ticks, cp.expand_dims(cp_positions, 0), 0)\n\nsim_time = time.time() - start_time\nprint(\"Simulation time:\", sim_time)\n\n\nclass NumpyArrayEncoder(json.JSONEncoder):\n    def default(self, obj):\n        if isinstance(obj, np.ndarray):\n            return obj.tolist()\n        return json.JSONEncoder.default(self, obj)\n\n\nnp_ticks = cp_ticks.get()\n\n\n# this is data we can work with in python and write to a file\nwith open(\"ticks.json\", \"w\") as f:\n    f.write(json.dumps(np_ticks, cls=NumpyArrayEncoder))\n","py","language-py shiki shiki-themes github-light github-dark monokai",[14347],{"type":29,"tag":427,"props":14348,"children":14349},{"__ignoreMap":8},[14350,14371,14392,14404,14415,14422,14430,14447,14469,14486,14503,14510,14518,14551,14583,14590,14607,14624,14631,14665,14682,14689,14697,14714,14746,14753,14761,14805,14851,14858,14866,14883,14910,14917,14925,14981,14988,14996,15024,15049,15083,15090,15116,15137,15144,15151,15184,15217,15234,15246,15267,15274,15281,15297,15304,15311,15319,15361],{"type":29,"tag":441,"props":14351,"children":14352},{"class":525,"line":526},[14353,14357,14362,14366],{"type":29,"tag":441,"props":14354,"children":14355},{"style":2077},[14356],{"type":35,"value":4915},{"type":29,"tag":441,"props":14358,"children":14359},{"style":536},[14360],{"type":35,"value":14361}," numpy ",{"type":29,"tag":441,"props":14363,"children":14364},{"style":2077},[14365],{"type":35,"value":5163},{"type":29,"tag":441,"props":14367,"children":14368},{"style":536},[14369],{"type":35,"value":14370}," np\n",{"type":29,"tag":441,"props":14372,"children":14373},{"class":525,"line":542},[14374,14378,14383,14387],{"type":29,"tag":441,"props":14375,"children":14376},{"style":2077},[14377],{"type":35,"value":4915},{"type":29,"tag":441,"props":14379,"children":14380},{"style":536},[14381],{"type":35,"value":14382}," cupy ",{"type":29,"tag":441,"props":14384,"children":14385},{"style":2077},[14386],{"type":35,"value":5163},{"type":29,"tag":441,"props":14388,"children":14389},{"style":536},[14390],{"type":35,"value":14391}," cp\n",{"type":29,"tag":441,"props":14393,"children":14394},{"class":525,"line":562},[14395,14399],{"type":29,"tag":441,"props":14396,"children":14397},{"style":2077},[14398],{"type":35,"value":4915},{"type":29,"tag":441,"props":14400,"children":14401},{"style":536},[14402],{"type":35,"value":14403}," time\n",{"type":29,"tag":441,"props":14405,"children":14406},{"class":525,"line":575},[14407,14411],{"type":29,"tag":441,"props":14408,"children":14409},{"style":2077},[14410],{"type":35,"value":4915},{"type":29,"tag":441,"props":14412,"children":14413},{"style":536},[14414],{"type":35,"value":13772},{"type":29,"tag":441,"props":14416,"children":14417},{"class":525,"line":594},[14418],{"type":29,"tag":441,"props":14419,"children":14420},{"emptyLinePlaceholder":24},[14421],{"type":35,"value":1032},{"type":29,"tag":441,"props":14423,"children":14424},{"class":525,"line":607},[14425],{"type":29,"tag":441,"props":14426,"children":14427},{"style":1181},[14428],{"type":35,"value":14429},"# Simulation parameters\n",{"type":29,"tag":441,"props":14431,"children":14432},{"class":525,"line":631},[14433,14438,14442],{"type":29,"tag":441,"props":14434,"children":14435},{"style":556},[14436],{"type":35,"value":14437},"NUM_PARTICLES",{"type":29,"tag":441,"props":14439,"children":14440},{"style":2077},[14441],{"type":35,"value":9880},{"type":29,"tag":441,"props":14443,"children":14444},{"style":556},[14445],{"type":35,"value":14446}," 3\n",{"type":29,"tag":441,"props":14448,"children":14449},{"class":525,"line":644},[14450,14455,14459,14464],{"type":29,"tag":441,"props":14451,"children":14452},{"style":556},[14453],{"type":35,"value":14454},"DIMENSIONS",{"type":29,"tag":441,"props":14456,"children":14457},{"style":2077},[14458],{"type":35,"value":9880},{"type":29,"tag":441,"props":14460,"children":14461},{"style":556},[14462],{"type":35,"value":14463}," 3",{"type":29,"tag":441,"props":14465,"children":14466},{"style":1181},[14467],{"type":35,"value":14468}," # 3D space\n",{"type":29,"tag":441,"props":14470,"children":14471},{"class":525,"line":658},[14472,14477,14481],{"type":29,"tag":441,"props":14473,"children":14474},{"style":556},[14475],{"type":35,"value":14476},"NUM_STEPS",{"type":29,"tag":441,"props":14478,"children":14479},{"style":2077},[14480],{"type":35,"value":9880},{"type":29,"tag":441,"props":14482,"children":14483},{"style":556},[14484],{"type":35,"value":14485}," 30\n",{"type":29,"tag":441,"props":14487,"children":14488},{"class":525,"line":671},[14489,14494,14498],{"type":29,"tag":441,"props":14490,"children":14491},{"style":556},[14492],{"type":35,"value":14493},"DT",{"type":29,"tag":441,"props":14495,"children":14496},{"style":2077},[14497],{"type":35,"value":9880},{"type":29,"tag":441,"props":14499,"children":14500},{"style":556},[14501],{"type":35,"value":14502}," 0.1\n",{"type":29,"tag":441,"props":14504,"children":14505},{"class":525,"line":684},[14506],{"type":29,"tag":441,"props":14507,"children":14508},{"emptyLinePlaceholder":24},[14509],{"type":35,"value":1032},{"type":29,"tag":441,"props":14511,"children":14512},{"class":525,"line":697},[14513],{"type":29,"tag":441,"props":14514,"children":14515},{"style":1181},[14516],{"type":35,"value":14517},"# Generate initial positions and velocities\n",{"type":29,"tag":441,"props":14519,"children":14520},{"class":525,"line":720},[14521,14526,14530,14535,14539,14543,14547],{"type":29,"tag":441,"props":14522,"children":14523},{"style":536},[14524],{"type":35,"value":14525},"np_positions ",{"type":29,"tag":441,"props":14527,"children":14528},{"style":2077},[14529],{"type":35,"value":2080},{"type":29,"tag":441,"props":14531,"children":14532},{"style":536},[14533],{"type":35,"value":14534}," np.random.randn(",{"type":29,"tag":441,"props":14536,"children":14537},{"style":556},[14538],{"type":35,"value":14437},{"type":29,"tag":441,"props":14540,"children":14541},{"style":536},[14542],{"type":35,"value":2193},{"type":29,"tag":441,"props":14544,"children":14545},{"style":556},[14546],{"type":35,"value":14454},{"type":29,"tag":441,"props":14548,"children":14549},{"style":536},[14550],{"type":35,"value":3948},{"type":29,"tag":441,"props":14552,"children":14553},{"class":525,"line":737},[14554,14559,14563,14567,14571,14575,14579],{"type":29,"tag":441,"props":14555,"children":14556},{"style":536},[14557],{"type":35,"value":14558},"np_velocities ",{"type":29,"tag":441,"props":14560,"children":14561},{"style":2077},[14562],{"type":35,"value":2080},{"type":29,"tag":441,"props":14564,"children":14565},{"style":536},[14566],{"type":35,"value":14534},{"type":29,"tag":441,"props":14568,"children":14569},{"style":556},[14570],{"type":35,"value":14437},{"type":29,"tag":441,"props":14572,"children":14573},{"style":536},[14574],{"type":35,"value":2193},{"type":29,"tag":441,"props":14576,"children":14577},{"style":556},[14578],{"type":35,"value":14454},{"type":29,"tag":441,"props":14580,"children":14581},{"style":536},[14582],{"type":35,"value":3948},{"type":29,"tag":441,"props":14584,"children":14585},{"class":525,"line":755},[14586],{"type":29,"tag":441,"props":14587,"children":14588},{"emptyLinePlaceholder":24},[14589],{"type":35,"value":1032},{"type":29,"tag":441,"props":14591,"children":14592},{"class":525,"line":773},[14593,14598,14602],{"type":29,"tag":441,"props":14594,"children":14595},{"style":536},[14596],{"type":35,"value":14597},"cp_positions ",{"type":29,"tag":441,"props":14599,"children":14600},{"style":2077},[14601],{"type":35,"value":2080},{"type":29,"tag":441,"props":14603,"children":14604},{"style":536},[14605],{"type":35,"value":14606}," cp.array(np_positions)\n",{"type":29,"tag":441,"props":14608,"children":14609},{"class":525,"line":794},[14610,14615,14619],{"type":29,"tag":441,"props":14611,"children":14612},{"style":536},[14613],{"type":35,"value":14614},"cp_velocities ",{"type":29,"tag":441,"props":14616,"children":14617},{"style":2077},[14618],{"type":35,"value":2080},{"type":29,"tag":441,"props":14620,"children":14621},{"style":536},[14622],{"type":35,"value":14623}," cp.array(np_velocities)\n",{"type":29,"tag":441,"props":14625,"children":14626},{"class":525,"line":810},[14627],{"type":29,"tag":441,"props":14628,"children":14629},{"emptyLinePlaceholder":24},[14630],{"type":35,"value":1032},{"type":29,"tag":441,"props":14632,"children":14633},{"class":525,"line":827},[14634,14639,14643,14648,14653,14657,14661],{"type":29,"tag":441,"props":14635,"children":14636},{"style":536},[14637],{"type":35,"value":14638},"np_ticks ",{"type":29,"tag":441,"props":14640,"children":14641},{"style":2077},[14642],{"type":35,"value":2080},{"type":29,"tag":441,"props":14644,"children":14645},{"style":536},[14646],{"type":35,"value":14647}," np.expand_dims(np_positions, ",{"type":29,"tag":441,"props":14649,"children":14650},{"style":2071},[14651],{"type":35,"value":14652},"axis",{"type":29,"tag":441,"props":14654,"children":14655},{"style":2077},[14656],{"type":35,"value":2080},{"type":29,"tag":441,"props":14658,"children":14659},{"style":556},[14660],{"type":35,"value":12820},{"type":29,"tag":441,"props":14662,"children":14663},{"style":536},[14664],{"type":35,"value":3948},{"type":29,"tag":441,"props":14666,"children":14667},{"class":525,"line":844},[14668,14673,14677],{"type":29,"tag":441,"props":14669,"children":14670},{"style":536},[14671],{"type":35,"value":14672},"cp_ticks ",{"type":29,"tag":441,"props":14674,"children":14675},{"style":2077},[14676],{"type":35,"value":2080},{"type":29,"tag":441,"props":14678,"children":14679},{"style":536},[14680],{"type":35,"value":14681}," cp.array(np_ticks)\n",{"type":29,"tag":441,"props":14683,"children":14684},{"class":525,"line":865},[14685],{"type":29,"tag":441,"props":14686,"children":14687},{"emptyLinePlaceholder":24},[14688],{"type":35,"value":1032},{"type":29,"tag":441,"props":14690,"children":14691},{"class":525,"line":881},[14692],{"type":29,"tag":441,"props":14693,"children":14694},{"style":1181},[14695],{"type":35,"value":14696},"# nbody simulation loop\n",{"type":29,"tag":441,"props":14698,"children":14699},{"class":525,"line":898},[14700,14705,14709],{"type":29,"tag":441,"props":14701,"children":14702},{"style":536},[14703],{"type":35,"value":14704},"start_time ",{"type":29,"tag":441,"props":14706,"children":14707},{"style":2077},[14708],{"type":35,"value":2080},{"type":29,"tag":441,"props":14710,"children":14711},{"style":536},[14712],{"type":35,"value":14713}," time.time()\n",{"type":29,"tag":441,"props":14715,"children":14716},{"class":525,"line":915},[14717,14721,14726,14730,14734,14738,14742],{"type":29,"tag":441,"props":14718,"children":14719},{"style":2077},[14720],{"type":35,"value":4702},{"type":29,"tag":441,"props":14722,"children":14723},{"style":536},[14724],{"type":35,"value":14725}," step ",{"type":29,"tag":441,"props":14727,"children":14728},{"style":2077},[14729],{"type":35,"value":4155},{"type":29,"tag":441,"props":14731,"children":14732},{"style":2176},[14733],{"type":35,"value":5078},{"type":29,"tag":441,"props":14735,"children":14736},{"style":536},[14737],{"type":35,"value":2068},{"type":29,"tag":441,"props":14739,"children":14740},{"style":556},[14741],{"type":35,"value":14476},{"type":29,"tag":441,"props":14743,"children":14744},{"style":536},[14745],{"type":35,"value":2165},{"type":29,"tag":441,"props":14747,"children":14748},{"class":525,"line":928},[14749],{"type":29,"tag":441,"props":14750,"children":14751},{"emptyLinePlaceholder":24},[14752],{"type":35,"value":1032},{"type":29,"tag":441,"props":14754,"children":14755},{"class":525,"line":946},[14756],{"type":29,"tag":441,"props":14757,"children":14758},{"style":1181},[14759],{"type":35,"value":14760},"    # this gets pairwise differences\n",{"type":29,"tag":441,"props":14762,"children":14763},{"class":525,"line":959},[14764,14769,14773,14778,14782,14787,14791,14796,14800],{"type":29,"tag":441,"props":14765,"children":14766},{"style":536},[14767],{"type":35,"value":14768},"    diff ",{"type":29,"tag":441,"props":14770,"children":14771},{"style":2077},[14772],{"type":35,"value":2080},{"type":29,"tag":441,"props":14774,"children":14775},{"style":536},[14776],{"type":35,"value":14777}," cp_positions[:, ",{"type":29,"tag":441,"props":14779,"children":14780},{"style":556},[14781],{"type":35,"value":2467},{"type":29,"tag":441,"props":14783,"children":14784},{"style":536},[14785],{"type":35,"value":14786},", :] ",{"type":29,"tag":441,"props":14788,"children":14789},{"style":2077},[14790],{"type":35,"value":11896},{"type":29,"tag":441,"props":14792,"children":14793},{"style":536},[14794],{"type":35,"value":14795}," cp_positions[",{"type":29,"tag":441,"props":14797,"children":14798},{"style":556},[14799],{"type":35,"value":2467},{"type":29,"tag":441,"props":14801,"children":14802},{"style":536},[14803],{"type":35,"value":14804},", :, :]\n",{"type":29,"tag":441,"props":14806,"children":14807},{"class":525,"line":972},[14808,14813,14817,14822,14827,14831,14835,14839,14843,14847],{"type":29,"tag":441,"props":14809,"children":14810},{"style":536},[14811],{"type":35,"value":14812},"    distances ",{"type":29,"tag":441,"props":14814,"children":14815},{"style":2077},[14816],{"type":35,"value":2080},{"type":29,"tag":441,"props":14818,"children":14819},{"style":536},[14820],{"type":35,"value":14821}," cp.sqrt(cp.sum(diff",{"type":29,"tag":441,"props":14823,"children":14824},{"style":2077},[14825],{"type":35,"value":14826},"**",{"type":29,"tag":441,"props":14828,"children":14829},{"style":556},[14830],{"type":35,"value":11929},{"type":29,"tag":441,"props":14832,"children":14833},{"style":536},[14834],{"type":35,"value":2193},{"type":29,"tag":441,"props":14836,"children":14837},{"style":2071},[14838],{"type":35,"value":14652},{"type":29,"tag":441,"props":14840,"children":14841},{"style":2077},[14842],{"type":35,"value":2080},{"type":29,"tag":441,"props":14844,"children":14845},{"style":556},[14846],{"type":35,"value":11929},{"type":29,"tag":441,"props":14848,"children":14849},{"style":536},[14850],{"type":35,"value":4609},{"type":29,"tag":441,"props":14852,"children":14853},{"class":525,"line":990},[14854],{"type":29,"tag":441,"props":14855,"children":14856},{"emptyLinePlaceholder":24},[14857],{"type":35,"value":1032},{"type":29,"tag":441,"props":14859,"children":14860},{"class":525,"line":1008},[14861],{"type":29,"tag":441,"props":14862,"children":14863},{"style":1181},[14864],{"type":35,"value":14865},"    # avoid division by zero\n",{"type":29,"tag":441,"props":14867,"children":14868},{"class":525,"line":1026},[14869,14874,14878],{"type":29,"tag":441,"props":14870,"children":14871},{"style":536},[14872],{"type":35,"value":14873},"    epsilon ",{"type":29,"tag":441,"props":14875,"children":14876},{"style":2077},[14877],{"type":35,"value":2080},{"type":29,"tag":441,"props":14879,"children":14880},{"style":556},[14881],{"type":35,"value":14882}," 1e-5\n",{"type":29,"tag":441,"props":14884,"children":14885},{"class":525,"line":1035},[14886,14891,14895,14900,14905],{"type":29,"tag":441,"props":14887,"children":14888},{"style":536},[14889],{"type":35,"value":14890},"    inv_distances ",{"type":29,"tag":441,"props":14892,"children":14893},{"style":2077},[14894],{"type":35,"value":2080},{"type":29,"tag":441,"props":14896,"children":14897},{"style":556},[14898],{"type":35,"value":14899}," 1.0",{"type":29,"tag":441,"props":14901,"children":14902},{"style":2077},[14903],{"type":35,"value":14904}," /",{"type":29,"tag":441,"props":14906,"children":14907},{"style":536},[14908],{"type":35,"value":14909}," cp.maximum(distances, epsilon)\n",{"type":29,"tag":441,"props":14911,"children":14912},{"class":525,"line":1048},[14913],{"type":29,"tag":441,"props":14914,"children":14915},{"emptyLinePlaceholder":24},[14916],{"type":35,"value":1032},{"type":29,"tag":441,"props":14918,"children":14919},{"class":525,"line":1061},[14920],{"type":29,"tag":441,"props":14921,"children":14922},{"style":1181},[14923],{"type":35,"value":14924},"    # calculate forces\n",{"type":29,"tag":441,"props":14926,"children":14927},{"class":525,"line":1078},[14928,14933,14937,14942,14946,14951,14955,14960,14965,14969,14973,14977],{"type":29,"tag":441,"props":14929,"children":14930},{"style":536},[14931],{"type":35,"value":14932},"    cp_forces ",{"type":29,"tag":441,"props":14934,"children":14935},{"style":2077},[14936],{"type":35,"value":2080},{"type":29,"tag":441,"props":14938,"children":14939},{"style":536},[14940],{"type":35,"value":14941}," cp.sum((diff.T ",{"type":29,"tag":441,"props":14943,"children":14944},{"style":2077},[14945],{"type":35,"value":12500},{"type":29,"tag":441,"props":14947,"children":14948},{"style":536},[14949],{"type":35,"value":14950}," inv_distances",{"type":29,"tag":441,"props":14952,"children":14953},{"style":2077},[14954],{"type":35,"value":14826},{"type":29,"tag":441,"props":14956,"children":14957},{"style":556},[14958],{"type":35,"value":14959},"3",{"type":29,"tag":441,"props":14961,"children":14962},{"style":536},[14963],{"type":35,"value":14964},").T, ",{"type":29,"tag":441,"props":14966,"children":14967},{"style":2071},[14968],{"type":35,"value":14652},{"type":29,"tag":441,"props":14970,"children":14971},{"style":2077},[14972],{"type":35,"value":2080},{"type":29,"tag":441,"props":14974,"children":14975},{"style":556},[14976],{"type":35,"value":5087},{"type":29,"tag":441,"props":14978,"children":14979},{"style":536},[14980],{"type":35,"value":3948},{"type":29,"tag":441,"props":14982,"children":14983},{"class":525,"line":1096},[14984],{"type":29,"tag":441,"props":14985,"children":14986},{"emptyLinePlaceholder":24},[14987],{"type":35,"value":1032},{"type":29,"tag":441,"props":14989,"children":14990},{"class":525,"line":1114},[14991],{"type":29,"tag":441,"props":14992,"children":14993},{"style":1181},[14994],{"type":35,"value":14995},"    # update velocities and positions\n",{"type":29,"tag":441,"props":14997,"children":14998},{"class":525,"line":1132},[14999,15004,15009,15014,15019],{"type":29,"tag":441,"props":15000,"children":15001},{"style":536},[15002],{"type":35,"value":15003},"    cp_velocities ",{"type":29,"tag":441,"props":15005,"children":15006},{"style":2077},[15007],{"type":35,"value":15008},"+=",{"type":29,"tag":441,"props":15010,"children":15011},{"style":556},[15012],{"type":35,"value":15013}," DT",{"type":29,"tag":441,"props":15015,"children":15016},{"style":2077},[15017],{"type":35,"value":15018}," *",{"type":29,"tag":441,"props":15020,"children":15021},{"style":536},[15022],{"type":35,"value":15023}," cp_forces\n",{"type":29,"tag":441,"props":15025,"children":15026},{"class":525,"line":1150},[15027,15032,15036,15040,15044],{"type":29,"tag":441,"props":15028,"children":15029},{"style":536},[15030],{"type":35,"value":15031},"    cp_positions ",{"type":29,"tag":441,"props":15033,"children":15034},{"style":2077},[15035],{"type":35,"value":15008},{"type":29,"tag":441,"props":15037,"children":15038},{"style":556},[15039],{"type":35,"value":15013},{"type":29,"tag":441,"props":15041,"children":15042},{"style":2077},[15043],{"type":35,"value":15018},{"type":29,"tag":441,"props":15045,"children":15046},{"style":536},[15047],{"type":35,"value":15048}," cp_velocities\n",{"type":29,"tag":441,"props":15050,"children":15051},{"class":525,"line":1163},[15052,15057,15061,15066,15070,15075,15079],{"type":29,"tag":441,"props":15053,"children":15054},{"style":536},[15055],{"type":35,"value":15056},"    cp_ticks ",{"type":29,"tag":441,"props":15058,"children":15059},{"style":2077},[15060],{"type":35,"value":2080},{"type":29,"tag":441,"props":15062,"children":15063},{"style":536},[15064],{"type":35,"value":15065}," cp.append(cp_ticks, cp.expand_dims(cp_positions, ",{"type":29,"tag":441,"props":15067,"children":15068},{"style":556},[15069],{"type":35,"value":12820},{"type":29,"tag":441,"props":15071,"children":15072},{"style":536},[15073],{"type":35,"value":15074},"), ",{"type":29,"tag":441,"props":15076,"children":15077},{"style":556},[15078],{"type":35,"value":12820},{"type":29,"tag":441,"props":15080,"children":15081},{"style":536},[15082],{"type":35,"value":3948},{"type":29,"tag":441,"props":15084,"children":15085},{"class":525,"line":1187},[15086],{"type":29,"tag":441,"props":15087,"children":15088},{"emptyLinePlaceholder":24},[15089],{"type":35,"value":1032},{"type":29,"tag":441,"props":15091,"children":15092},{"class":525,"line":1195},[15093,15098,15102,15107,15111],{"type":29,"tag":441,"props":15094,"children":15095},{"style":536},[15096],{"type":35,"value":15097},"sim_time ",{"type":29,"tag":441,"props":15099,"children":15100},{"style":2077},[15101],{"type":35,"value":2080},{"type":29,"tag":441,"props":15103,"children":15104},{"style":536},[15105],{"type":35,"value":15106}," time.time() ",{"type":29,"tag":441,"props":15108,"children":15109},{"style":2077},[15110],{"type":35,"value":11896},{"type":29,"tag":441,"props":15112,"children":15113},{"style":536},[15114],{"type":35,"value":15115}," start_time\n",{"type":29,"tag":441,"props":15117,"children":15118},{"class":525,"line":1208},[15119,15123,15127,15132],{"type":29,"tag":441,"props":15120,"children":15121},{"style":2176},[15122],{"type":35,"value":7754},{"type":29,"tag":441,"props":15124,"children":15125},{"style":536},[15126],{"type":35,"value":2068},{"type":29,"tag":441,"props":15128,"children":15129},{"style":588},[15130],{"type":35,"value":15131},"\"Simulation time:\"",{"type":29,"tag":441,"props":15133,"children":15134},{"style":536},[15135],{"type":35,"value":15136},", sim_time)\n",{"type":29,"tag":441,"props":15138,"children":15139},{"class":525,"line":1221},[15140],{"type":29,"tag":441,"props":15141,"children":15142},{"emptyLinePlaceholder":24},[15143],{"type":35,"value":1032},{"type":29,"tag":441,"props":15145,"children":15146},{"class":525,"line":1238},[15147],{"type":29,"tag":441,"props":15148,"children":15149},{"emptyLinePlaceholder":24},[15150],{"type":35,"value":1032},{"type":29,"tag":441,"props":15152,"children":15153},{"class":525,"line":1256},[15154,15158,15163,15167,15171,15175,15180],{"type":29,"tag":441,"props":15155,"children":15156},{"style":2091},[15157],{"type":35,"value":4328},{"type":29,"tag":441,"props":15159,"children":15160},{"style":2147},[15161],{"type":35,"value":15162}," NumpyArrayEncoder",{"type":29,"tag":441,"props":15164,"children":15165},{"style":536},[15166],{"type":35,"value":2068},{"type":29,"tag":441,"props":15168,"children":15169},{"style":2157},[15170],{"type":35,"value":11514},{"type":29,"tag":441,"props":15172,"children":15173},{"style":536},[15174],{"type":35,"value":3764},{"type":29,"tag":441,"props":15176,"children":15177},{"style":2157},[15178],{"type":35,"value":15179},"JSONEncoder",{"type":29,"tag":441,"props":15181,"children":15182},{"style":536},[15183],{"type":35,"value":2165},{"type":29,"tag":441,"props":15185,"children":15186},{"class":525,"line":1274},[15187,15191,15196,15200,15204,15208,15213],{"type":29,"tag":441,"props":15188,"children":15189},{"style":2091},[15190],{"type":35,"value":4407},{"type":29,"tag":441,"props":15192,"children":15193},{"style":2060},[15194],{"type":35,"value":15195}," default",{"type":29,"tag":441,"props":15197,"children":15198},{"style":536},[15199],{"type":35,"value":2068},{"type":29,"tag":441,"props":15201,"children":15202},{"style":2111},[15203],{"type":35,"value":2188},{"type":29,"tag":441,"props":15205,"children":15206},{"style":536},[15207],{"type":35,"value":2193},{"type":29,"tag":441,"props":15209,"children":15210},{"style":2111},[15211],{"type":35,"value":15212},"obj",{"type":29,"tag":441,"props":15214,"children":15215},{"style":536},[15216],{"type":35,"value":2165},{"type":29,"tag":441,"props":15218,"children":15219},{"class":525,"line":1292},[15220,15224,15229],{"type":29,"tag":441,"props":15221,"children":15222},{"style":2077},[15223],{"type":35,"value":12648},{"type":29,"tag":441,"props":15225,"children":15226},{"style":2176},[15227],{"type":35,"value":15228}," isinstance",{"type":29,"tag":441,"props":15230,"children":15231},{"style":536},[15232],{"type":35,"value":15233},"(obj, np.ndarray):\n",{"type":29,"tag":441,"props":15235,"children":15236},{"class":525,"line":1310},[15237,15241],{"type":29,"tag":441,"props":15238,"children":15239},{"style":2077},[15240],{"type":35,"value":2379},{"type":29,"tag":441,"props":15242,"children":15243},{"style":536},[15244],{"type":35,"value":15245}," obj.tolist()\n",{"type":29,"tag":441,"props":15247,"children":15248},{"class":525,"line":1323},[15249,15253,15258,15262],{"type":29,"tag":441,"props":15250,"children":15251},{"style":2077},[15252],{"type":35,"value":4874},{"type":29,"tag":441,"props":15254,"children":15255},{"style":536},[15256],{"type":35,"value":15257}," json.JSONEncoder.default(",{"type":29,"tag":441,"props":15259,"children":15260},{"style":2208},[15261],{"type":35,"value":2188},{"type":29,"tag":441,"props":15263,"children":15264},{"style":536},[15265],{"type":35,"value":15266},", obj)\n",{"type":29,"tag":441,"props":15268,"children":15269},{"class":525,"line":1339},[15270],{"type":29,"tag":441,"props":15271,"children":15272},{"emptyLinePlaceholder":24},[15273],{"type":35,"value":1032},{"type":29,"tag":441,"props":15275,"children":15276},{"class":525,"line":1355},[15277],{"type":29,"tag":441,"props":15278,"children":15279},{"emptyLinePlaceholder":24},[15280],{"type":35,"value":1032},{"type":29,"tag":441,"props":15282,"children":15283},{"class":525,"line":1371},[15284,15288,15292],{"type":29,"tag":441,"props":15285,"children":15286},{"style":536},[15287],{"type":35,"value":14638},{"type":29,"tag":441,"props":15289,"children":15290},{"style":2077},[15291],{"type":35,"value":2080},{"type":29,"tag":441,"props":15293,"children":15294},{"style":536},[15295],{"type":35,"value":15296}," cp_ticks.get()\n",{"type":29,"tag":441,"props":15298,"children":15299},{"class":525,"line":1387},[15300],{"type":29,"tag":441,"props":15301,"children":15302},{"emptyLinePlaceholder":24},[15303],{"type":35,"value":1032},{"type":29,"tag":441,"props":15305,"children":15306},{"class":525,"line":1403},[15307],{"type":29,"tag":441,"props":15308,"children":15309},{"emptyLinePlaceholder":24},[15310],{"type":35,"value":1032},{"type":29,"tag":441,"props":15312,"children":15313},{"class":525,"line":1411},[15314],{"type":29,"tag":441,"props":15315,"children":15316},{"style":1181},[15317],{"type":35,"value":15318},"# this is data we can work with in python and write to a file\n",{"type":29,"tag":441,"props":15320,"children":15321},{"class":525,"line":1424},[15322,15327,15331,15335,15340,15344,15349,15353,15357],{"type":29,"tag":441,"props":15323,"children":15324},{"style":2077},[15325],{"type":35,"value":15326},"with",{"type":29,"tag":441,"props":15328,"children":15329},{"style":2176},[15330],{"type":35,"value":5113},{"type":29,"tag":441,"props":15332,"children":15333},{"style":536},[15334],{"type":35,"value":2068},{"type":29,"tag":441,"props":15336,"children":15337},{"style":588},[15338],{"type":35,"value":15339},"\"ticks.json\"",{"type":29,"tag":441,"props":15341,"children":15342},{"style":536},[15343],{"type":35,"value":2193},{"type":29,"tag":441,"props":15345,"children":15346},{"style":588},[15347],{"type":35,"value":15348},"\"w\"",{"type":29,"tag":441,"props":15350,"children":15351},{"style":536},[15352],{"type":35,"value":5158},{"type":29,"tag":441,"props":15354,"children":15355},{"style":2077},[15356],{"type":35,"value":5163},{"type":29,"tag":441,"props":15358,"children":15359},{"style":536},[15360],{"type":35,"value":5168},{"type":29,"tag":441,"props":15362,"children":15363},{"class":525,"line":1437},[15364,15369,15374,15378],{"type":29,"tag":441,"props":15365,"children":15366},{"style":536},[15367],{"type":35,"value":15368},"    f.write(json.dumps(np_ticks, ",{"type":29,"tag":441,"props":15370,"children":15371},{"style":2071},[15372],{"type":35,"value":15373},"cls",{"type":29,"tag":441,"props":15375,"children":15376},{"style":2077},[15377],{"type":35,"value":2080},{"type":29,"tag":441,"props":15379,"children":15380},{"style":536},[15381],{"type":35,"value":15382},"NumpyArrayEncoder))\n",{"type":29,"tag":38,"props":15384,"children":15385},{},[15386],{"type":35,"value":15387},"To better understand the matrix math here I walked through a simple example of what each step does:",{"type":29,"tag":514,"props":15389,"children":15391},{"code":15390,"language":14344,"meta":8,"className":14345,"style":8},"# particle coordinates (x,y,z) in 3D space\npositions = cp.array([[1,2.5,3], [4,5,6], [7,8,9]])\n",[15392],{"type":29,"tag":427,"props":15393,"children":15394},{"__ignoreMap":8},[15395,15403],{"type":29,"tag":441,"props":15396,"children":15397},{"class":525,"line":526},[15398],{"type":29,"tag":441,"props":15399,"children":15400},{"style":1181},[15401],{"type":35,"value":15402},"# particle coordinates (x,y,z) in 3D space\n",{"type":29,"tag":441,"props":15404,"children":15405},{"class":525,"line":542},[15406,15411,15415,15420,15424,15429,15434,15438,15442,15447,15451,15455,15459,15463,15468,15472,15477,15481,15485,15489,15494],{"type":29,"tag":441,"props":15407,"children":15408},{"style":536},[15409],{"type":35,"value":15410},"positions ",{"type":29,"tag":441,"props":15412,"children":15413},{"style":2077},[15414],{"type":35,"value":2080},{"type":29,"tag":441,"props":15416,"children":15417},{"style":536},[15418],{"type":35,"value":15419}," cp.array([[",{"type":29,"tag":441,"props":15421,"children":15422},{"style":556},[15423],{"type":35,"value":5087},{"type":29,"tag":441,"props":15425,"children":15426},{"style":536},[15427],{"type":35,"value":15428},",",{"type":29,"tag":441,"props":15430,"children":15431},{"style":556},[15432],{"type":35,"value":15433},"2.5",{"type":29,"tag":441,"props":15435,"children":15436},{"style":536},[15437],{"type":35,"value":15428},{"type":29,"tag":441,"props":15439,"children":15440},{"style":556},[15441],{"type":35,"value":14959},{"type":29,"tag":441,"props":15443,"children":15444},{"style":536},[15445],{"type":35,"value":15446},"], [",{"type":29,"tag":441,"props":15448,"children":15449},{"style":556},[15450],{"type":35,"value":4045},{"type":29,"tag":441,"props":15452,"children":15453},{"style":536},[15454],{"type":35,"value":15428},{"type":29,"tag":441,"props":15456,"children":15457},{"style":556},[15458],{"type":35,"value":14311},{"type":29,"tag":441,"props":15460,"children":15461},{"style":536},[15462],{"type":35,"value":15428},{"type":29,"tag":441,"props":15464,"children":15465},{"style":556},[15466],{"type":35,"value":15467},"6",{"type":29,"tag":441,"props":15469,"children":15470},{"style":536},[15471],{"type":35,"value":15446},{"type":29,"tag":441,"props":15473,"children":15474},{"style":556},[15475],{"type":35,"value":15476},"7",{"type":29,"tag":441,"props":15478,"children":15479},{"style":536},[15480],{"type":35,"value":15428},{"type":29,"tag":441,"props":15482,"children":15483},{"style":556},[15484],{"type":35,"value":14295},{"type":29,"tag":441,"props":15486,"children":15487},{"style":536},[15488],{"type":35,"value":15428},{"type":29,"tag":441,"props":15490,"children":15491},{"style":556},[15492],{"type":35,"value":15493},"9",{"type":29,"tag":441,"props":15495,"children":15496},{"style":536},[15497],{"type":35,"value":15498},"]])\n",{"type":29,"tag":38,"props":15500,"children":15501},{},[15502],{"type":35,"value":15503},"The first operation creates an array for pairwise distances for each dimension:",{"type":29,"tag":514,"props":15505,"children":15507},{"code":15506,"language":2049,"meta":8,"className":2050,"style":8},"diff = positions[None, :, :] - positions[:, None, :]\nprint(diff)\n\narray([[[ 0. ,  0. ,  0. ],\n        [ 3. ,  2.5,  3. ],\n        [ 6. ,  5.5,  6. ]],\n\n       [[-3. , -2.5, -3. ],\n        [ 0. ,  0. ,  0. ],\n        [ 3. ,  3. ,  3. ]],\n\n       [[-6. , -5.5, -6. ],\n        [-3. , -3. , -3. ],\n        [ 0. ,  0. ,  0. ]]])\n",[15508],{"type":29,"tag":427,"props":15509,"children":15510},{"__ignoreMap":8},[15511,15555,15567,15574,15608,15641,15674,15681,15726,15757,15788,15795,15838,15881],{"type":29,"tag":441,"props":15512,"children":15513},{"class":525,"line":526},[15514,15519,15523,15528,15532,15537,15541,15546,15550],{"type":29,"tag":441,"props":15515,"children":15516},{"style":536},[15517],{"type":35,"value":15518},"diff ",{"type":29,"tag":441,"props":15520,"children":15521},{"style":2077},[15522],{"type":35,"value":2080},{"type":29,"tag":441,"props":15524,"children":15525},{"style":536},[15526],{"type":35,"value":15527}," positions[",{"type":29,"tag":441,"props":15529,"children":15530},{"style":556},[15531],{"type":35,"value":2467},{"type":29,"tag":441,"props":15533,"children":15534},{"style":536},[15535],{"type":35,"value":15536},", :, :] ",{"type":29,"tag":441,"props":15538,"children":15539},{"style":2077},[15540],{"type":35,"value":11896},{"type":29,"tag":441,"props":15542,"children":15543},{"style":536},[15544],{"type":35,"value":15545}," positions[:, ",{"type":29,"tag":441,"props":15547,"children":15548},{"style":556},[15549],{"type":35,"value":2467},{"type":29,"tag":441,"props":15551,"children":15552},{"style":536},[15553],{"type":35,"value":15554},", :]\n",{"type":29,"tag":441,"props":15556,"children":15557},{"class":525,"line":542},[15558,15562],{"type":29,"tag":441,"props":15559,"children":15560},{"style":2176},[15561],{"type":35,"value":7754},{"type":29,"tag":441,"props":15563,"children":15564},{"style":536},[15565],{"type":35,"value":15566},"(diff)\n",{"type":29,"tag":441,"props":15568,"children":15569},{"class":525,"line":562},[15570],{"type":29,"tag":441,"props":15571,"children":15572},{"emptyLinePlaceholder":24},[15573],{"type":35,"value":1032},{"type":29,"tag":441,"props":15575,"children":15576},{"class":525,"line":575},[15577,15582,15586,15591,15595,15599,15603],{"type":29,"tag":441,"props":15578,"children":15579},{"style":536},[15580],{"type":35,"value":15581},"array([[[ ",{"type":29,"tag":441,"props":15583,"children":15584},{"style":556},[15585],{"type":35,"value":12820},{"type":29,"tag":441,"props":15587,"children":15588},{"style":536},[15589],{"type":35,"value":15590},". ,  ",{"type":29,"tag":441,"props":15592,"children":15593},{"style":556},[15594],{"type":35,"value":12820},{"type":29,"tag":441,"props":15596,"children":15597},{"style":536},[15598],{"type":35,"value":15590},{"type":29,"tag":441,"props":15600,"children":15601},{"style":556},[15602],{"type":35,"value":12820},{"type":29,"tag":441,"props":15604,"children":15605},{"style":536},[15606],{"type":35,"value":15607},". ],\n",{"type":29,"tag":441,"props":15609,"children":15610},{"class":525,"line":594},[15611,15616,15620,15624,15628,15633,15637],{"type":29,"tag":441,"props":15612,"children":15613},{"style":536},[15614],{"type":35,"value":15615},"        [ ",{"type":29,"tag":441,"props":15617,"children":15618},{"style":556},[15619],{"type":35,"value":14959},{"type":29,"tag":441,"props":15621,"children":15622},{"style":536},[15623],{"type":35,"value":15590},{"type":29,"tag":441,"props":15625,"children":15626},{"style":556},[15627],{"type":35,"value":15433},{"type":29,"tag":441,"props":15629,"children":15630},{"style":536},[15631],{"type":35,"value":15632},",  ",{"type":29,"tag":441,"props":15634,"children":15635},{"style":556},[15636],{"type":35,"value":14959},{"type":29,"tag":441,"props":15638,"children":15639},{"style":536},[15640],{"type":35,"value":15607},{"type":29,"tag":441,"props":15642,"children":15643},{"class":525,"line":607},[15644,15648,15652,15656,15661,15665,15669],{"type":29,"tag":441,"props":15645,"children":15646},{"style":536},[15647],{"type":35,"value":15615},{"type":29,"tag":441,"props":15649,"children":15650},{"style":556},[15651],{"type":35,"value":15467},{"type":29,"tag":441,"props":15653,"children":15654},{"style":536},[15655],{"type":35,"value":15590},{"type":29,"tag":441,"props":15657,"children":15658},{"style":556},[15659],{"type":35,"value":15660},"5.5",{"type":29,"tag":441,"props":15662,"children":15663},{"style":536},[15664],{"type":35,"value":15632},{"type":29,"tag":441,"props":15666,"children":15667},{"style":556},[15668],{"type":35,"value":15467},{"type":29,"tag":441,"props":15670,"children":15671},{"style":536},[15672],{"type":35,"value":15673},". ]],\n",{"type":29,"tag":441,"props":15675,"children":15676},{"class":525,"line":631},[15677],{"type":29,"tag":441,"props":15678,"children":15679},{"emptyLinePlaceholder":24},[15680],{"type":35,"value":1032},{"type":29,"tag":441,"props":15682,"children":15683},{"class":525,"line":644},[15684,15689,15693,15697,15702,15706,15710,15714,15718,15722],{"type":29,"tag":441,"props":15685,"children":15686},{"style":536},[15687],{"type":35,"value":15688},"       [[",{"type":29,"tag":441,"props":15690,"children":15691},{"style":2077},[15692],{"type":35,"value":11896},{"type":29,"tag":441,"props":15694,"children":15695},{"style":556},[15696],{"type":35,"value":14959},{"type":29,"tag":441,"props":15698,"children":15699},{"style":536},[15700],{"type":35,"value":15701},". , ",{"type":29,"tag":441,"props":15703,"children":15704},{"style":2077},[15705],{"type":35,"value":11896},{"type":29,"tag":441,"props":15707,"children":15708},{"style":556},[15709],{"type":35,"value":15433},{"type":29,"tag":441,"props":15711,"children":15712},{"style":536},[15713],{"type":35,"value":2193},{"type":29,"tag":441,"props":15715,"children":15716},{"style":2077},[15717],{"type":35,"value":11896},{"type":29,"tag":441,"props":15719,"children":15720},{"style":556},[15721],{"type":35,"value":14959},{"type":29,"tag":441,"props":15723,"children":15724},{"style":536},[15725],{"type":35,"value":15607},{"type":29,"tag":441,"props":15727,"children":15728},{"class":525,"line":658},[15729,15733,15737,15741,15745,15749,15753],{"type":29,"tag":441,"props":15730,"children":15731},{"style":536},[15732],{"type":35,"value":15615},{"type":29,"tag":441,"props":15734,"children":15735},{"style":556},[15736],{"type":35,"value":12820},{"type":29,"tag":441,"props":15738,"children":15739},{"style":536},[15740],{"type":35,"value":15590},{"type":29,"tag":441,"props":15742,"children":15743},{"style":556},[15744],{"type":35,"value":12820},{"type":29,"tag":441,"props":15746,"children":15747},{"style":536},[15748],{"type":35,"value":15590},{"type":29,"tag":441,"props":15750,"children":15751},{"style":556},[15752],{"type":35,"value":12820},{"type":29,"tag":441,"props":15754,"children":15755},{"style":536},[15756],{"type":35,"value":15607},{"type":29,"tag":441,"props":15758,"children":15759},{"class":525,"line":671},[15760,15764,15768,15772,15776,15780,15784],{"type":29,"tag":441,"props":15761,"children":15762},{"style":536},[15763],{"type":35,"value":15615},{"type":29,"tag":441,"props":15765,"children":15766},{"style":556},[15767],{"type":35,"value":14959},{"type":29,"tag":441,"props":15769,"children":15770},{"style":536},[15771],{"type":35,"value":15590},{"type":29,"tag":441,"props":15773,"children":15774},{"style":556},[15775],{"type":35,"value":14959},{"type":29,"tag":441,"props":15777,"children":15778},{"style":536},[15779],{"type":35,"value":15590},{"type":29,"tag":441,"props":15781,"children":15782},{"style":556},[15783],{"type":35,"value":14959},{"type":29,"tag":441,"props":15785,"children":15786},{"style":536},[15787],{"type":35,"value":15673},{"type":29,"tag":441,"props":15789,"children":15790},{"class":525,"line":684},[15791],{"type":29,"tag":441,"props":15792,"children":15793},{"emptyLinePlaceholder":24},[15794],{"type":35,"value":1032},{"type":29,"tag":441,"props":15796,"children":15797},{"class":525,"line":697},[15798,15802,15806,15810,15814,15818,15822,15826,15830,15834],{"type":29,"tag":441,"props":15799,"children":15800},{"style":536},[15801],{"type":35,"value":15688},{"type":29,"tag":441,"props":15803,"children":15804},{"style":2077},[15805],{"type":35,"value":11896},{"type":29,"tag":441,"props":15807,"children":15808},{"style":556},[15809],{"type":35,"value":15467},{"type":29,"tag":441,"props":15811,"children":15812},{"style":536},[15813],{"type":35,"value":15701},{"type":29,"tag":441,"props":15815,"children":15816},{"style":2077},[15817],{"type":35,"value":11896},{"type":29,"tag":441,"props":15819,"children":15820},{"style":556},[15821],{"type":35,"value":15660},{"type":29,"tag":441,"props":15823,"children":15824},{"style":536},[15825],{"type":35,"value":2193},{"type":29,"tag":441,"props":15827,"children":15828},{"style":2077},[15829],{"type":35,"value":11896},{"type":29,"tag":441,"props":15831,"children":15832},{"style":556},[15833],{"type":35,"value":15467},{"type":29,"tag":441,"props":15835,"children":15836},{"style":536},[15837],{"type":35,"value":15607},{"type":29,"tag":441,"props":15839,"children":15840},{"class":525,"line":720},[15841,15845,15849,15853,15857,15861,15865,15869,15873,15877],{"type":29,"tag":441,"props":15842,"children":15843},{"style":536},[15844],{"type":35,"value":12467},{"type":29,"tag":441,"props":15846,"children":15847},{"style":2077},[15848],{"type":35,"value":11896},{"type":29,"tag":441,"props":15850,"children":15851},{"style":556},[15852],{"type":35,"value":14959},{"type":29,"tag":441,"props":15854,"children":15855},{"style":536},[15856],{"type":35,"value":15701},{"type":29,"tag":441,"props":15858,"children":15859},{"style":2077},[15860],{"type":35,"value":11896},{"type":29,"tag":441,"props":15862,"children":15863},{"style":556},[15864],{"type":35,"value":14959},{"type":29,"tag":441,"props":15866,"children":15867},{"style":536},[15868],{"type":35,"value":15701},{"type":29,"tag":441,"props":15870,"children":15871},{"style":2077},[15872],{"type":35,"value":11896},{"type":29,"tag":441,"props":15874,"children":15875},{"style":556},[15876],{"type":35,"value":14959},{"type":29,"tag":441,"props":15878,"children":15879},{"style":536},[15880],{"type":35,"value":15607},{"type":29,"tag":441,"props":15882,"children":15883},{"class":525,"line":737},[15884,15888,15892,15896,15900,15904,15908],{"type":29,"tag":441,"props":15885,"children":15886},{"style":536},[15887],{"type":35,"value":15615},{"type":29,"tag":441,"props":15889,"children":15890},{"style":556},[15891],{"type":35,"value":12820},{"type":29,"tag":441,"props":15893,"children":15894},{"style":536},[15895],{"type":35,"value":15590},{"type":29,"tag":441,"props":15897,"children":15898},{"style":556},[15899],{"type":35,"value":12820},{"type":29,"tag":441,"props":15901,"children":15902},{"style":536},[15903],{"type":35,"value":15590},{"type":29,"tag":441,"props":15905,"children":15906},{"style":556},[15907],{"type":35,"value":12820},{"type":29,"tag":441,"props":15909,"children":15910},{"style":536},[15911],{"type":35,"value":15912},". ]]])\n",{"type":29,"tag":38,"props":15914,"children":15915},{},[15916,15918,15923,15924,15930,15931,15937],{"type":35,"value":15917},"The rows of zeros correspond to a particle's ",{"type":29,"tag":427,"props":15919,"children":15921},{"className":15920},[],[15922],{"type":35,"value":23},{"type":35,"value":2193},{"type":29,"tag":427,"props":15925,"children":15927},{"className":15926},[],[15928],{"type":35,"value":15929},"y",{"type":35,"value":8494},{"type":29,"tag":427,"props":15932,"children":15934},{"className":15933},[],[15935],{"type":35,"value":15936},"z",{"type":35,"value":15938}," distances to itself, which are all zero by axioms of Euclidian vector spaces.",{"type":29,"tag":38,"props":15940,"children":15941},{},[15942],{"type":35,"value":15943},"The next operation calculates the distance between each particle:",{"type":29,"tag":514,"props":15945,"children":15947},{"code":15946,"language":2049,"meta":8,"className":2050,"style":8},"distances = cp.sqrt(cp.sum(diff**2, axis=2))\nprint(distances)\n\narray([[ 0.        ,  4.9244289 , 10.11187421],\n       [ 4.9244289 ,  0.        ,  5.19615242],\n       [10.11187421,  5.19615242,  0.        ]])\n",[15948],{"type":29,"tag":427,"props":15949,"children":15950},{"__ignoreMap":8},[15951,15995,16007,16014,16050,16084],{"type":29,"tag":441,"props":15952,"children":15953},{"class":525,"line":526},[15954,15959,15963,15967,15971,15975,15979,15983,15987,15991],{"type":29,"tag":441,"props":15955,"children":15956},{"style":536},[15957],{"type":35,"value":15958},"distances ",{"type":29,"tag":441,"props":15960,"children":15961},{"style":2077},[15962],{"type":35,"value":2080},{"type":29,"tag":441,"props":15964,"children":15965},{"style":536},[15966],{"type":35,"value":14821},{"type":29,"tag":441,"props":15968,"children":15969},{"style":2077},[15970],{"type":35,"value":14826},{"type":29,"tag":441,"props":15972,"children":15973},{"style":556},[15974],{"type":35,"value":11929},{"type":29,"tag":441,"props":15976,"children":15977},{"style":536},[15978],{"type":35,"value":2193},{"type":29,"tag":441,"props":15980,"children":15981},{"style":2071},[15982],{"type":35,"value":14652},{"type":29,"tag":441,"props":15984,"children":15985},{"style":2077},[15986],{"type":35,"value":2080},{"type":29,"tag":441,"props":15988,"children":15989},{"style":556},[15990],{"type":35,"value":11929},{"type":29,"tag":441,"props":15992,"children":15993},{"style":536},[15994],{"type":35,"value":4609},{"type":29,"tag":441,"props":15996,"children":15997},{"class":525,"line":542},[15998,16002],{"type":29,"tag":441,"props":15999,"children":16000},{"style":2176},[16001],{"type":35,"value":7754},{"type":29,"tag":441,"props":16003,"children":16004},{"style":536},[16005],{"type":35,"value":16006},"(distances)\n",{"type":29,"tag":441,"props":16008,"children":16009},{"class":525,"line":562},[16010],{"type":29,"tag":441,"props":16011,"children":16012},{"emptyLinePlaceholder":24},[16013],{"type":35,"value":1032},{"type":29,"tag":441,"props":16015,"children":16016},{"class":525,"line":575},[16017,16022,16026,16031,16036,16041,16046],{"type":29,"tag":441,"props":16018,"children":16019},{"style":536},[16020],{"type":35,"value":16021},"array([[ ",{"type":29,"tag":441,"props":16023,"children":16024},{"style":556},[16025],{"type":35,"value":12820},{"type":29,"tag":441,"props":16027,"children":16028},{"style":536},[16029],{"type":35,"value":16030},".        ,  ",{"type":29,"tag":441,"props":16032,"children":16033},{"style":556},[16034],{"type":35,"value":16035},"4.9244289",{"type":29,"tag":441,"props":16037,"children":16038},{"style":536},[16039],{"type":35,"value":16040}," , ",{"type":29,"tag":441,"props":16042,"children":16043},{"style":556},[16044],{"type":35,"value":16045},"10.11187421",{"type":29,"tag":441,"props":16047,"children":16048},{"style":536},[16049],{"type":35,"value":8154},{"type":29,"tag":441,"props":16051,"children":16052},{"class":525,"line":594},[16053,16058,16062,16067,16071,16075,16080],{"type":29,"tag":441,"props":16054,"children":16055},{"style":536},[16056],{"type":35,"value":16057},"       [ ",{"type":29,"tag":441,"props":16059,"children":16060},{"style":556},[16061],{"type":35,"value":16035},{"type":29,"tag":441,"props":16063,"children":16064},{"style":536},[16065],{"type":35,"value":16066}," ,  ",{"type":29,"tag":441,"props":16068,"children":16069},{"style":556},[16070],{"type":35,"value":12820},{"type":29,"tag":441,"props":16072,"children":16073},{"style":536},[16074],{"type":35,"value":16030},{"type":29,"tag":441,"props":16076,"children":16077},{"style":556},[16078],{"type":35,"value":16079},"5.19615242",{"type":29,"tag":441,"props":16081,"children":16082},{"style":536},[16083],{"type":35,"value":8154},{"type":29,"tag":441,"props":16085,"children":16086},{"class":525,"line":607},[16087,16092,16096,16100,16104,16108,16112],{"type":29,"tag":441,"props":16088,"children":16089},{"style":536},[16090],{"type":35,"value":16091},"       [",{"type":29,"tag":441,"props":16093,"children":16094},{"style":556},[16095],{"type":35,"value":16045},{"type":29,"tag":441,"props":16097,"children":16098},{"style":536},[16099],{"type":35,"value":15632},{"type":29,"tag":441,"props":16101,"children":16102},{"style":556},[16103],{"type":35,"value":16079},{"type":29,"tag":441,"props":16105,"children":16106},{"style":536},[16107],{"type":35,"value":15632},{"type":29,"tag":441,"props":16109,"children":16110},{"style":556},[16111],{"type":35,"value":12820},{"type":29,"tag":441,"props":16113,"children":16114},{"style":536},[16115],{"type":35,"value":16116},".        ]])\n",{"type":29,"tag":38,"props":16118,"children":16119},{},[16120,16122,16128],{"type":35,"value":16121},"The diagonal or zeros represents that fact that a particle ",{"type":29,"tag":427,"props":16123,"children":16125},{"className":16124},[],[16126],{"type":35,"value":16127},"n",{"type":35,"value":16129}," has a distance of zero to iself.",{"type":29,"tag":38,"props":16131,"children":16132},{},[16133,16135,16141],{"type":35,"value":16134},"The next step calculates inverse distances and uses a small ",{"type":29,"tag":427,"props":16136,"children":16138},{"className":16137},[],[16139],{"type":35,"value":16140},"epsilon",{"type":35,"value":16142}," value to avoid division by 0:",{"type":29,"tag":514,"props":16144,"children":16146},{"code":16145,"language":2049,"meta":8,"className":2050,"style":8},"epsilon = 1e-5\ninv_distances = 1.0 / cp.maximum(distances, epsilon)\nprint(inv_distances)\n\narray([[1.00000000e+05, 2.03069233e-01, 9.88936353e-02],\n       [2.03069233e-01, 1.00000000e+05, 1.92450090e-01],\n       [9.88936353e-02, 1.92450090e-01, 1.00000000e+05]])\n",[16147],{"type":29,"tag":427,"props":16148,"children":16149},{"__ignoreMap":8},[16150,16166,16190,16202,16209,16244,16276],{"type":29,"tag":441,"props":16151,"children":16152},{"class":525,"line":526},[16153,16158,16162],{"type":29,"tag":441,"props":16154,"children":16155},{"style":536},[16156],{"type":35,"value":16157},"epsilon ",{"type":29,"tag":441,"props":16159,"children":16160},{"style":2077},[16161],{"type":35,"value":2080},{"type":29,"tag":441,"props":16163,"children":16164},{"style":556},[16165],{"type":35,"value":14882},{"type":29,"tag":441,"props":16167,"children":16168},{"class":525,"line":542},[16169,16174,16178,16182,16186],{"type":29,"tag":441,"props":16170,"children":16171},{"style":536},[16172],{"type":35,"value":16173},"inv_distances ",{"type":29,"tag":441,"props":16175,"children":16176},{"style":2077},[16177],{"type":35,"value":2080},{"type":29,"tag":441,"props":16179,"children":16180},{"style":556},[16181],{"type":35,"value":14899},{"type":29,"tag":441,"props":16183,"children":16184},{"style":2077},[16185],{"type":35,"value":14904},{"type":29,"tag":441,"props":16187,"children":16188},{"style":536},[16189],{"type":35,"value":14909},{"type":29,"tag":441,"props":16191,"children":16192},{"class":525,"line":562},[16193,16197],{"type":29,"tag":441,"props":16194,"children":16195},{"style":2176},[16196],{"type":35,"value":7754},{"type":29,"tag":441,"props":16198,"children":16199},{"style":536},[16200],{"type":35,"value":16201},"(inv_distances)\n",{"type":29,"tag":441,"props":16203,"children":16204},{"class":525,"line":575},[16205],{"type":29,"tag":441,"props":16206,"children":16207},{"emptyLinePlaceholder":24},[16208],{"type":35,"value":1032},{"type":29,"tag":441,"props":16210,"children":16211},{"class":525,"line":594},[16212,16217,16222,16226,16231,16235,16240],{"type":29,"tag":441,"props":16213,"children":16214},{"style":536},[16215],{"type":35,"value":16216},"array([[",{"type":29,"tag":441,"props":16218,"children":16219},{"style":556},[16220],{"type":35,"value":16221},"1.00000000e+05",{"type":29,"tag":441,"props":16223,"children":16224},{"style":536},[16225],{"type":35,"value":2193},{"type":29,"tag":441,"props":16227,"children":16228},{"style":556},[16229],{"type":35,"value":16230},"2.03069233e-01",{"type":29,"tag":441,"props":16232,"children":16233},{"style":536},[16234],{"type":35,"value":2193},{"type":29,"tag":441,"props":16236,"children":16237},{"style":556},[16238],{"type":35,"value":16239},"9.88936353e-02",{"type":29,"tag":441,"props":16241,"children":16242},{"style":536},[16243],{"type":35,"value":8154},{"type":29,"tag":441,"props":16245,"children":16246},{"class":525,"line":607},[16247,16251,16255,16259,16263,16267,16272],{"type":29,"tag":441,"props":16248,"children":16249},{"style":536},[16250],{"type":35,"value":16091},{"type":29,"tag":441,"props":16252,"children":16253},{"style":556},[16254],{"type":35,"value":16230},{"type":29,"tag":441,"props":16256,"children":16257},{"style":536},[16258],{"type":35,"value":2193},{"type":29,"tag":441,"props":16260,"children":16261},{"style":556},[16262],{"type":35,"value":16221},{"type":29,"tag":441,"props":16264,"children":16265},{"style":536},[16266],{"type":35,"value":2193},{"type":29,"tag":441,"props":16268,"children":16269},{"style":556},[16270],{"type":35,"value":16271},"1.92450090e-01",{"type":29,"tag":441,"props":16273,"children":16274},{"style":536},[16275],{"type":35,"value":8154},{"type":29,"tag":441,"props":16277,"children":16278},{"class":525,"line":631},[16279,16283,16287,16291,16295,16299,16303],{"type":29,"tag":441,"props":16280,"children":16281},{"style":536},[16282],{"type":35,"value":16091},{"type":29,"tag":441,"props":16284,"children":16285},{"style":556},[16286],{"type":35,"value":16239},{"type":29,"tag":441,"props":16288,"children":16289},{"style":536},[16290],{"type":35,"value":2193},{"type":29,"tag":441,"props":16292,"children":16293},{"style":556},[16294],{"type":35,"value":16271},{"type":29,"tag":441,"props":16296,"children":16297},{"style":536},[16298],{"type":35,"value":2193},{"type":29,"tag":441,"props":16300,"children":16301},{"style":556},[16302],{"type":35,"value":16221},{"type":29,"tag":441,"props":16304,"children":16305},{"style":536},[16306],{"type":35,"value":15498},{"type":29,"tag":38,"props":16308,"children":16309},{},[16310],{"type":35,"value":16311},"The next step is the most elegant part of the simulation and really flexes the GPU's parallel compute capabilities:",{"type":29,"tag":514,"props":16313,"children":16315},{"code":16314,"language":2049,"meta":8,"className":2050,"style":8},"cp_forces = cp.sum((diff.T * inv_distances**3).T, axis=1)\n",[16316],{"type":29,"tag":427,"props":16317,"children":16318},{"__ignoreMap":8},[16319],{"type":29,"tag":441,"props":16320,"children":16321},{"class":525,"line":526},[16322,16327,16331,16335,16339,16343,16347,16351,16355,16359,16363,16367],{"type":29,"tag":441,"props":16323,"children":16324},{"style":536},[16325],{"type":35,"value":16326},"cp_forces ",{"type":29,"tag":441,"props":16328,"children":16329},{"style":2077},[16330],{"type":35,"value":2080},{"type":29,"tag":441,"props":16332,"children":16333},{"style":536},[16334],{"type":35,"value":14941},{"type":29,"tag":441,"props":16336,"children":16337},{"style":2077},[16338],{"type":35,"value":12500},{"type":29,"tag":441,"props":16340,"children":16341},{"style":536},[16342],{"type":35,"value":14950},{"type":29,"tag":441,"props":16344,"children":16345},{"style":2077},[16346],{"type":35,"value":14826},{"type":29,"tag":441,"props":16348,"children":16349},{"style":556},[16350],{"type":35,"value":14959},{"type":29,"tag":441,"props":16352,"children":16353},{"style":536},[16354],{"type":35,"value":14964},{"type":29,"tag":441,"props":16356,"children":16357},{"style":2071},[16358],{"type":35,"value":14652},{"type":29,"tag":441,"props":16360,"children":16361},{"style":2077},[16362],{"type":35,"value":2080},{"type":29,"tag":441,"props":16364,"children":16365},{"style":556},[16366],{"type":35,"value":5087},{"type":29,"tag":441,"props":16368,"children":16369},{"style":536},[16370],{"type":35,"value":3948},{"type":29,"tag":38,"props":16372,"children":16373},{},[16374,16375,16381],{"type":35,"value":8955},{"type":29,"tag":427,"props":16376,"children":16378},{"className":16377},[],[16379],{"type":35,"value":16380},".T",{"type":35,"value":16382}," operation transposes a matrix, multiplies by the cube of inverse distances, then transposes the matrix again before summing along the first axis. Transposing a matrix basically swaps rows and columns.",{"type":29,"tag":38,"props":16384,"children":16385},{},[16386],{"type":35,"value":16387},"The next two steps are also pretty elegant:",{"type":29,"tag":514,"props":16389,"children":16391},{"code":16390,"language":2049,"meta":8,"className":2050,"style":8},"# update velocities and positions\ncp_velocities += DT * cp_forces\ncp_positions += DT * cp_velocities\n",[16392],{"type":29,"tag":427,"props":16393,"children":16394},{"__ignoreMap":8},[16395,16403,16426],{"type":29,"tag":441,"props":16396,"children":16397},{"class":525,"line":526},[16398],{"type":29,"tag":441,"props":16399,"children":16400},{"style":1181},[16401],{"type":35,"value":16402},"# update velocities and positions\n",{"type":29,"tag":441,"props":16404,"children":16405},{"class":525,"line":542},[16406,16410,16414,16418,16422],{"type":29,"tag":441,"props":16407,"children":16408},{"style":536},[16409],{"type":35,"value":14614},{"type":29,"tag":441,"props":16411,"children":16412},{"style":2077},[16413],{"type":35,"value":15008},{"type":29,"tag":441,"props":16415,"children":16416},{"style":556},[16417],{"type":35,"value":15013},{"type":29,"tag":441,"props":16419,"children":16420},{"style":2077},[16421],{"type":35,"value":15018},{"type":29,"tag":441,"props":16423,"children":16424},{"style":536},[16425],{"type":35,"value":15023},{"type":29,"tag":441,"props":16427,"children":16428},{"class":525,"line":562},[16429,16433,16437,16441,16445],{"type":29,"tag":441,"props":16430,"children":16431},{"style":536},[16432],{"type":35,"value":14597},{"type":29,"tag":441,"props":16434,"children":16435},{"style":2077},[16436],{"type":35,"value":15008},{"type":29,"tag":441,"props":16438,"children":16439},{"style":556},[16440],{"type":35,"value":15013},{"type":29,"tag":441,"props":16442,"children":16443},{"style":2077},[16444],{"type":35,"value":15018},{"type":29,"tag":441,"props":16446,"children":16447},{"style":536},[16448],{"type":35,"value":15048},{"type":29,"tag":38,"props":16450,"children":16451},{},[16452,16454,16459],{"type":35,"value":16453},"In the last step I append the updated positions to an array that holds every \"tick\" (the positions of each particle between each time interval, ",{"type":29,"tag":427,"props":16455,"children":16457},{"className":16456},[],[16458],{"type":35,"value":14493},{"type":35,"value":16460}," - \"delta time\")",{"type":29,"tag":38,"props":16462,"children":16463},{},[16464],{"type":35,"value":16465},"Here's the formula for the mathematical equation used to calculate the force on any given body in an n-body system:",{"type":29,"tag":13493,"props":16467,"children":16470},{"src":16468,"width":13495,"height":16469},"https://briancaffey.github.io/three-body-problem/iframe/formula.html",110,[],{"type":29,"tag":38,"props":16472,"children":16473},{},[16474],{"type":35,"value":16475},"To test that the simulation was working correctly I used ChatGPT again to construct a 3D scene in Blender with a Python script:",{"type":29,"tag":38,"props":16477,"children":16478},{},[16479],{"type":29,"tag":192,"props":16480,"children":16483},{"alt":16481,"src":16482},"Blender Animation","/static/three-body-problem/blender.png",[],{"type":29,"tag":123,"props":16485,"children":16487},{"id":16486},"threejs",[16488],{"type":35,"value":16489},"Three.js",{"type":29,"tag":38,"props":16491,"children":16492},{},[16493],{"type":35,"value":16494},"Imagine that we are working for a Chinese startup called the Qin Dynasty. The founder, Qin Shi Huang, is a brutal tyrant with an obsessive fear of assassination. Let's put on our product hat for a minute and think about how we can impress him with a clean solution to the three-body problem. A recent attempt involved building a 30,000-person analog computer that was destroyed in tri-solar syzygy. Failing to accurately predict the movement of the suns could mean execution by live-burial, a fiery death or worse. Using CUDA and Blender is a good MVP but doesn't make for the best technical demo since it involves so many different steps: running the simulation in CUDA, exporting data to JSON, loading data into a visualuzation and then finally rendering a video of the simulation. With a popular Javascript library called Three.js we can run an interactive three-body problem simulation in real-time right in the browser. Here's the three-body simulation I also co-authored with ChatGPT-4 using Three.js:",{"type":29,"tag":13493,"props":16496,"children":16499},{"src":16497,"width":13495,"height":16498},"https://briancaffey.github.io/three-body-problem/three/",350,[],{"type":29,"tag":71,"props":16501,"children":16503},{"id":16502},"screen-adaptations-the-gaming-industry-and-the-ccp",[16504],{"type":35,"value":16505},"Screen adaptations, the gaming industry and the CCP",{"type":29,"tag":38,"props":16507,"children":16508},{},[16509],{"type":35,"value":16510},"Dream of the Red Chamber is one of China's Four Great Classical Novels and is often seen as the pinacle of Chinese fiction. It was written in the mid 18th century and first published in 1791. It is a long saga that totals 960,000 characters in length, on similar scale to the length of the Three-Body Problem trilogy. Sun Wen, a Qing dynasty artist, spent 36 years of his life doing a series of 230 paintings depicting scenes from the Dream of the Red Chamber: dream sequences, demons, goddesses, nuns, nobles, beggars, raging fires, landscapes, interiors, wildlife, gardens, temples, funerals, battles, processions, banquets, trials, operas, marriages.",{"type":29,"tag":38,"props":16512,"children":16513},{},[16514],{"type":29,"tag":192,"props":16515,"children":16518},{"alt":16516,"src":16517},"Sun Wen paintings sample","/static/three-body-problem/dorc.png",[],{"type":29,"tag":38,"props":16520,"children":16521},{},[16522],{"type":35,"value":16523},"Following in this tradition of celebrating great literature, Tencent Video and China Central Television produced a 30-episode adaptation of the Three-Body Problem that was released in Feburary 2023. It is a surprisingly faithful reproduction of the book that is worth checking out. The portrayal of Shi Qiang (Da Shi) was easily my favorite part of the series. I was also impressed by how the Three-Body VR game scenes were done with computer graphics. It got me thinking about how China is represented in some of the worlds most popular video games.",{"type":29,"tag":38,"props":16525,"children":16526},{},[16527],{"type":29,"tag":192,"props":16528,"children":16531},{"alt":16529,"src":16530},"games","/static/three-body-problem/game.png",[],{"type":29,"tag":38,"props":16533,"children":16534},{},[16535],{"type":35,"value":16536},"This is Rocket League, a competitive vehicular soccer game where players, like in the Three-Body game, must master the laws of gravity. The Chinese-themed Forbiden Temple arena shown here is one of many virtual international venues in the game. Epic Games (creator of Fortnite) bought Rocket League in 2019 for an estimated $250 to $300 million.",{"type":29,"tag":38,"props":16538,"children":16539},{},[16540],{"type":35,"value":16541},"Like Rocket League, Overwatch is a highly-competitive eSport on a global scale. It features a large roster of 38 players from all over the world. Dr. Mei-Ling Zhou (Âë®ÁæéÁÅµ) is a Chinese climatologist who uses ice both to attack opponents and to defend herself. Mei became controversial in China due to her adoption as a symbolic figure in the 2019 Hong Kong protests.",{"type":29,"tag":38,"props":16543,"children":16544},{},[16545],{"type":35,"value":16546},"Three college friends combined their interest in anime, comics and games (ACG) and literature to publish one of the most successful games created by a Chinese company and arguably one of China's most important cultural exports: Genshin Impact. miHoYo, the Shanghai-based company that develops Genshin Impact, grossed $4 billion of revenue globally in the game's first year setting a new record in the gaming industry. Like other companies of its size, miHoYo has a party committee under the Chinese Communist Party that influences the company's operations.",{"type":29,"tag":71,"props":16548,"children":16550},{"id":16549},"ai-and-layoffs-in-the-tech-industry",[16551],{"type":35,"value":16552},"AI and layoffs in the tech industry",{"type":29,"tag":38,"props":16554,"children":16555},{},[16556,16558,16565],{"type":35,"value":16557},"I have a positive attitude toward AI and its ability to supercharge the creative work we do, but I also think that replacing humans and AI-related layoffs should should be a part of the conversation. I wasn't impacted by the recent round of layoffs at my company, and I'm grateful to have the opportunity to work with a talented team on interesting problems in the health tech industry. I do have some solid references for folks in DevOps, product and backend and frontend engineering, and I‚Äôm happy to ",{"type":29,"tag":57,"props":16559,"children":16562},{"href":16560,"rel":16561},"https://www.linkedin.com/in/brian-caffey-06b22a18/",[60],[16563],{"type":35,"value":16564},"connect and share via LinkedIn",{"type":35,"value":3764},{"type":29,"tag":38,"props":16567,"children":16568},{},[16569],{"type":35,"value":16570},"Layoffs in both China and the U.S. have been pummled the tech sector over the last two years. New graduates in China are also facing a difficult job market. There are some popular expressions that paint a picture of the job market in China:",{"type":29,"tag":88,"props":16572,"children":16573},{},[16574,16579,16584,16596,16610],{"type":29,"tag":92,"props":16575,"children":16576},{},[16577],{"type":35,"value":16578},"Ë∫∫Âπ≥ Lying flat: avoiding relentless work",{"type":29,"tag":92,"props":16580,"children":16581},{},[16582],{"type":35,"value":16583},"‰πù‰πùÂÖ≠ 996 Work culture: describes working from 9AM to 9PM, 6 days a week, a common work schedule for many Chinese employees",{"type":29,"tag":92,"props":16585,"children":16586},{},[16587,16589],{"type":35,"value":16588},"ÂÖ®ËÅåÂÑøÂ•≥ Full-time Children: ",{"type":29,"tag":57,"props":16590,"children":16593},{"href":16591,"rel":16592},"https://www.cnn.com/2023/07/26/economy/china-youth-unemployment-intl-hnk/index.html",[60],[16594],{"type":35,"value":16595},"Young Chinese are getting paid to be ‚Äòfull-time children‚Äô as jobs become harder to find",{"type":29,"tag":92,"props":16597,"children":16598},{},[16599,16601,16608],{"type":35,"value":16600},"35Â≤ÅËØÖÂíí The curse of 35: ",{"type":29,"tag":57,"props":16602,"children":16605},{"href":16603,"rel":16604},"https://www.marketplace.org/shows/marketplace-tech/chinas-tech-workers-ageism-the-curse-of-35/",[60],[16606],{"type":35,"value":16607},"Ageism in China‚Äôs tech sector has workers fearing the ‚Äúcurse of 35‚Äù",{"type":35,"value":16609},". Shout out to my fellow Year of the Dragon 35 year olds! üê≤",{"type":29,"tag":92,"props":16611,"children":16612},{},[16613,16615],{"type":35,"value":16614},"ÂêÉËã¶ Eat Bitterness: ",{"type":29,"tag":57,"props":16616,"children":16619},{"href":16617,"rel":16618},"https://www.nytimes.com/2023/05/30/business/china-youth-unemployment.html",[60],[16620],{"type":35,"value":16621},"China‚Äôs Young People Can‚Äôt Find Jobs. Xi Jinping Says to ‚ÄòEat Bitterness.‚Äô",{"type":29,"tag":38,"props":16623,"children":16624},{},[16625,16627,16634],{"type":35,"value":16626},"It is an exciting time for AI. Elon Musk and Kaifu Lee have both recently released open-source large language models: Grok and Yi. Sam Altman was fired as CEO of OpenAI, then came back. Stable Diffusion just released a text to video model. AGI might already be here. In the U.S., we are going into our first presidential election cycle with AI fully turned on. Here's a ",{"type":29,"tag":57,"props":16628,"children":16631},{"href":16629,"rel":16630},"https://www.amazon.com/Three-Body-Problem-Cixin-Liu/dp/0765382032",[60],[16632],{"type":35,"value":16633},"link to The Three-Body Problem book on Amazon",{"type":35,"value":16635},". Thanks for reading and Happy Thanksgiving!",{"type":29,"tag":38,"props":16637,"children":16638},{},[16639],{"type":29,"tag":192,"props":16640,"children":16643},{"alt":16641,"src":16642},"Happy Thanksgiving","/static/three-body-problem/thanksgiving.png",[],{"type":29,"tag":3594,"props":16645,"children":16646},{},[16647],{"type":35,"value":3598},{"title":8,"searchDepth":542,"depth":542,"links":16649},[16650,16651,16654,16655,16658,16659,16663,16664],{"id":13417,"depth":542,"text":13420},{"id":13508,"depth":542,"text":13511,"children":16652},[16653],{"id":13580,"depth":562,"text":13583},{"id":13613,"depth":542,"text":13616},{"id":13673,"depth":542,"text":13676,"children":16656},[16657],{"id":13745,"depth":562,"text":13748},{"id":14271,"depth":542,"text":14274},{"id":14321,"depth":542,"text":14324,"children":16660},[16661,16662],{"id":14332,"depth":562,"text":14335},{"id":16486,"depth":562,"text":16489},{"id":16502,"depth":542,"text":16505},{"id":16549,"depth":542,"text":16552},"content:2023:08:27:python-vue-chinese-llama-2-and-the-three-body-problem.md","2023/08/27/python-vue-chinese-llama-2-and-the-three-body-problem.md","2023/08/27/python-vue-chinese-llama-2-and-the-three-body-problem",1748368251902]