[{"data":1,"prerenderedAt":133},["ShallowReactive",2],{"/blog/tags/jwt/":3},[4],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":10,"date":11,"image":12,"tags":13,"body":18,"_type":127,"_id":128,"_source":129,"_file":130,"_stem":131,"_extension":132},"/2021/08/07/authenticating-requests-with-jwt-tokens-stored-in-httponly-cookies-in-django","07",false,"","Authenticating requests with JWT tokens stored in HTTPOnly cookies in Django","This article describes how you can use JWT tokens in Django applications with decoupled frontend JavaScript applications running the browser in secure way using HttpOnly cookies.","2021-08-01","/static/djjwt/dj_jwt.png",[14,15,16,17],"django","vue","jwt","authentication",{"type":19,"children":20,"toc":118},"root",[21,30,36,42,47,53,58,69,74,81,86,95,104,109],{"type":22,"tag":23,"props":24,"children":26},"element","h2",{"id":25},"tldr",[27],{"type":28,"value":29},"text","tl;dr",{"type":22,"tag":31,"props":32,"children":33},"p",{},[34],{"type":28,"value":35},"If you want to use JWTs to securely authenticate requests to Django REST Framework applications in a decoupled frontend JavaScript application, you can do the following: store the access token in memory and store the refresh token  in an HttpOnly cookie. The refresh token is used to request new access tokens on an regular interval.",{"type":22,"tag":23,"props":37,"children":39},{"id":38},"some-context",[40],{"type":28,"value":41},"Some context",{"type":22,"tag":31,"props":43,"children":44},{},[45],{"type":28,"value":46},"Django is a web framework based on the Model, Template, View (MTV) paradigm. Django is increasingly used as an API server that is coupled with a Javascript or native frontend application.",{"type":22,"tag":23,"props":48,"children":50},{"id":49},"jwt-auth-with-httponly-cookies",[51],{"type":28,"value":52},"JWT Auth with HttpOnly Cookies",{"type":22,"tag":31,"props":54,"children":55},{},[56],{"type":28,"value":57},"Following this guide:",{"type":22,"tag":31,"props":59,"children":60},{},[61],{"type":22,"tag":62,"props":63,"children":67},"a",{"href":64,"rel":65},"https://hasura.io/blog/best-practices-of-using-jwt-with-graphql/#jwt_security",[66],"nofollow",[68],{"type":28,"value":64},{"type":22,"tag":31,"props":70,"children":71},{},[72],{"type":28,"value":73},"We can reimplement our JWT authentication setup to be more secure.",{"type":22,"tag":75,"props":76,"children":78},"h3",{"id":77},"drf-simple-jwt-modifications",[79],{"type":28,"value":80},"DRF Simple JWT modifications",{"type":22,"tag":31,"props":82,"children":83},{},[84],{"type":28,"value":85},"We need to change the default behavior of the views from DRF simple JWT as described in this issue:",{"type":22,"tag":31,"props":87,"children":88},{},[89],{"type":22,"tag":62,"props":90,"children":93},{"href":91,"rel":92},"https://github.com/jazzband/djangorestframework-simplejwt/issues/71",[66],[94],{"type":28,"value":91},{"type":22,"tag":31,"props":96,"children":97},{},[98],{"type":22,"tag":99,"props":100,"children":103},"img",{"alt":101,"src":102},"png","/static/jwt-authentication.png",[],{"type":22,"tag":31,"props":105,"children":106},{},[107],{"type":28,"value":108},"This diagram shows how authentication data moves between the Django backend and the Vue.js frontend running in the browser.",{"type":22,"tag":31,"props":110,"children":111},{},[112],{"type":22,"tag":113,"props":114,"children":115},"em",{},[116],{"type":28,"value":117},"This article should now be complete complete",{"title":8,"searchDepth":119,"depth":119,"links":120},2,[121,122,123],{"id":25,"depth":119,"text":29},{"id":38,"depth":119,"text":41},{"id":49,"depth":119,"text":52,"children":124},[125],{"id":77,"depth":126,"text":80},3,"markdown","content:2021:08:07:authenticating-requests-with-jwt-tokens-stored-in-httponly-cookies-in-django.md","content","2021/08/07/authenticating-requests-with-jwt-tokens-stored-in-httponly-cookies-in-django.md","2021/08/07/authenticating-requests-with-jwt-tokens-stored-in-httponly-cookies-in-django","md",1723349421640]