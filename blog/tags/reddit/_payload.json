[{"data":1,"prerenderedAt":5914},["ShallowReactive",2],{"/blog/tags/reddit/":3},[4],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":10,"layout":11,"date":12,"comments":13,"image":14,"tags":15,"body":21,"_type":5908,"_id":5909,"_source":5910,"_file":5911,"_stem":5912,"_extension":5913},"/2017/03/03/graph_subreddit","03",false,"","Related subreddit graph exploration with NetworkX","This notebook explores some basic concepts of graph theory. A few weeks ago I set up a script to scrape data from reddit.com with the goal of visualizing the network of related subreddits (forums on specific topics) and related data.","post","2017-03-03T00:00:00.000Z",true,"/static/subreddits.png",[16,17,18,19,20],"reddit","python","scraping","data","graphs",{"type":22,"children":23,"toc":5906},"root",[24,33,47,52,74,182,573,585,986,991,996,1009,1017,1089,1094,1149,1162,1607,1612,1637,1642,3039,3044,3106,3119,3124,3133,3138,3190,3195,3532,3541,3547,3561,3601,3638,3693,3729,3794,3838,3846,3851,3884,3892,3898,3903,3934,3942,3947,4213,4226,4240,4248,4261,4269,4282,4290,4303,4311,4324,4332,4345,4353,4366,4374,4387,4395,4408,4416,4429,4437,4450,4458,4471,4479,4492,4500,4513,4521,4544,4552,4573,4585,4840,4845,4853,4859,4872,4880,4893,4917,4922,4982,4990,5050,5057,5062,5168,5274,5282,5287,5431,5438,5444,5449,5520,5528,5569,5577,5655,5663,5668,5765,5773,5778,5828,5836,5850,5900],{"type":25,"tag":26,"props":27,"children":29},"element","h1",{"id":28},"graphing-subreddits",[30],{"type":31,"value":32},"text","Graphing Subreddits",{"type":25,"tag":34,"props":35,"children":36},"p",{},[37,39,45],{"type":31,"value":38},"This notebook explores some basic concepts of graph theory. A few weeks ago I set up a script to scrape data from ",{"type":25,"tag":40,"props":41,"children":43},"a",{"href":42},"reddit.com",[44],{"type":31,"value":42},{"type":31,"value":46}," with the goal of visualizing the network of related subreddits (forums on specific topics) and related data.",{"type":25,"tag":34,"props":48,"children":49},{},[50],{"type":31,"value":51},"Reddit is home over 600,000 communities, known as subreddits, where people come to share information, opinions, links, etc. and discuss things in a open forum. Most subreddits display links to related subreddits. For example, /r/apple (the Apple subreddit) links to /r/iPhone, a subreddit all about the iPhone, and over a dozen other Apple-related subreddits.",{"type":25,"tag":34,"props":53,"children":54},{},[55,57,64,66,72],{"type":31,"value":56},"If you visit reddit.com as a guest, you will see a list of popular subreddits. This list is located inside an ",{"type":25,"tag":58,"props":59,"children":61},"code",{"className":60},[],[62],{"type":31,"value":63},"html",{"type":31,"value":65}," tag called ",{"type":25,"tag":58,"props":67,"children":69},{"className":68},[],[70],{"type":31,"value":71},"drop-choices",{"type":31,"value":73},". Here it is:",{"type":25,"tag":75,"props":76,"children":79},"pre",{"code":77,"language":17,"meta":8,"className":78,"style":8},"from selenium import webdriver\nimport re\nimport time\nimport numpy as np\nfrom bs4 import BeautifulSoup\n","language-python shiki shiki-themes github-light github-dark monokai",[80],{"type":25,"tag":58,"props":81,"children":82},{"__ignoreMap":8},[83,111,124,137,160],{"type":25,"tag":84,"props":85,"children":88},"span",{"class":86,"line":87},"line",1,[89,95,101,106],{"type":25,"tag":84,"props":90,"children":92},{"style":91},"--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[93],{"type":31,"value":94},"from",{"type":25,"tag":84,"props":96,"children":98},{"style":97},"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[99],{"type":31,"value":100}," selenium ",{"type":25,"tag":84,"props":102,"children":103},{"style":91},[104],{"type":31,"value":105},"import",{"type":25,"tag":84,"props":107,"children":108},{"style":97},[109],{"type":31,"value":110}," webdriver\n",{"type":25,"tag":84,"props":112,"children":114},{"class":86,"line":113},2,[115,119],{"type":25,"tag":84,"props":116,"children":117},{"style":91},[118],{"type":31,"value":105},{"type":25,"tag":84,"props":120,"children":121},{"style":97},[122],{"type":31,"value":123}," re\n",{"type":25,"tag":84,"props":125,"children":127},{"class":86,"line":126},3,[128,132],{"type":25,"tag":84,"props":129,"children":130},{"style":91},[131],{"type":31,"value":105},{"type":25,"tag":84,"props":133,"children":134},{"style":97},[135],{"type":31,"value":136}," time\n",{"type":25,"tag":84,"props":138,"children":140},{"class":86,"line":139},4,[141,145,150,155],{"type":25,"tag":84,"props":142,"children":143},{"style":91},[144],{"type":31,"value":105},{"type":25,"tag":84,"props":146,"children":147},{"style":97},[148],{"type":31,"value":149}," numpy ",{"type":25,"tag":84,"props":151,"children":152},{"style":91},[153],{"type":31,"value":154},"as",{"type":25,"tag":84,"props":156,"children":157},{"style":97},[158],{"type":31,"value":159}," np\n",{"type":25,"tag":84,"props":161,"children":163},{"class":86,"line":162},5,[164,168,173,177],{"type":25,"tag":84,"props":165,"children":166},{"style":91},[167],{"type":31,"value":94},{"type":25,"tag":84,"props":169,"children":170},{"style":97},[171],{"type":31,"value":172}," bs4 ",{"type":25,"tag":84,"props":174,"children":175},{"style":91},[176],{"type":31,"value":105},{"type":25,"tag":84,"props":178,"children":179},{"style":97},[180],{"type":31,"value":181}," BeautifulSoup\n",{"type":25,"tag":75,"props":183,"children":185},{"code":184,"language":17,"meta":8,"className":78,"style":8},"driver = webdriver.PhantomJS()\ndriver.get('https://www.reddit.com/')\ntime.sleep(4 + np.random.random())\nhtml = driver.page_source.encode('utf-8')\n\ns = BeautifulSoup(html)\ndefaults = s.find('div', attrs={'class':'drop-choices'})\nsubs = re.compile(r\"\\/r\\/[\\w.]+\\/?\")\ndefault_subreddits = list(set(subs.findall(str(defaults))))\n\nfor x in default_subreddits: print '[' + x + '](https://reddit.com'+ x + '), ',\n",[186],{"type":25,"tag":58,"props":187,"children":188},{"__ignoreMap":8},[189,207,226,250,276,284,302,365,447,491,499],{"type":25,"tag":84,"props":190,"children":191},{"class":86,"line":87},[192,197,202],{"type":25,"tag":84,"props":193,"children":194},{"style":97},[195],{"type":31,"value":196},"driver ",{"type":25,"tag":84,"props":198,"children":199},{"style":91},[200],{"type":31,"value":201},"=",{"type":25,"tag":84,"props":203,"children":204},{"style":97},[205],{"type":31,"value":206}," webdriver.PhantomJS()\n",{"type":25,"tag":84,"props":208,"children":209},{"class":86,"line":113},[210,215,221],{"type":25,"tag":84,"props":211,"children":212},{"style":97},[213],{"type":31,"value":214},"driver.get(",{"type":25,"tag":84,"props":216,"children":218},{"style":217},"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[219],{"type":31,"value":220},"'https://www.reddit.com/'",{"type":25,"tag":84,"props":222,"children":223},{"style":97},[224],{"type":31,"value":225},")\n",{"type":25,"tag":84,"props":227,"children":228},{"class":86,"line":126},[229,234,240,245],{"type":25,"tag":84,"props":230,"children":231},{"style":97},[232],{"type":31,"value":233},"time.sleep(",{"type":25,"tag":84,"props":235,"children":237},{"style":236},"--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[238],{"type":31,"value":239},"4",{"type":25,"tag":84,"props":241,"children":242},{"style":91},[243],{"type":31,"value":244}," +",{"type":25,"tag":84,"props":246,"children":247},{"style":97},[248],{"type":31,"value":249}," np.random.random())\n",{"type":25,"tag":84,"props":251,"children":252},{"class":86,"line":139},[253,258,262,267,272],{"type":25,"tag":84,"props":254,"children":255},{"style":97},[256],{"type":31,"value":257},"html ",{"type":25,"tag":84,"props":259,"children":260},{"style":91},[261],{"type":31,"value":201},{"type":25,"tag":84,"props":263,"children":264},{"style":97},[265],{"type":31,"value":266}," driver.page_source.encode(",{"type":25,"tag":84,"props":268,"children":269},{"style":217},[270],{"type":31,"value":271},"'utf-8'",{"type":25,"tag":84,"props":273,"children":274},{"style":97},[275],{"type":31,"value":225},{"type":25,"tag":84,"props":277,"children":278},{"class":86,"line":162},[279],{"type":25,"tag":84,"props":280,"children":281},{"emptyLinePlaceholder":13},[282],{"type":31,"value":283},"\n",{"type":25,"tag":84,"props":285,"children":287},{"class":86,"line":286},6,[288,293,297],{"type":25,"tag":84,"props":289,"children":290},{"style":97},[291],{"type":31,"value":292},"s ",{"type":25,"tag":84,"props":294,"children":295},{"style":91},[296],{"type":31,"value":201},{"type":25,"tag":84,"props":298,"children":299},{"style":97},[300],{"type":31,"value":301}," BeautifulSoup(html)\n",{"type":25,"tag":84,"props":303,"children":305},{"class":86,"line":304},7,[306,311,315,320,325,330,336,340,345,350,355,360],{"type":25,"tag":84,"props":307,"children":308},{"style":97},[309],{"type":31,"value":310},"defaults ",{"type":25,"tag":84,"props":312,"children":313},{"style":91},[314],{"type":31,"value":201},{"type":25,"tag":84,"props":316,"children":317},{"style":97},[318],{"type":31,"value":319}," s.find(",{"type":25,"tag":84,"props":321,"children":322},{"style":217},[323],{"type":31,"value":324},"'div'",{"type":25,"tag":84,"props":326,"children":327},{"style":97},[328],{"type":31,"value":329},", ",{"type":25,"tag":84,"props":331,"children":333},{"style":332},"--shiki-default:#E36209;--shiki-dark:#FFAB70;--shiki-sepia:#FD971F;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[334],{"type":31,"value":335},"attrs",{"type":25,"tag":84,"props":337,"children":338},{"style":91},[339],{"type":31,"value":201},{"type":25,"tag":84,"props":341,"children":342},{"style":97},[343],{"type":31,"value":344},"{",{"type":25,"tag":84,"props":346,"children":347},{"style":217},[348],{"type":31,"value":349},"'class'",{"type":25,"tag":84,"props":351,"children":352},{"style":97},[353],{"type":31,"value":354},":",{"type":25,"tag":84,"props":356,"children":357},{"style":217},[358],{"type":31,"value":359},"'drop-choices'",{"type":25,"tag":84,"props":361,"children":362},{"style":97},[363],{"type":31,"value":364},"})\n",{"type":25,"tag":84,"props":366,"children":368},{"class":86,"line":367},8,[369,374,378,383,389,394,400,405,409,414,420,425,430,434,439,443],{"type":25,"tag":84,"props":370,"children":371},{"style":97},[372],{"type":31,"value":373},"subs ",{"type":25,"tag":84,"props":375,"children":376},{"style":91},[377],{"type":31,"value":201},{"type":25,"tag":84,"props":379,"children":380},{"style":97},[381],{"type":31,"value":382}," re.compile(",{"type":25,"tag":84,"props":384,"children":386},{"style":385},"--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#66D9EF;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[387],{"type":31,"value":388},"r",{"type":25,"tag":84,"props":390,"children":391},{"style":217},[392],{"type":31,"value":393},"\"",{"type":25,"tag":84,"props":395,"children":397},{"style":396},"--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#AE81FF;--shiki-default-font-weight:bold;--shiki-dark-font-weight:bold;--shiki-sepia-font-weight:inherit",[398],{"type":31,"value":399},"\\/",{"type":25,"tag":84,"props":401,"children":403},{"style":402},"--shiki-default:#032F62;--shiki-dark:#DBEDFF;--shiki-sepia:#E6DB74",[404],{"type":31,"value":388},{"type":25,"tag":84,"props":406,"children":407},{"style":396},[408],{"type":31,"value":399},{"type":25,"tag":84,"props":410,"children":411},{"style":236},[412],{"type":31,"value":413},"[",{"type":25,"tag":84,"props":415,"children":417},{"style":416},"--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#E6DB74",[418],{"type":31,"value":419},"\\w",{"type":25,"tag":84,"props":421,"children":422},{"style":236},[423],{"type":31,"value":424},".]",{"type":25,"tag":84,"props":426,"children":427},{"style":91},[428],{"type":31,"value":429},"+",{"type":25,"tag":84,"props":431,"children":432},{"style":396},[433],{"type":31,"value":399},{"type":25,"tag":84,"props":435,"children":436},{"style":91},[437],{"type":31,"value":438},"?",{"type":25,"tag":84,"props":440,"children":441},{"style":217},[442],{"type":31,"value":393},{"type":25,"tag":84,"props":444,"children":445},{"style":97},[446],{"type":31,"value":225},{"type":25,"tag":84,"props":448,"children":450},{"class":86,"line":449},9,[451,456,460,466,471,476,481,486],{"type":25,"tag":84,"props":452,"children":453},{"style":97},[454],{"type":31,"value":455},"default_subreddits ",{"type":25,"tag":84,"props":457,"children":458},{"style":91},[459],{"type":31,"value":201},{"type":25,"tag":84,"props":461,"children":463},{"style":462},"--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#66D9EF;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[464],{"type":31,"value":465}," list",{"type":25,"tag":84,"props":467,"children":468},{"style":97},[469],{"type":31,"value":470},"(",{"type":25,"tag":84,"props":472,"children":473},{"style":462},[474],{"type":31,"value":475},"set",{"type":25,"tag":84,"props":477,"children":478},{"style":97},[479],{"type":31,"value":480},"(subs.findall(",{"type":25,"tag":84,"props":482,"children":483},{"style":462},[484],{"type":31,"value":485},"str",{"type":25,"tag":84,"props":487,"children":488},{"style":97},[489],{"type":31,"value":490},"(defaults))))\n",{"type":25,"tag":84,"props":492,"children":494},{"class":86,"line":493},10,[495],{"type":25,"tag":84,"props":496,"children":497},{"emptyLinePlaceholder":13},[498],{"type":31,"value":283},{"type":25,"tag":84,"props":500,"children":502},{"class":86,"line":501},11,[503,508,513,518,523,529,534,538,542,546,551,555,559,563,568],{"type":25,"tag":84,"props":504,"children":505},{"style":91},[506],{"type":31,"value":507},"for",{"type":25,"tag":84,"props":509,"children":510},{"style":97},[511],{"type":31,"value":512}," x ",{"type":25,"tag":84,"props":514,"children":515},{"style":91},[516],{"type":31,"value":517},"in",{"type":25,"tag":84,"props":519,"children":520},{"style":97},[521],{"type":31,"value":522}," default_subreddits: ",{"type":25,"tag":84,"props":524,"children":526},{"style":525},"--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#66D9EF",[527],{"type":31,"value":528},"print",{"type":25,"tag":84,"props":530,"children":531},{"style":217},[532],{"type":31,"value":533}," '['",{"type":25,"tag":84,"props":535,"children":536},{"style":91},[537],{"type":31,"value":244},{"type":25,"tag":84,"props":539,"children":540},{"style":97},[541],{"type":31,"value":512},{"type":25,"tag":84,"props":543,"children":544},{"style":91},[545],{"type":31,"value":429},{"type":25,"tag":84,"props":547,"children":548},{"style":217},[549],{"type":31,"value":550}," '](https://reddit.com'",{"type":25,"tag":84,"props":552,"children":553},{"style":91},[554],{"type":31,"value":429},{"type":25,"tag":84,"props":556,"children":557},{"style":97},[558],{"type":31,"value":512},{"type":25,"tag":84,"props":560,"children":561},{"style":91},[562],{"type":31,"value":429},{"type":25,"tag":84,"props":564,"children":565},{"style":217},[566],{"type":31,"value":567}," '), '",{"type":25,"tag":84,"props":569,"children":570},{"style":97},[571],{"type":31,"value":572},",\n",{"type":25,"tag":34,"props":574,"children":575},{},[576,578,584],{"type":31,"value":577},"Here are the elements of ",{"type":25,"tag":58,"props":579,"children":581},{"className":580},[],[582],{"type":31,"value":583},"default_subreddits",{"type":31,"value":354},{"type":25,"tag":586,"props":587,"children":588},"blockquote",{},[589],{"type":25,"tag":34,"props":590,"children":591},{},[592,600,601,608,609,616,617,624,625,632,633,640,641,648,649,656,657,664,665,672,673,680,681,688,689,696,697,704,705,712,713,720,721,728,729,736,737,744,745,752,753,760,761,768,769,776,777,784,785,792,793,800,801,808,809,816,817,824,825,832,833,840,841,848,849,856,857,864,865,872,873,880,881,888,889,896,897,904,905,912,913,920,921,928,929,936,937,944,945,952,953,960,961,968,969,976,977,984],{"type":25,"tag":40,"props":593,"children":597},{"href":594,"rel":595},"https://reddit.com/r/LifeProTips/",[596],"nofollow",[598],{"type":31,"value":599},"/r/LifeProTips/",{"type":31,"value":329},{"type":25,"tag":40,"props":602,"children":605},{"href":603,"rel":604},"https://reddit.com/r/Futurology/",[596],[606],{"type":31,"value":607},"/r/Futurology/",{"type":31,"value":329},{"type":25,"tag":40,"props":610,"children":613},{"href":611,"rel":612},"https://reddit.com/r/OldSchoolCool/",[596],[614],{"type":31,"value":615},"/r/OldSchoolCool/",{"type":31,"value":329},{"type":25,"tag":40,"props":618,"children":621},{"href":619,"rel":620},"https://reddit.com/r/mildlyinteresting/",[596],[622],{"type":31,"value":623},"/r/mildlyinteresting/",{"type":31,"value":329},{"type":25,"tag":40,"props":626,"children":629},{"href":627,"rel":628},"https://reddit.com/r/askscience/",[596],[630],{"type":31,"value":631},"/r/askscience/",{"type":31,"value":329},{"type":25,"tag":40,"props":634,"children":637},{"href":635,"rel":636},"https://reddit.com/r/UpliftingNews/",[596],[638],{"type":31,"value":639},"/r/UpliftingNews/",{"type":31,"value":329},{"type":25,"tag":40,"props":642,"children":645},{"href":643,"rel":644},"https://reddit.com/r/aww/",[596],[646],{"type":31,"value":647},"/r/aww/",{"type":31,"value":329},{"type":25,"tag":40,"props":650,"children":653},{"href":651,"rel":652},"https://reddit.com/r/GetMotivated/",[596],[654],{"type":31,"value":655},"/r/GetMotivated/",{"type":31,"value":329},{"type":25,"tag":40,"props":658,"children":661},{"href":659,"rel":660},"https://reddit.com/r/personalfinance/",[596],[662],{"type":31,"value":663},"/r/personalfinance/",{"type":31,"value":329},{"type":25,"tag":40,"props":666,"children":669},{"href":667,"rel":668},"https://reddit.com/r/gadgets/",[596],[670],{"type":31,"value":671},"/r/gadgets/",{"type":31,"value":329},{"type":25,"tag":40,"props":674,"children":677},{"href":675,"rel":676},"https://reddit.com/r/science/",[596],[678],{"type":31,"value":679},"/r/science/",{"type":31,"value":329},{"type":25,"tag":40,"props":682,"children":685},{"href":683,"rel":684},"https://reddit.com/r/dataisbeautiful/",[596],[686],{"type":31,"value":687},"/r/dataisbeautiful/",{"type":31,"value":329},{"type":25,"tag":40,"props":690,"children":693},{"href":691,"rel":692},"https://reddit.com/r/DIY/",[596],[694],{"type":31,"value":695},"/r/DIY/",{"type":31,"value":329},{"type":25,"tag":40,"props":698,"children":701},{"href":699,"rel":700},"https://reddit.com/r/AskReddit/",[596],[702],{"type":31,"value":703},"/r/AskReddit/",{"type":31,"value":329},{"type":25,"tag":40,"props":706,"children":709},{"href":707,"rel":708},"https://reddit.com/r/space/",[596],[710],{"type":31,"value":711},"/r/space/",{"type":31,"value":329},{"type":25,"tag":40,"props":714,"children":717},{"href":715,"rel":716},"https://reddit.com/r/nosleep/",[596],[718],{"type":31,"value":719},"/r/nosleep/",{"type":31,"value":329},{"type":25,"tag":40,"props":722,"children":725},{"href":723,"rel":724},"https://reddit.com/r/Documentaries/",[596],[726],{"type":31,"value":727},"/r/Documentaries/",{"type":31,"value":329},{"type":25,"tag":40,"props":730,"children":733},{"href":731,"rel":732},"https://reddit.com/r/todayilearned/",[596],[734],{"type":31,"value":735},"/r/todayilearned/",{"type":31,"value":329},{"type":25,"tag":40,"props":738,"children":741},{"href":739,"rel":740},"https://reddit.com/r/television/",[596],[742],{"type":31,"value":743},"/r/television/",{"type":31,"value":329},{"type":25,"tag":40,"props":746,"children":749},{"href":747,"rel":748},"https://reddit.com/r/IAmA/",[596],[750],{"type":31,"value":751},"/r/IAmA/",{"type":31,"value":329},{"type":25,"tag":40,"props":754,"children":757},{"href":755,"rel":756},"https://reddit.com/r/Art/",[596],[758],{"type":31,"value":759},"/r/Art/",{"type":31,"value":329},{"type":25,"tag":40,"props":762,"children":765},{"href":763,"rel":764},"https://reddit.com/r/EarthPorn/",[596],[766],{"type":31,"value":767},"/r/EarthPorn/",{"type":31,"value":329},{"type":25,"tag":40,"props":770,"children":773},{"href":771,"rel":772},"https://reddit.com/r/books/",[596],[774],{"type":31,"value":775},"/r/books/",{"type":31,"value":329},{"type":25,"tag":40,"props":778,"children":781},{"href":779,"rel":780},"https://reddit.com/r/gifs/",[596],[782],{"type":31,"value":783},"/r/gifs/",{"type":31,"value":329},{"type":25,"tag":40,"props":786,"children":789},{"href":787,"rel":788},"https://reddit.com/r/Showerthoughts/",[596],[790],{"type":31,"value":791},"/r/Showerthoughts/",{"type":31,"value":329},{"type":25,"tag":40,"props":794,"children":797},{"href":795,"rel":796},"https://reddit.com/r/blog/",[596],[798],{"type":31,"value":799},"/r/blog/",{"type":31,"value":329},{"type":25,"tag":40,"props":802,"children":805},{"href":803,"rel":804},"https://reddit.com/r/news/",[596],[806],{"type":31,"value":807},"/r/news/",{"type":31,"value":329},{"type":25,"tag":40,"props":810,"children":813},{"href":811,"rel":812},"https://reddit.com/r/Jokes/",[596],[814],{"type":31,"value":815},"/r/Jokes/",{"type":31,"value":329},{"type":25,"tag":40,"props":818,"children":821},{"href":819,"rel":820},"https://reddit.com/r/TwoXChromosomes/",[596],[822],{"type":31,"value":823},"/r/TwoXChromosomes/",{"type":31,"value":329},{"type":25,"tag":40,"props":826,"children":829},{"href":827,"rel":828},"https://reddit.com/r/videos/",[596],[830],{"type":31,"value":831},"/r/videos/",{"type":31,"value":329},{"type":25,"tag":40,"props":834,"children":837},{"href":835,"rel":836},"https://reddit.com/r/philosophy/",[596],[838],{"type":31,"value":839},"/r/philosophy/",{"type":31,"value":329},{"type":25,"tag":40,"props":842,"children":845},{"href":843,"rel":844},"https://reddit.com/r/nottheonion/",[596],[846],{"type":31,"value":847},"/r/nottheonion/",{"type":31,"value":329},{"type":25,"tag":40,"props":850,"children":853},{"href":851,"rel":852},"https://reddit.com/r/explainlikeimfive/",[596],[854],{"type":31,"value":855},"/r/explainlikeimfive/",{"type":31,"value":329},{"type":25,"tag":40,"props":858,"children":861},{"href":859,"rel":860},"https://reddit.com/r/movies/",[596],[862],{"type":31,"value":863},"/r/movies/",{"type":31,"value":329},{"type":25,"tag":40,"props":866,"children":869},{"href":867,"rel":868},"https://reddit.com/r/Music/",[596],[870],{"type":31,"value":871},"/r/Music/",{"type":31,"value":329},{"type":25,"tag":40,"props":874,"children":877},{"href":875,"rel":876},"https://reddit.com/r/WritingPrompts/",[596],[878],{"type":31,"value":879},"/r/WritingPrompts/",{"type":31,"value":329},{"type":25,"tag":40,"props":882,"children":885},{"href":883,"rel":884},"https://reddit.com/r/worldnews/",[596],[886],{"type":31,"value":887},"/r/worldnews/",{"type":31,"value":329},{"type":25,"tag":40,"props":890,"children":893},{"href":891,"rel":892},"https://reddit.com/r/pics/",[596],[894],{"type":31,"value":895},"/r/pics/",{"type":31,"value":329},{"type":25,"tag":40,"props":898,"children":901},{"href":899,"rel":900},"https://reddit.com/r/history/",[596],[902],{"type":31,"value":903},"/r/history/",{"type":31,"value":329},{"type":25,"tag":40,"props":906,"children":909},{"href":907,"rel":908},"https://reddit.com/r/listentothis/",[596],[910],{"type":31,"value":911},"/r/listentothis/",{"type":31,"value":329},{"type":25,"tag":40,"props":914,"children":917},{"href":915,"rel":916},"https://reddit.com/r/sports/",[596],[918],{"type":31,"value":919},"/r/sports/",{"type":31,"value":329},{"type":25,"tag":40,"props":922,"children":925},{"href":923,"rel":924},"https://reddit.com/r/food/",[596],[926],{"type":31,"value":927},"/r/food/",{"type":31,"value":329},{"type":25,"tag":40,"props":930,"children":933},{"href":931,"rel":932},"https://reddit.com/r/creepy/",[596],[934],{"type":31,"value":935},"/r/creepy/",{"type":31,"value":329},{"type":25,"tag":40,"props":938,"children":941},{"href":939,"rel":940},"https://reddit.com/r/announcements/",[596],[942],{"type":31,"value":943},"/r/announcements/",{"type":31,"value":329},{"type":25,"tag":40,"props":946,"children":949},{"href":947,"rel":948},"https://reddit.com/r/gaming/",[596],[950],{"type":31,"value":951},"/r/gaming/",{"type":31,"value":329},{"type":25,"tag":40,"props":954,"children":957},{"href":955,"rel":956},"https://reddit.com/r/tifu/",[596],[958],{"type":31,"value":959},"/r/tifu/",{"type":31,"value":329},{"type":25,"tag":40,"props":962,"children":965},{"href":963,"rel":964},"https://reddit.com/r/funny/",[596],[966],{"type":31,"value":967},"/r/funny/",{"type":31,"value":329},{"type":25,"tag":40,"props":970,"children":973},{"href":971,"rel":972},"https://reddit.com/r/photoshopbattles/",[596],[974],{"type":31,"value":975},"/r/photoshopbattles/",{"type":31,"value":329},{"type":25,"tag":40,"props":978,"children":981},{"href":979,"rel":980},"https://reddit.com/r/InternetIsBeautiful/",[596],[982],{"type":31,"value":983},"/r/InternetIsBeautiful/",{"type":31,"value":985},",",{"type":25,"tag":34,"props":987,"children":988},{},[989],{"type":31,"value":990},"My goal here is to see how many subreddits we can reach as we branch off of these \"default\" subreddits into their related subreddits.",{"type":25,"tag":34,"props":992,"children":993},{},[994],{"type":31,"value":995},"First, we need to set up data structures to hold data for subreddits and their related subreddits. And we need to define an algorithm for collecting data.",{"type":25,"tag":34,"props":997,"children":998},{},[999,1001,1008],{"type":31,"value":1000},"Here's an intrdoduction to graphs from ",{"type":25,"tag":40,"props":1002,"children":1005},{"href":1003,"rel":1004},"https://www.python.org/doc/essays/graphs/",[596],[1006],{"type":31,"value":1007},"python.org",{"type":31,"value":354},{"type":25,"tag":586,"props":1010,"children":1011},{},[1012],{"type":25,"tag":34,"props":1013,"children":1014},{},[1015],{"type":31,"value":1016},"Few programming languages provide direct support for graphs as a data type, and Python is no exception. However, graphs are easily built out of lists and dictionaries. For instance, here's a simple graph (I can't use drawings in these columns, so I write down the graph's arcs):",{"type":25,"tag":75,"props":1018,"children":1021},{"code":1019,"language":31,"meta":8,"className":1020,"style":8},"A -> B\nA -> C\nB -> C\nB -> D\nC -> D\nD -> C\nE -> F\nF -> C\n","language-text shiki shiki-themes github-light github-dark monokai",[1022],{"type":25,"tag":58,"props":1023,"children":1024},{"__ignoreMap":8},[1025,1033,1041,1049,1057,1065,1073,1081],{"type":25,"tag":84,"props":1026,"children":1027},{"class":86,"line":87},[1028],{"type":25,"tag":84,"props":1029,"children":1030},{},[1031],{"type":31,"value":1032},"A -> B\n",{"type":25,"tag":84,"props":1034,"children":1035},{"class":86,"line":113},[1036],{"type":25,"tag":84,"props":1037,"children":1038},{},[1039],{"type":31,"value":1040},"A -> C\n",{"type":25,"tag":84,"props":1042,"children":1043},{"class":86,"line":126},[1044],{"type":25,"tag":84,"props":1045,"children":1046},{},[1047],{"type":31,"value":1048},"B -> C\n",{"type":25,"tag":84,"props":1050,"children":1051},{"class":86,"line":139},[1052],{"type":25,"tag":84,"props":1053,"children":1054},{},[1055],{"type":31,"value":1056},"B -> D\n",{"type":25,"tag":84,"props":1058,"children":1059},{"class":86,"line":162},[1060],{"type":25,"tag":84,"props":1061,"children":1062},{},[1063],{"type":31,"value":1064},"C -> D\n",{"type":25,"tag":84,"props":1066,"children":1067},{"class":86,"line":286},[1068],{"type":25,"tag":84,"props":1069,"children":1070},{},[1071],{"type":31,"value":1072},"D -> C\n",{"type":25,"tag":84,"props":1074,"children":1075},{"class":86,"line":304},[1076],{"type":25,"tag":84,"props":1077,"children":1078},{},[1079],{"type":31,"value":1080},"E -> F\n",{"type":25,"tag":84,"props":1082,"children":1083},{"class":86,"line":367},[1084],{"type":25,"tag":84,"props":1085,"children":1086},{},[1087],{"type":31,"value":1088},"F -> C\n",{"type":25,"tag":34,"props":1090,"children":1091},{},[1092],{"type":31,"value":1093},"This graph has six nodes (A-F) and eight arcs. It can be represented by the following Python data structure:",{"type":25,"tag":75,"props":1095,"children":1097},{"code":1096,"language":31,"meta":8,"className":1020,"style":8},"graph =     {'A': ['B', 'C'],\n             'B': ['C', 'D'],\n             'C': ['D'],\n             'D': ['C'],\n             'E': ['F'],\n             'F': ['C']}\n",[1098],{"type":25,"tag":58,"props":1099,"children":1100},{"__ignoreMap":8},[1101,1109,1117,1125,1133,1141],{"type":25,"tag":84,"props":1102,"children":1103},{"class":86,"line":87},[1104],{"type":25,"tag":84,"props":1105,"children":1106},{},[1107],{"type":31,"value":1108},"graph =     {'A': ['B', 'C'],\n",{"type":25,"tag":84,"props":1110,"children":1111},{"class":86,"line":113},[1112],{"type":25,"tag":84,"props":1113,"children":1114},{},[1115],{"type":31,"value":1116},"             'B': ['C', 'D'],\n",{"type":25,"tag":84,"props":1118,"children":1119},{"class":86,"line":126},[1120],{"type":25,"tag":84,"props":1121,"children":1122},{},[1123],{"type":31,"value":1124},"             'C': ['D'],\n",{"type":25,"tag":84,"props":1126,"children":1127},{"class":86,"line":139},[1128],{"type":25,"tag":84,"props":1129,"children":1130},{},[1131],{"type":31,"value":1132},"             'D': ['C'],\n",{"type":25,"tag":84,"props":1134,"children":1135},{"class":86,"line":162},[1136],{"type":25,"tag":84,"props":1137,"children":1138},{},[1139],{"type":31,"value":1140},"             'E': ['F'],\n",{"type":25,"tag":84,"props":1142,"children":1143},{"class":86,"line":286},[1144],{"type":25,"tag":84,"props":1145,"children":1146},{},[1147],{"type":31,"value":1148},"             'F': ['C']}\n",{"type":25,"tag":34,"props":1150,"children":1151},{},[1152,1154,1160],{"type":31,"value":1153},"First let's define how we would go only one branch deep into this graph (i.e. find the related subreddits for ",{"type":25,"tag":1155,"props":1156,"children":1157},"em",{},[1158],{"type":31,"value":1159},"only",{"type":31,"value":1161}," the default subreddits). To collect the data, I first looped through the default subreddits and save the html of each subreddit to its own text file. Here's a script with comments:",{"type":25,"tag":75,"props":1163,"children":1165},{"code":1164,"language":17,"meta":8,"className":78,"style":8},"#first we navigate to the correct folder where we will store the first level of related subreddits\nos.chdir(os.path.expanduser('~/Documents/Projects/Data/Subreddits/one/'))\n\n#next we instantiate the webdriver we will be using: PhantomJS\ndriver = webdriver.PhantomJS()\n\n#loop through the list of default subreddits\nfor num, subreddit in enumerate(default_subreddits):\n\n    #for each subreddit, we append the /r/subreddit path to the base URL (reddit.com)\n    driver.get('https://www.reddit.com'+subreddit)\n\n    #wait for two seconds\n    time.sleep(2 + np.random.random())\n\n    #save the html of the loaded page to a variable: html\n    html = driver.page_source.encode('utf-8')\n\n    #remove '/r/' from the subreddit name string\n    name = subreddit.split('/')[2]\n\n    #open a new file and give it the name of the subreddit we just scraped\n    subreddit_html_file = open(name+'.txt', 'w+')\n\n    #write the html contents to the file\n    subreddit_html_file.write(html)\n\n    #clost the file\n    subreddit_html_file.close()\n\n    #print out the number and name of the subreddit we just scrapped to make sure things are working\n    print str(num) + ' ' + subreddit,\n\n",[1166],{"type":25,"tag":58,"props":1167,"children":1168},{"__ignoreMap":8},[1169,1178,1196,1203,1211,1226,1233,1241,1267,1274,1282,1304,1312,1321,1343,1351,1360,1385,1393,1402,1439,1447,1456,1501,1509,1518,1527,1535,1544,1553,1561,1570],{"type":25,"tag":84,"props":1170,"children":1171},{"class":86,"line":87},[1172],{"type":25,"tag":84,"props":1173,"children":1175},{"style":1174},"--shiki-default:#6A737D;--shiki-dark:#6A737D;--shiki-sepia:#88846F",[1176],{"type":31,"value":1177},"#first we navigate to the correct folder where we will store the first level of related subreddits\n",{"type":25,"tag":84,"props":1179,"children":1180},{"class":86,"line":113},[1181,1186,1191],{"type":25,"tag":84,"props":1182,"children":1183},{"style":97},[1184],{"type":31,"value":1185},"os.chdir(os.path.expanduser(",{"type":25,"tag":84,"props":1187,"children":1188},{"style":217},[1189],{"type":31,"value":1190},"'~/Documents/Projects/Data/Subreddits/one/'",{"type":25,"tag":84,"props":1192,"children":1193},{"style":97},[1194],{"type":31,"value":1195},"))\n",{"type":25,"tag":84,"props":1197,"children":1198},{"class":86,"line":126},[1199],{"type":25,"tag":84,"props":1200,"children":1201},{"emptyLinePlaceholder":13},[1202],{"type":31,"value":283},{"type":25,"tag":84,"props":1204,"children":1205},{"class":86,"line":139},[1206],{"type":25,"tag":84,"props":1207,"children":1208},{"style":1174},[1209],{"type":31,"value":1210},"#next we instantiate the webdriver we will be using: PhantomJS\n",{"type":25,"tag":84,"props":1212,"children":1213},{"class":86,"line":162},[1214,1218,1222],{"type":25,"tag":84,"props":1215,"children":1216},{"style":97},[1217],{"type":31,"value":196},{"type":25,"tag":84,"props":1219,"children":1220},{"style":91},[1221],{"type":31,"value":201},{"type":25,"tag":84,"props":1223,"children":1224},{"style":97},[1225],{"type":31,"value":206},{"type":25,"tag":84,"props":1227,"children":1228},{"class":86,"line":286},[1229],{"type":25,"tag":84,"props":1230,"children":1231},{"emptyLinePlaceholder":13},[1232],{"type":31,"value":283},{"type":25,"tag":84,"props":1234,"children":1235},{"class":86,"line":304},[1236],{"type":25,"tag":84,"props":1237,"children":1238},{"style":1174},[1239],{"type":31,"value":1240},"#loop through the list of default subreddits\n",{"type":25,"tag":84,"props":1242,"children":1243},{"class":86,"line":367},[1244,1248,1253,1257,1262],{"type":25,"tag":84,"props":1245,"children":1246},{"style":91},[1247],{"type":31,"value":507},{"type":25,"tag":84,"props":1249,"children":1250},{"style":97},[1251],{"type":31,"value":1252}," num, subreddit ",{"type":25,"tag":84,"props":1254,"children":1255},{"style":91},[1256],{"type":31,"value":517},{"type":25,"tag":84,"props":1258,"children":1259},{"style":525},[1260],{"type":31,"value":1261}," enumerate",{"type":25,"tag":84,"props":1263,"children":1264},{"style":97},[1265],{"type":31,"value":1266},"(default_subreddits):\n",{"type":25,"tag":84,"props":1268,"children":1269},{"class":86,"line":449},[1270],{"type":25,"tag":84,"props":1271,"children":1272},{"emptyLinePlaceholder":13},[1273],{"type":31,"value":283},{"type":25,"tag":84,"props":1275,"children":1276},{"class":86,"line":493},[1277],{"type":25,"tag":84,"props":1278,"children":1279},{"style":1174},[1280],{"type":31,"value":1281},"    #for each subreddit, we append the /r/subreddit path to the base URL (reddit.com)\n",{"type":25,"tag":84,"props":1283,"children":1284},{"class":86,"line":501},[1285,1290,1295,1299],{"type":25,"tag":84,"props":1286,"children":1287},{"style":97},[1288],{"type":31,"value":1289},"    driver.get(",{"type":25,"tag":84,"props":1291,"children":1292},{"style":217},[1293],{"type":31,"value":1294},"'https://www.reddit.com'",{"type":25,"tag":84,"props":1296,"children":1297},{"style":91},[1298],{"type":31,"value":429},{"type":25,"tag":84,"props":1300,"children":1301},{"style":97},[1302],{"type":31,"value":1303},"subreddit)\n",{"type":25,"tag":84,"props":1305,"children":1307},{"class":86,"line":1306},12,[1308],{"type":25,"tag":84,"props":1309,"children":1310},{"emptyLinePlaceholder":13},[1311],{"type":31,"value":283},{"type":25,"tag":84,"props":1313,"children":1315},{"class":86,"line":1314},13,[1316],{"type":25,"tag":84,"props":1317,"children":1318},{"style":1174},[1319],{"type":31,"value":1320},"    #wait for two seconds\n",{"type":25,"tag":84,"props":1322,"children":1324},{"class":86,"line":1323},14,[1325,1330,1335,1339],{"type":25,"tag":84,"props":1326,"children":1327},{"style":97},[1328],{"type":31,"value":1329},"    time.sleep(",{"type":25,"tag":84,"props":1331,"children":1332},{"style":236},[1333],{"type":31,"value":1334},"2",{"type":25,"tag":84,"props":1336,"children":1337},{"style":91},[1338],{"type":31,"value":244},{"type":25,"tag":84,"props":1340,"children":1341},{"style":97},[1342],{"type":31,"value":249},{"type":25,"tag":84,"props":1344,"children":1346},{"class":86,"line":1345},15,[1347],{"type":25,"tag":84,"props":1348,"children":1349},{"emptyLinePlaceholder":13},[1350],{"type":31,"value":283},{"type":25,"tag":84,"props":1352,"children":1354},{"class":86,"line":1353},16,[1355],{"type":25,"tag":84,"props":1356,"children":1357},{"style":1174},[1358],{"type":31,"value":1359},"    #save the html of the loaded page to a variable: html\n",{"type":25,"tag":84,"props":1361,"children":1363},{"class":86,"line":1362},17,[1364,1369,1373,1377,1381],{"type":25,"tag":84,"props":1365,"children":1366},{"style":97},[1367],{"type":31,"value":1368},"    html ",{"type":25,"tag":84,"props":1370,"children":1371},{"style":91},[1372],{"type":31,"value":201},{"type":25,"tag":84,"props":1374,"children":1375},{"style":97},[1376],{"type":31,"value":266},{"type":25,"tag":84,"props":1378,"children":1379},{"style":217},[1380],{"type":31,"value":271},{"type":25,"tag":84,"props":1382,"children":1383},{"style":97},[1384],{"type":31,"value":225},{"type":25,"tag":84,"props":1386,"children":1388},{"class":86,"line":1387},18,[1389],{"type":25,"tag":84,"props":1390,"children":1391},{"emptyLinePlaceholder":13},[1392],{"type":31,"value":283},{"type":25,"tag":84,"props":1394,"children":1396},{"class":86,"line":1395},19,[1397],{"type":25,"tag":84,"props":1398,"children":1399},{"style":1174},[1400],{"type":31,"value":1401},"    #remove '/r/' from the subreddit name string\n",{"type":25,"tag":84,"props":1403,"children":1405},{"class":86,"line":1404},20,[1406,1411,1415,1420,1425,1430,1434],{"type":25,"tag":84,"props":1407,"children":1408},{"style":97},[1409],{"type":31,"value":1410},"    name ",{"type":25,"tag":84,"props":1412,"children":1413},{"style":91},[1414],{"type":31,"value":201},{"type":25,"tag":84,"props":1416,"children":1417},{"style":97},[1418],{"type":31,"value":1419}," subreddit.split(",{"type":25,"tag":84,"props":1421,"children":1422},{"style":217},[1423],{"type":31,"value":1424},"'/'",{"type":25,"tag":84,"props":1426,"children":1427},{"style":97},[1428],{"type":31,"value":1429},")[",{"type":25,"tag":84,"props":1431,"children":1432},{"style":236},[1433],{"type":31,"value":1334},{"type":25,"tag":84,"props":1435,"children":1436},{"style":97},[1437],{"type":31,"value":1438},"]\n",{"type":25,"tag":84,"props":1440,"children":1442},{"class":86,"line":1441},21,[1443],{"type":25,"tag":84,"props":1444,"children":1445},{"emptyLinePlaceholder":13},[1446],{"type":31,"value":283},{"type":25,"tag":84,"props":1448,"children":1450},{"class":86,"line":1449},22,[1451],{"type":25,"tag":84,"props":1452,"children":1453},{"style":1174},[1454],{"type":31,"value":1455},"    #open a new file and give it the name of the subreddit we just scraped\n",{"type":25,"tag":84,"props":1457,"children":1459},{"class":86,"line":1458},23,[1460,1465,1469,1474,1479,1483,1488,1492,1497],{"type":25,"tag":84,"props":1461,"children":1462},{"style":97},[1463],{"type":31,"value":1464},"    subreddit_html_file ",{"type":25,"tag":84,"props":1466,"children":1467},{"style":91},[1468],{"type":31,"value":201},{"type":25,"tag":84,"props":1470,"children":1471},{"style":525},[1472],{"type":31,"value":1473}," open",{"type":25,"tag":84,"props":1475,"children":1476},{"style":97},[1477],{"type":31,"value":1478},"(name",{"type":25,"tag":84,"props":1480,"children":1481},{"style":91},[1482],{"type":31,"value":429},{"type":25,"tag":84,"props":1484,"children":1485},{"style":217},[1486],{"type":31,"value":1487},"'.txt'",{"type":25,"tag":84,"props":1489,"children":1490},{"style":97},[1491],{"type":31,"value":329},{"type":25,"tag":84,"props":1493,"children":1494},{"style":217},[1495],{"type":31,"value":1496},"'w+'",{"type":25,"tag":84,"props":1498,"children":1499},{"style":97},[1500],{"type":31,"value":225},{"type":25,"tag":84,"props":1502,"children":1504},{"class":86,"line":1503},24,[1505],{"type":25,"tag":84,"props":1506,"children":1507},{"emptyLinePlaceholder":13},[1508],{"type":31,"value":283},{"type":25,"tag":84,"props":1510,"children":1512},{"class":86,"line":1511},25,[1513],{"type":25,"tag":84,"props":1514,"children":1515},{"style":1174},[1516],{"type":31,"value":1517},"    #write the html contents to the file\n",{"type":25,"tag":84,"props":1519,"children":1521},{"class":86,"line":1520},26,[1522],{"type":25,"tag":84,"props":1523,"children":1524},{"style":97},[1525],{"type":31,"value":1526},"    subreddit_html_file.write(html)\n",{"type":25,"tag":84,"props":1528,"children":1530},{"class":86,"line":1529},27,[1531],{"type":25,"tag":84,"props":1532,"children":1533},{"emptyLinePlaceholder":13},[1534],{"type":31,"value":283},{"type":25,"tag":84,"props":1536,"children":1538},{"class":86,"line":1537},28,[1539],{"type":25,"tag":84,"props":1540,"children":1541},{"style":1174},[1542],{"type":31,"value":1543},"    #clost the file\n",{"type":25,"tag":84,"props":1545,"children":1547},{"class":86,"line":1546},29,[1548],{"type":25,"tag":84,"props":1549,"children":1550},{"style":97},[1551],{"type":31,"value":1552},"    subreddit_html_file.close()\n",{"type":25,"tag":84,"props":1554,"children":1556},{"class":86,"line":1555},30,[1557],{"type":25,"tag":84,"props":1558,"children":1559},{"emptyLinePlaceholder":13},[1560],{"type":31,"value":283},{"type":25,"tag":84,"props":1562,"children":1564},{"class":86,"line":1563},31,[1565],{"type":25,"tag":84,"props":1566,"children":1567},{"style":1174},[1568],{"type":31,"value":1569},"    #print out the number and name of the subreddit we just scrapped to make sure things are working\n",{"type":25,"tag":84,"props":1571,"children":1573},{"class":86,"line":1572},32,[1574,1579,1584,1589,1593,1598,1602],{"type":25,"tag":84,"props":1575,"children":1576},{"style":525},[1577],{"type":31,"value":1578},"    print",{"type":25,"tag":84,"props":1580,"children":1581},{"style":462},[1582],{"type":31,"value":1583}," str",{"type":25,"tag":84,"props":1585,"children":1586},{"style":97},[1587],{"type":31,"value":1588},"(num) ",{"type":25,"tag":84,"props":1590,"children":1591},{"style":91},[1592],{"type":31,"value":429},{"type":25,"tag":84,"props":1594,"children":1595},{"style":217},[1596],{"type":31,"value":1597}," ' '",{"type":25,"tag":84,"props":1599,"children":1600},{"style":91},[1601],{"type":31,"value":244},{"type":25,"tag":84,"props":1603,"children":1604},{"style":97},[1605],{"type":31,"value":1606}," subreddit,\n",{"type":25,"tag":34,"props":1608,"children":1609},{},[1610],{"type":31,"value":1611},"Next, we want to go through each file and extract the information we want. Here's what we will be getting:",{"type":25,"tag":1613,"props":1614,"children":1615},"ul",{},[1616,1622,1627,1632],{"type":25,"tag":1617,"props":1618,"children":1619},"li",{},[1620],{"type":31,"value":1621},"Number of subscribers",{"type":25,"tag":1617,"props":1623,"children":1624},{},[1625],{"type":31,"value":1626},"Subreddit description",{"type":25,"tag":1617,"props":1628,"children":1629},{},[1630],{"type":31,"value":1631},"Date created",{"type":25,"tag":1617,"props":1633,"children":1634},{},[1635],{"type":31,"value":1636},"Related subreddits",{"type":25,"tag":34,"props":1638,"children":1639},{},[1640],{"type":31,"value":1641},"For this type of project, I prefer to loop through each page and creating several small dictionaries for each data point, then combine the small dictionaries into a large dictionary, and then append the dictionary to a list of dictionaries. Once I have looped through all of the pages, I can create a pandas DataFrame from the list of dictionaries. This allows me to easily manipulate the data. Here's the script that I used to do this:",{"type":25,"tag":75,"props":1643,"children":1645},{"code":1644,"language":17,"meta":8,"className":78,"style":8},"#navigate to where the html files are stored (I moved them around a bit so it is not consistent with the script above)\nos.chdir('E://DATA/Subreddits/subreddits_html/')\n\n#generate a list of files that we will loop through\nfiles = os.listdir('E://DATA/Subreddits/subreddits_html/')\n\n#set up an empty list that we will append dictionaries to\ndict_list = []\n\n#loop through the files\nfor file_ in files:\n\n    #print out the name of the current file in the loop\n    print file_,\n\n    #open the file\n    f = open(file_, 'r')\n    #read the file contents to a local variable\n    html = f.read()\n    #create a BeautifulSoup object that we will use to parse the HTML\n    b = BeautifulSoup(html, 'lxml')\n\n    #get the subreddit name that we are working with (from the `file` variable)\n    subreddit_name = '/r/' + file_[:-4].lower()\n    #put the name into a dictionary\n    subreddit_name_dict = {'subreddit':subreddit_name}\n\n    #get number of subscribers\n    subs = b.find('span', attrs={'class':'subscribers'})\n    #if the number of subscribers is displayed on the page, then we find it and add it to a dictionary\n    if subs:\n        subs = b.find('span', attrs={'class':'subscribers'}).find('span', attrs={'class':'number'}).text.replace(',', '')\n        subs_dict = {'subscribers':int(subs)}\n    #if the number of subscribers is not displayed on the page, then we set the number of subscribers in the dictionary to None\n    else:\n        subs_dict = {'subscribers':None}\n\n    #similar process for the description: if the description is displayed, get it and save it to desc\n    #if it is not available, then desc will be set to `None`\n    desc = b.find('div', attrs={'class':'md'})\n    if desc:\n        desc = b.find('div', attrs={'class':'md'}).text\n        desc = desc.replace('\\n', ' ')\n    desc_dict = {'description':desc}\n\n    #here we use regular expressions to find links anywhere on the page that have the structure: \"/r/something/\"\n    rel_subr = re.compile(r\"\\/r\\/[\\w.]+\\/?\")\n    #make a list of these links based on the \"/r/something/\" pattern\n    related_subreddits = rel_subr.findall(html)\n\n    #save the list to a dictionary\n    subreddits_dict = {'related':related_subreddits}\n\n    #same processes for recording the date that the subreddit was created: get the date from an HTML element,\n    #then save it to a dictionary. There were two different formats available in the HTML so I grabbed both\n    age = b.find('span', attrs={'class':'age'})\n    if age:\n        time1 = age.find('time')['title']\n        time2 = age.find('time')['datetime']\n\n    #save the date to a dictionary\n    time_dict = {\"date1\":time1, \"date2\":time2}\n\n    #take all the dictionaries we just created and put them together into one big dictionary\n    dictionary = dict(subs_dict.items()+desc_dict.items()+subreddits_dict.items()+subreddit_name_dict.items()+time_dict.items())\n\n    #append the big dictionary to the list that we defined right before the beginning of the loop\n    dict_list.append(dictionary)\n\n    #deconstruct the Beautiful Soup object (this can eat up memory very quickly, so it is very important when processing lots of data)\n    b.decompose()\n\n    #clost the file\n    f.close()\n",[1646],{"type":25,"tag":58,"props":1647,"children":1648},{"__ignoreMap":8},[1649,1657,1674,1681,1689,1714,1721,1729,1746,1753,1761,1782,1789,1797,1809,1816,1824,1854,1862,1878,1886,1912,1919,1927,1967,1975,2002,2009,2017,2072,2080,2093,2202,2237,2246,2260,2294,2302,2311,2320,2374,2387,2441,2485,2512,2520,2529,2598,2607,2625,2633,2642,2669,2677,2686,2695,2749,2762,2798,2832,2840,2849,2886,2894,2903,2962,2970,2979,2988,2996,3005,3014,3022,3030],{"type":25,"tag":84,"props":1650,"children":1651},{"class":86,"line":87},[1652],{"type":25,"tag":84,"props":1653,"children":1654},{"style":1174},[1655],{"type":31,"value":1656},"#navigate to where the html files are stored (I moved them around a bit so it is not consistent with the script above)\n",{"type":25,"tag":84,"props":1658,"children":1659},{"class":86,"line":113},[1660,1665,1670],{"type":25,"tag":84,"props":1661,"children":1662},{"style":97},[1663],{"type":31,"value":1664},"os.chdir(",{"type":25,"tag":84,"props":1666,"children":1667},{"style":217},[1668],{"type":31,"value":1669},"'E://DATA/Subreddits/subreddits_html/'",{"type":25,"tag":84,"props":1671,"children":1672},{"style":97},[1673],{"type":31,"value":225},{"type":25,"tag":84,"props":1675,"children":1676},{"class":86,"line":126},[1677],{"type":25,"tag":84,"props":1678,"children":1679},{"emptyLinePlaceholder":13},[1680],{"type":31,"value":283},{"type":25,"tag":84,"props":1682,"children":1683},{"class":86,"line":139},[1684],{"type":25,"tag":84,"props":1685,"children":1686},{"style":1174},[1687],{"type":31,"value":1688},"#generate a list of files that we will loop through\n",{"type":25,"tag":84,"props":1690,"children":1691},{"class":86,"line":162},[1692,1697,1701,1706,1710],{"type":25,"tag":84,"props":1693,"children":1694},{"style":97},[1695],{"type":31,"value":1696},"files ",{"type":25,"tag":84,"props":1698,"children":1699},{"style":91},[1700],{"type":31,"value":201},{"type":25,"tag":84,"props":1702,"children":1703},{"style":97},[1704],{"type":31,"value":1705}," os.listdir(",{"type":25,"tag":84,"props":1707,"children":1708},{"style":217},[1709],{"type":31,"value":1669},{"type":25,"tag":84,"props":1711,"children":1712},{"style":97},[1713],{"type":31,"value":225},{"type":25,"tag":84,"props":1715,"children":1716},{"class":86,"line":286},[1717],{"type":25,"tag":84,"props":1718,"children":1719},{"emptyLinePlaceholder":13},[1720],{"type":31,"value":283},{"type":25,"tag":84,"props":1722,"children":1723},{"class":86,"line":304},[1724],{"type":25,"tag":84,"props":1725,"children":1726},{"style":1174},[1727],{"type":31,"value":1728},"#set up an empty list that we will append dictionaries to\n",{"type":25,"tag":84,"props":1730,"children":1731},{"class":86,"line":367},[1732,1737,1741],{"type":25,"tag":84,"props":1733,"children":1734},{"style":97},[1735],{"type":31,"value":1736},"dict_list ",{"type":25,"tag":84,"props":1738,"children":1739},{"style":91},[1740],{"type":31,"value":201},{"type":25,"tag":84,"props":1742,"children":1743},{"style":97},[1744],{"type":31,"value":1745}," []\n",{"type":25,"tag":84,"props":1747,"children":1748},{"class":86,"line":449},[1749],{"type":25,"tag":84,"props":1750,"children":1751},{"emptyLinePlaceholder":13},[1752],{"type":31,"value":283},{"type":25,"tag":84,"props":1754,"children":1755},{"class":86,"line":493},[1756],{"type":25,"tag":84,"props":1757,"children":1758},{"style":1174},[1759],{"type":31,"value":1760},"#loop through the files\n",{"type":25,"tag":84,"props":1762,"children":1763},{"class":86,"line":501},[1764,1768,1773,1777],{"type":25,"tag":84,"props":1765,"children":1766},{"style":91},[1767],{"type":31,"value":507},{"type":25,"tag":84,"props":1769,"children":1770},{"style":97},[1771],{"type":31,"value":1772}," file_ ",{"type":25,"tag":84,"props":1774,"children":1775},{"style":91},[1776],{"type":31,"value":517},{"type":25,"tag":84,"props":1778,"children":1779},{"style":97},[1780],{"type":31,"value":1781}," files:\n",{"type":25,"tag":84,"props":1783,"children":1784},{"class":86,"line":1306},[1785],{"type":25,"tag":84,"props":1786,"children":1787},{"emptyLinePlaceholder":13},[1788],{"type":31,"value":283},{"type":25,"tag":84,"props":1790,"children":1791},{"class":86,"line":1314},[1792],{"type":25,"tag":84,"props":1793,"children":1794},{"style":1174},[1795],{"type":31,"value":1796},"    #print out the name of the current file in the loop\n",{"type":25,"tag":84,"props":1798,"children":1799},{"class":86,"line":1323},[1800,1804],{"type":25,"tag":84,"props":1801,"children":1802},{"style":525},[1803],{"type":31,"value":1578},{"type":25,"tag":84,"props":1805,"children":1806},{"style":97},[1807],{"type":31,"value":1808}," file_,\n",{"type":25,"tag":84,"props":1810,"children":1811},{"class":86,"line":1345},[1812],{"type":25,"tag":84,"props":1813,"children":1814},{"emptyLinePlaceholder":13},[1815],{"type":31,"value":283},{"type":25,"tag":84,"props":1817,"children":1818},{"class":86,"line":1353},[1819],{"type":25,"tag":84,"props":1820,"children":1821},{"style":1174},[1822],{"type":31,"value":1823},"    #open the file\n",{"type":25,"tag":84,"props":1825,"children":1826},{"class":86,"line":1362},[1827,1832,1836,1840,1845,1850],{"type":25,"tag":84,"props":1828,"children":1829},{"style":97},[1830],{"type":31,"value":1831},"    f ",{"type":25,"tag":84,"props":1833,"children":1834},{"style":91},[1835],{"type":31,"value":201},{"type":25,"tag":84,"props":1837,"children":1838},{"style":525},[1839],{"type":31,"value":1473},{"type":25,"tag":84,"props":1841,"children":1842},{"style":97},[1843],{"type":31,"value":1844},"(file_, ",{"type":25,"tag":84,"props":1846,"children":1847},{"style":217},[1848],{"type":31,"value":1849},"'r'",{"type":25,"tag":84,"props":1851,"children":1852},{"style":97},[1853],{"type":31,"value":225},{"type":25,"tag":84,"props":1855,"children":1856},{"class":86,"line":1387},[1857],{"type":25,"tag":84,"props":1858,"children":1859},{"style":1174},[1860],{"type":31,"value":1861},"    #read the file contents to a local variable\n",{"type":25,"tag":84,"props":1863,"children":1864},{"class":86,"line":1395},[1865,1869,1873],{"type":25,"tag":84,"props":1866,"children":1867},{"style":97},[1868],{"type":31,"value":1368},{"type":25,"tag":84,"props":1870,"children":1871},{"style":91},[1872],{"type":31,"value":201},{"type":25,"tag":84,"props":1874,"children":1875},{"style":97},[1876],{"type":31,"value":1877}," f.read()\n",{"type":25,"tag":84,"props":1879,"children":1880},{"class":86,"line":1404},[1881],{"type":25,"tag":84,"props":1882,"children":1883},{"style":1174},[1884],{"type":31,"value":1885},"    #create a BeautifulSoup object that we will use to parse the HTML\n",{"type":25,"tag":84,"props":1887,"children":1888},{"class":86,"line":1441},[1889,1894,1898,1903,1908],{"type":25,"tag":84,"props":1890,"children":1891},{"style":97},[1892],{"type":31,"value":1893},"    b ",{"type":25,"tag":84,"props":1895,"children":1896},{"style":91},[1897],{"type":31,"value":201},{"type":25,"tag":84,"props":1899,"children":1900},{"style":97},[1901],{"type":31,"value":1902}," BeautifulSoup(html, ",{"type":25,"tag":84,"props":1904,"children":1905},{"style":217},[1906],{"type":31,"value":1907},"'lxml'",{"type":25,"tag":84,"props":1909,"children":1910},{"style":97},[1911],{"type":31,"value":225},{"type":25,"tag":84,"props":1913,"children":1914},{"class":86,"line":1449},[1915],{"type":25,"tag":84,"props":1916,"children":1917},{"emptyLinePlaceholder":13},[1918],{"type":31,"value":283},{"type":25,"tag":84,"props":1920,"children":1921},{"class":86,"line":1458},[1922],{"type":25,"tag":84,"props":1923,"children":1924},{"style":1174},[1925],{"type":31,"value":1926},"    #get the subreddit name that we are working with (from the `file` variable)\n",{"type":25,"tag":84,"props":1928,"children":1929},{"class":86,"line":1503},[1930,1935,1939,1944,1948,1953,1958,1962],{"type":25,"tag":84,"props":1931,"children":1932},{"style":97},[1933],{"type":31,"value":1934},"    subreddit_name ",{"type":25,"tag":84,"props":1936,"children":1937},{"style":91},[1938],{"type":31,"value":201},{"type":25,"tag":84,"props":1940,"children":1941},{"style":217},[1942],{"type":31,"value":1943}," '/r/'",{"type":25,"tag":84,"props":1945,"children":1946},{"style":91},[1947],{"type":31,"value":244},{"type":25,"tag":84,"props":1949,"children":1950},{"style":97},[1951],{"type":31,"value":1952}," file_[:",{"type":25,"tag":84,"props":1954,"children":1955},{"style":91},[1956],{"type":31,"value":1957},"-",{"type":25,"tag":84,"props":1959,"children":1960},{"style":236},[1961],{"type":31,"value":239},{"type":25,"tag":84,"props":1963,"children":1964},{"style":97},[1965],{"type":31,"value":1966},"].lower()\n",{"type":25,"tag":84,"props":1968,"children":1969},{"class":86,"line":1511},[1970],{"type":25,"tag":84,"props":1971,"children":1972},{"style":1174},[1973],{"type":31,"value":1974},"    #put the name into a dictionary\n",{"type":25,"tag":84,"props":1976,"children":1977},{"class":86,"line":1520},[1978,1983,1987,1992,1997],{"type":25,"tag":84,"props":1979,"children":1980},{"style":97},[1981],{"type":31,"value":1982},"    subreddit_name_dict ",{"type":25,"tag":84,"props":1984,"children":1985},{"style":91},[1986],{"type":31,"value":201},{"type":25,"tag":84,"props":1988,"children":1989},{"style":97},[1990],{"type":31,"value":1991}," {",{"type":25,"tag":84,"props":1993,"children":1994},{"style":217},[1995],{"type":31,"value":1996},"'subreddit'",{"type":25,"tag":84,"props":1998,"children":1999},{"style":97},[2000],{"type":31,"value":2001},":subreddit_name}\n",{"type":25,"tag":84,"props":2003,"children":2004},{"class":86,"line":1529},[2005],{"type":25,"tag":84,"props":2006,"children":2007},{"emptyLinePlaceholder":13},[2008],{"type":31,"value":283},{"type":25,"tag":84,"props":2010,"children":2011},{"class":86,"line":1537},[2012],{"type":25,"tag":84,"props":2013,"children":2014},{"style":1174},[2015],{"type":31,"value":2016},"    #get number of subscribers\n",{"type":25,"tag":84,"props":2018,"children":2019},{"class":86,"line":1546},[2020,2025,2029,2034,2039,2043,2047,2051,2055,2059,2063,2068],{"type":25,"tag":84,"props":2021,"children":2022},{"style":97},[2023],{"type":31,"value":2024},"    subs ",{"type":25,"tag":84,"props":2026,"children":2027},{"style":91},[2028],{"type":31,"value":201},{"type":25,"tag":84,"props":2030,"children":2031},{"style":97},[2032],{"type":31,"value":2033}," b.find(",{"type":25,"tag":84,"props":2035,"children":2036},{"style":217},[2037],{"type":31,"value":2038},"'span'",{"type":25,"tag":84,"props":2040,"children":2041},{"style":97},[2042],{"type":31,"value":329},{"type":25,"tag":84,"props":2044,"children":2045},{"style":332},[2046],{"type":31,"value":335},{"type":25,"tag":84,"props":2048,"children":2049},{"style":91},[2050],{"type":31,"value":201},{"type":25,"tag":84,"props":2052,"children":2053},{"style":97},[2054],{"type":31,"value":344},{"type":25,"tag":84,"props":2056,"children":2057},{"style":217},[2058],{"type":31,"value":349},{"type":25,"tag":84,"props":2060,"children":2061},{"style":97},[2062],{"type":31,"value":354},{"type":25,"tag":84,"props":2064,"children":2065},{"style":217},[2066],{"type":31,"value":2067},"'subscribers'",{"type":25,"tag":84,"props":2069,"children":2070},{"style":97},[2071],{"type":31,"value":364},{"type":25,"tag":84,"props":2073,"children":2074},{"class":86,"line":1555},[2075],{"type":25,"tag":84,"props":2076,"children":2077},{"style":1174},[2078],{"type":31,"value":2079},"    #if the number of subscribers is displayed on the page, then we find it and add it to a dictionary\n",{"type":25,"tag":84,"props":2081,"children":2082},{"class":86,"line":1563},[2083,2088],{"type":25,"tag":84,"props":2084,"children":2085},{"style":91},[2086],{"type":31,"value":2087},"    if",{"type":25,"tag":84,"props":2089,"children":2090},{"style":97},[2091],{"type":31,"value":2092}," subs:\n",{"type":25,"tag":84,"props":2094,"children":2095},{"class":86,"line":1572},[2096,2101,2105,2109,2113,2117,2121,2125,2129,2133,2137,2141,2146,2150,2154,2158,2162,2166,2170,2174,2179,2184,2189,2193,2198],{"type":25,"tag":84,"props":2097,"children":2098},{"style":97},[2099],{"type":31,"value":2100},"        subs ",{"type":25,"tag":84,"props":2102,"children":2103},{"style":91},[2104],{"type":31,"value":201},{"type":25,"tag":84,"props":2106,"children":2107},{"style":97},[2108],{"type":31,"value":2033},{"type":25,"tag":84,"props":2110,"children":2111},{"style":217},[2112],{"type":31,"value":2038},{"type":25,"tag":84,"props":2114,"children":2115},{"style":97},[2116],{"type":31,"value":329},{"type":25,"tag":84,"props":2118,"children":2119},{"style":332},[2120],{"type":31,"value":335},{"type":25,"tag":84,"props":2122,"children":2123},{"style":91},[2124],{"type":31,"value":201},{"type":25,"tag":84,"props":2126,"children":2127},{"style":97},[2128],{"type":31,"value":344},{"type":25,"tag":84,"props":2130,"children":2131},{"style":217},[2132],{"type":31,"value":349},{"type":25,"tag":84,"props":2134,"children":2135},{"style":97},[2136],{"type":31,"value":354},{"type":25,"tag":84,"props":2138,"children":2139},{"style":217},[2140],{"type":31,"value":2067},{"type":25,"tag":84,"props":2142,"children":2143},{"style":97},[2144],{"type":31,"value":2145},"}).find(",{"type":25,"tag":84,"props":2147,"children":2148},{"style":217},[2149],{"type":31,"value":2038},{"type":25,"tag":84,"props":2151,"children":2152},{"style":97},[2153],{"type":31,"value":329},{"type":25,"tag":84,"props":2155,"children":2156},{"style":332},[2157],{"type":31,"value":335},{"type":25,"tag":84,"props":2159,"children":2160},{"style":91},[2161],{"type":31,"value":201},{"type":25,"tag":84,"props":2163,"children":2164},{"style":97},[2165],{"type":31,"value":344},{"type":25,"tag":84,"props":2167,"children":2168},{"style":217},[2169],{"type":31,"value":349},{"type":25,"tag":84,"props":2171,"children":2172},{"style":97},[2173],{"type":31,"value":354},{"type":25,"tag":84,"props":2175,"children":2176},{"style":217},[2177],{"type":31,"value":2178},"'number'",{"type":25,"tag":84,"props":2180,"children":2181},{"style":97},[2182],{"type":31,"value":2183},"}).text.replace(",{"type":25,"tag":84,"props":2185,"children":2186},{"style":217},[2187],{"type":31,"value":2188},"','",{"type":25,"tag":84,"props":2190,"children":2191},{"style":97},[2192],{"type":31,"value":329},{"type":25,"tag":84,"props":2194,"children":2195},{"style":217},[2196],{"type":31,"value":2197},"''",{"type":25,"tag":84,"props":2199,"children":2200},{"style":97},[2201],{"type":31,"value":225},{"type":25,"tag":84,"props":2203,"children":2205},{"class":86,"line":2204},33,[2206,2211,2215,2219,2223,2227,2232],{"type":25,"tag":84,"props":2207,"children":2208},{"style":97},[2209],{"type":31,"value":2210},"        subs_dict ",{"type":25,"tag":84,"props":2212,"children":2213},{"style":91},[2214],{"type":31,"value":201},{"type":25,"tag":84,"props":2216,"children":2217},{"style":97},[2218],{"type":31,"value":1991},{"type":25,"tag":84,"props":2220,"children":2221},{"style":217},[2222],{"type":31,"value":2067},{"type":25,"tag":84,"props":2224,"children":2225},{"style":97},[2226],{"type":31,"value":354},{"type":25,"tag":84,"props":2228,"children":2229},{"style":462},[2230],{"type":31,"value":2231},"int",{"type":25,"tag":84,"props":2233,"children":2234},{"style":97},[2235],{"type":31,"value":2236},"(subs)}\n",{"type":25,"tag":84,"props":2238,"children":2240},{"class":86,"line":2239},34,[2241],{"type":25,"tag":84,"props":2242,"children":2243},{"style":1174},[2244],{"type":31,"value":2245},"    #if the number of subscribers is not displayed on the page, then we set the number of subscribers in the dictionary to None\n",{"type":25,"tag":84,"props":2247,"children":2249},{"class":86,"line":2248},35,[2250,2255],{"type":25,"tag":84,"props":2251,"children":2252},{"style":91},[2253],{"type":31,"value":2254},"    else",{"type":25,"tag":84,"props":2256,"children":2257},{"style":97},[2258],{"type":31,"value":2259},":\n",{"type":25,"tag":84,"props":2261,"children":2263},{"class":86,"line":2262},36,[2264,2268,2272,2276,2280,2284,2289],{"type":25,"tag":84,"props":2265,"children":2266},{"style":97},[2267],{"type":31,"value":2210},{"type":25,"tag":84,"props":2269,"children":2270},{"style":91},[2271],{"type":31,"value":201},{"type":25,"tag":84,"props":2273,"children":2274},{"style":97},[2275],{"type":31,"value":1991},{"type":25,"tag":84,"props":2277,"children":2278},{"style":217},[2279],{"type":31,"value":2067},{"type":25,"tag":84,"props":2281,"children":2282},{"style":97},[2283],{"type":31,"value":354},{"type":25,"tag":84,"props":2285,"children":2286},{"style":236},[2287],{"type":31,"value":2288},"None",{"type":25,"tag":84,"props":2290,"children":2291},{"style":97},[2292],{"type":31,"value":2293},"}\n",{"type":25,"tag":84,"props":2295,"children":2297},{"class":86,"line":2296},37,[2298],{"type":25,"tag":84,"props":2299,"children":2300},{"emptyLinePlaceholder":13},[2301],{"type":31,"value":283},{"type":25,"tag":84,"props":2303,"children":2305},{"class":86,"line":2304},38,[2306],{"type":25,"tag":84,"props":2307,"children":2308},{"style":1174},[2309],{"type":31,"value":2310},"    #similar process for the description: if the description is displayed, get it and save it to desc\n",{"type":25,"tag":84,"props":2312,"children":2314},{"class":86,"line":2313},39,[2315],{"type":25,"tag":84,"props":2316,"children":2317},{"style":1174},[2318],{"type":31,"value":2319},"    #if it is not available, then desc will be set to `None`\n",{"type":25,"tag":84,"props":2321,"children":2323},{"class":86,"line":2322},40,[2324,2329,2333,2337,2341,2345,2349,2353,2357,2361,2365,2370],{"type":25,"tag":84,"props":2325,"children":2326},{"style":97},[2327],{"type":31,"value":2328},"    desc ",{"type":25,"tag":84,"props":2330,"children":2331},{"style":91},[2332],{"type":31,"value":201},{"type":25,"tag":84,"props":2334,"children":2335},{"style":97},[2336],{"type":31,"value":2033},{"type":25,"tag":84,"props":2338,"children":2339},{"style":217},[2340],{"type":31,"value":324},{"type":25,"tag":84,"props":2342,"children":2343},{"style":97},[2344],{"type":31,"value":329},{"type":25,"tag":84,"props":2346,"children":2347},{"style":332},[2348],{"type":31,"value":335},{"type":25,"tag":84,"props":2350,"children":2351},{"style":91},[2352],{"type":31,"value":201},{"type":25,"tag":84,"props":2354,"children":2355},{"style":97},[2356],{"type":31,"value":344},{"type":25,"tag":84,"props":2358,"children":2359},{"style":217},[2360],{"type":31,"value":349},{"type":25,"tag":84,"props":2362,"children":2363},{"style":97},[2364],{"type":31,"value":354},{"type":25,"tag":84,"props":2366,"children":2367},{"style":217},[2368],{"type":31,"value":2369},"'md'",{"type":25,"tag":84,"props":2371,"children":2372},{"style":97},[2373],{"type":31,"value":364},{"type":25,"tag":84,"props":2375,"children":2377},{"class":86,"line":2376},41,[2378,2382],{"type":25,"tag":84,"props":2379,"children":2380},{"style":91},[2381],{"type":31,"value":2087},{"type":25,"tag":84,"props":2383,"children":2384},{"style":97},[2385],{"type":31,"value":2386}," desc:\n",{"type":25,"tag":84,"props":2388,"children":2390},{"class":86,"line":2389},42,[2391,2396,2400,2404,2408,2412,2416,2420,2424,2428,2432,2436],{"type":25,"tag":84,"props":2392,"children":2393},{"style":97},[2394],{"type":31,"value":2395},"        desc ",{"type":25,"tag":84,"props":2397,"children":2398},{"style":91},[2399],{"type":31,"value":201},{"type":25,"tag":84,"props":2401,"children":2402},{"style":97},[2403],{"type":31,"value":2033},{"type":25,"tag":84,"props":2405,"children":2406},{"style":217},[2407],{"type":31,"value":324},{"type":25,"tag":84,"props":2409,"children":2410},{"style":97},[2411],{"type":31,"value":329},{"type":25,"tag":84,"props":2413,"children":2414},{"style":332},[2415],{"type":31,"value":335},{"type":25,"tag":84,"props":2417,"children":2418},{"style":91},[2419],{"type":31,"value":201},{"type":25,"tag":84,"props":2421,"children":2422},{"style":97},[2423],{"type":31,"value":344},{"type":25,"tag":84,"props":2425,"children":2426},{"style":217},[2427],{"type":31,"value":349},{"type":25,"tag":84,"props":2429,"children":2430},{"style":97},[2431],{"type":31,"value":354},{"type":25,"tag":84,"props":2433,"children":2434},{"style":217},[2435],{"type":31,"value":2369},{"type":25,"tag":84,"props":2437,"children":2438},{"style":97},[2439],{"type":31,"value":2440},"}).text\n",{"type":25,"tag":84,"props":2442,"children":2444},{"class":86,"line":2443},43,[2445,2449,2453,2458,2463,2468,2472,2476,2481],{"type":25,"tag":84,"props":2446,"children":2447},{"style":97},[2448],{"type":31,"value":2395},{"type":25,"tag":84,"props":2450,"children":2451},{"style":91},[2452],{"type":31,"value":201},{"type":25,"tag":84,"props":2454,"children":2455},{"style":97},[2456],{"type":31,"value":2457}," desc.replace(",{"type":25,"tag":84,"props":2459,"children":2460},{"style":217},[2461],{"type":31,"value":2462},"'",{"type":25,"tag":84,"props":2464,"children":2465},{"style":236},[2466],{"type":31,"value":2467},"\\n",{"type":25,"tag":84,"props":2469,"children":2470},{"style":217},[2471],{"type":31,"value":2462},{"type":25,"tag":84,"props":2473,"children":2474},{"style":97},[2475],{"type":31,"value":329},{"type":25,"tag":84,"props":2477,"children":2478},{"style":217},[2479],{"type":31,"value":2480},"' '",{"type":25,"tag":84,"props":2482,"children":2483},{"style":97},[2484],{"type":31,"value":225},{"type":25,"tag":84,"props":2486,"children":2488},{"class":86,"line":2487},44,[2489,2494,2498,2502,2507],{"type":25,"tag":84,"props":2490,"children":2491},{"style":97},[2492],{"type":31,"value":2493},"    desc_dict ",{"type":25,"tag":84,"props":2495,"children":2496},{"style":91},[2497],{"type":31,"value":201},{"type":25,"tag":84,"props":2499,"children":2500},{"style":97},[2501],{"type":31,"value":1991},{"type":25,"tag":84,"props":2503,"children":2504},{"style":217},[2505],{"type":31,"value":2506},"'description'",{"type":25,"tag":84,"props":2508,"children":2509},{"style":97},[2510],{"type":31,"value":2511},":desc}\n",{"type":25,"tag":84,"props":2513,"children":2515},{"class":86,"line":2514},45,[2516],{"type":25,"tag":84,"props":2517,"children":2518},{"emptyLinePlaceholder":13},[2519],{"type":31,"value":283},{"type":25,"tag":84,"props":2521,"children":2523},{"class":86,"line":2522},46,[2524],{"type":25,"tag":84,"props":2525,"children":2526},{"style":1174},[2527],{"type":31,"value":2528},"    #here we use regular expressions to find links anywhere on the page that have the structure: \"/r/something/\"\n",{"type":25,"tag":84,"props":2530,"children":2532},{"class":86,"line":2531},47,[2533,2538,2542,2546,2550,2554,2558,2562,2566,2570,2574,2578,2582,2586,2590,2594],{"type":25,"tag":84,"props":2534,"children":2535},{"style":97},[2536],{"type":31,"value":2537},"    rel_subr ",{"type":25,"tag":84,"props":2539,"children":2540},{"style":91},[2541],{"type":31,"value":201},{"type":25,"tag":84,"props":2543,"children":2544},{"style":97},[2545],{"type":31,"value":382},{"type":25,"tag":84,"props":2547,"children":2548},{"style":385},[2549],{"type":31,"value":388},{"type":25,"tag":84,"props":2551,"children":2552},{"style":217},[2553],{"type":31,"value":393},{"type":25,"tag":84,"props":2555,"children":2556},{"style":396},[2557],{"type":31,"value":399},{"type":25,"tag":84,"props":2559,"children":2560},{"style":402},[2561],{"type":31,"value":388},{"type":25,"tag":84,"props":2563,"children":2564},{"style":396},[2565],{"type":31,"value":399},{"type":25,"tag":84,"props":2567,"children":2568},{"style":236},[2569],{"type":31,"value":413},{"type":25,"tag":84,"props":2571,"children":2572},{"style":416},[2573],{"type":31,"value":419},{"type":25,"tag":84,"props":2575,"children":2576},{"style":236},[2577],{"type":31,"value":424},{"type":25,"tag":84,"props":2579,"children":2580},{"style":91},[2581],{"type":31,"value":429},{"type":25,"tag":84,"props":2583,"children":2584},{"style":396},[2585],{"type":31,"value":399},{"type":25,"tag":84,"props":2587,"children":2588},{"style":91},[2589],{"type":31,"value":438},{"type":25,"tag":84,"props":2591,"children":2592},{"style":217},[2593],{"type":31,"value":393},{"type":25,"tag":84,"props":2595,"children":2596},{"style":97},[2597],{"type":31,"value":225},{"type":25,"tag":84,"props":2599,"children":2601},{"class":86,"line":2600},48,[2602],{"type":25,"tag":84,"props":2603,"children":2604},{"style":1174},[2605],{"type":31,"value":2606},"    #make a list of these links based on the \"/r/something/\" pattern\n",{"type":25,"tag":84,"props":2608,"children":2610},{"class":86,"line":2609},49,[2611,2616,2620],{"type":25,"tag":84,"props":2612,"children":2613},{"style":97},[2614],{"type":31,"value":2615},"    related_subreddits ",{"type":25,"tag":84,"props":2617,"children":2618},{"style":91},[2619],{"type":31,"value":201},{"type":25,"tag":84,"props":2621,"children":2622},{"style":97},[2623],{"type":31,"value":2624}," rel_subr.findall(html)\n",{"type":25,"tag":84,"props":2626,"children":2628},{"class":86,"line":2627},50,[2629],{"type":25,"tag":84,"props":2630,"children":2631},{"emptyLinePlaceholder":13},[2632],{"type":31,"value":283},{"type":25,"tag":84,"props":2634,"children":2636},{"class":86,"line":2635},51,[2637],{"type":25,"tag":84,"props":2638,"children":2639},{"style":1174},[2640],{"type":31,"value":2641},"    #save the list to a dictionary\n",{"type":25,"tag":84,"props":2643,"children":2645},{"class":86,"line":2644},52,[2646,2651,2655,2659,2664],{"type":25,"tag":84,"props":2647,"children":2648},{"style":97},[2649],{"type":31,"value":2650},"    subreddits_dict ",{"type":25,"tag":84,"props":2652,"children":2653},{"style":91},[2654],{"type":31,"value":201},{"type":25,"tag":84,"props":2656,"children":2657},{"style":97},[2658],{"type":31,"value":1991},{"type":25,"tag":84,"props":2660,"children":2661},{"style":217},[2662],{"type":31,"value":2663},"'related'",{"type":25,"tag":84,"props":2665,"children":2666},{"style":97},[2667],{"type":31,"value":2668},":related_subreddits}\n",{"type":25,"tag":84,"props":2670,"children":2672},{"class":86,"line":2671},53,[2673],{"type":25,"tag":84,"props":2674,"children":2675},{"emptyLinePlaceholder":13},[2676],{"type":31,"value":283},{"type":25,"tag":84,"props":2678,"children":2680},{"class":86,"line":2679},54,[2681],{"type":25,"tag":84,"props":2682,"children":2683},{"style":1174},[2684],{"type":31,"value":2685},"    #same processes for recording the date that the subreddit was created: get the date from an HTML element,\n",{"type":25,"tag":84,"props":2687,"children":2689},{"class":86,"line":2688},55,[2690],{"type":25,"tag":84,"props":2691,"children":2692},{"style":1174},[2693],{"type":31,"value":2694},"    #then save it to a dictionary. There were two different formats available in the HTML so I grabbed both\n",{"type":25,"tag":84,"props":2696,"children":2698},{"class":86,"line":2697},56,[2699,2704,2708,2712,2716,2720,2724,2728,2732,2736,2740,2745],{"type":25,"tag":84,"props":2700,"children":2701},{"style":97},[2702],{"type":31,"value":2703},"    age ",{"type":25,"tag":84,"props":2705,"children":2706},{"style":91},[2707],{"type":31,"value":201},{"type":25,"tag":84,"props":2709,"children":2710},{"style":97},[2711],{"type":31,"value":2033},{"type":25,"tag":84,"props":2713,"children":2714},{"style":217},[2715],{"type":31,"value":2038},{"type":25,"tag":84,"props":2717,"children":2718},{"style":97},[2719],{"type":31,"value":329},{"type":25,"tag":84,"props":2721,"children":2722},{"style":332},[2723],{"type":31,"value":335},{"type":25,"tag":84,"props":2725,"children":2726},{"style":91},[2727],{"type":31,"value":201},{"type":25,"tag":84,"props":2729,"children":2730},{"style":97},[2731],{"type":31,"value":344},{"type":25,"tag":84,"props":2733,"children":2734},{"style":217},[2735],{"type":31,"value":349},{"type":25,"tag":84,"props":2737,"children":2738},{"style":97},[2739],{"type":31,"value":354},{"type":25,"tag":84,"props":2741,"children":2742},{"style":217},[2743],{"type":31,"value":2744},"'age'",{"type":25,"tag":84,"props":2746,"children":2747},{"style":97},[2748],{"type":31,"value":364},{"type":25,"tag":84,"props":2750,"children":2752},{"class":86,"line":2751},57,[2753,2757],{"type":25,"tag":84,"props":2754,"children":2755},{"style":91},[2756],{"type":31,"value":2087},{"type":25,"tag":84,"props":2758,"children":2759},{"style":97},[2760],{"type":31,"value":2761}," age:\n",{"type":25,"tag":84,"props":2763,"children":2765},{"class":86,"line":2764},58,[2766,2771,2775,2780,2785,2789,2794],{"type":25,"tag":84,"props":2767,"children":2768},{"style":97},[2769],{"type":31,"value":2770},"        time1 ",{"type":25,"tag":84,"props":2772,"children":2773},{"style":91},[2774],{"type":31,"value":201},{"type":25,"tag":84,"props":2776,"children":2777},{"style":97},[2778],{"type":31,"value":2779}," age.find(",{"type":25,"tag":84,"props":2781,"children":2782},{"style":217},[2783],{"type":31,"value":2784},"'time'",{"type":25,"tag":84,"props":2786,"children":2787},{"style":97},[2788],{"type":31,"value":1429},{"type":25,"tag":84,"props":2790,"children":2791},{"style":217},[2792],{"type":31,"value":2793},"'title'",{"type":25,"tag":84,"props":2795,"children":2796},{"style":97},[2797],{"type":31,"value":1438},{"type":25,"tag":84,"props":2799,"children":2801},{"class":86,"line":2800},59,[2802,2807,2811,2815,2819,2823,2828],{"type":25,"tag":84,"props":2803,"children":2804},{"style":97},[2805],{"type":31,"value":2806},"        time2 ",{"type":25,"tag":84,"props":2808,"children":2809},{"style":91},[2810],{"type":31,"value":201},{"type":25,"tag":84,"props":2812,"children":2813},{"style":97},[2814],{"type":31,"value":2779},{"type":25,"tag":84,"props":2816,"children":2817},{"style":217},[2818],{"type":31,"value":2784},{"type":25,"tag":84,"props":2820,"children":2821},{"style":97},[2822],{"type":31,"value":1429},{"type":25,"tag":84,"props":2824,"children":2825},{"style":217},[2826],{"type":31,"value":2827},"'datetime'",{"type":25,"tag":84,"props":2829,"children":2830},{"style":97},[2831],{"type":31,"value":1438},{"type":25,"tag":84,"props":2833,"children":2835},{"class":86,"line":2834},60,[2836],{"type":25,"tag":84,"props":2837,"children":2838},{"emptyLinePlaceholder":13},[2839],{"type":31,"value":283},{"type":25,"tag":84,"props":2841,"children":2843},{"class":86,"line":2842},61,[2844],{"type":25,"tag":84,"props":2845,"children":2846},{"style":1174},[2847],{"type":31,"value":2848},"    #save the date to a dictionary\n",{"type":25,"tag":84,"props":2850,"children":2852},{"class":86,"line":2851},62,[2853,2858,2862,2866,2871,2876,2881],{"type":25,"tag":84,"props":2854,"children":2855},{"style":97},[2856],{"type":31,"value":2857},"    time_dict ",{"type":25,"tag":84,"props":2859,"children":2860},{"style":91},[2861],{"type":31,"value":201},{"type":25,"tag":84,"props":2863,"children":2864},{"style":97},[2865],{"type":31,"value":1991},{"type":25,"tag":84,"props":2867,"children":2868},{"style":217},[2869],{"type":31,"value":2870},"\"date1\"",{"type":25,"tag":84,"props":2872,"children":2873},{"style":97},[2874],{"type":31,"value":2875},":time1, ",{"type":25,"tag":84,"props":2877,"children":2878},{"style":217},[2879],{"type":31,"value":2880},"\"date2\"",{"type":25,"tag":84,"props":2882,"children":2883},{"style":97},[2884],{"type":31,"value":2885},":time2}\n",{"type":25,"tag":84,"props":2887,"children":2889},{"class":86,"line":2888},63,[2890],{"type":25,"tag":84,"props":2891,"children":2892},{"emptyLinePlaceholder":13},[2893],{"type":31,"value":283},{"type":25,"tag":84,"props":2895,"children":2897},{"class":86,"line":2896},64,[2898],{"type":25,"tag":84,"props":2899,"children":2900},{"style":1174},[2901],{"type":31,"value":2902},"    #take all the dictionaries we just created and put them together into one big dictionary\n",{"type":25,"tag":84,"props":2904,"children":2906},{"class":86,"line":2905},65,[2907,2912,2916,2921,2926,2930,2935,2939,2944,2948,2953,2957],{"type":25,"tag":84,"props":2908,"children":2909},{"style":97},[2910],{"type":31,"value":2911},"    dictionary ",{"type":25,"tag":84,"props":2913,"children":2914},{"style":91},[2915],{"type":31,"value":201},{"type":25,"tag":84,"props":2917,"children":2918},{"style":462},[2919],{"type":31,"value":2920}," dict",{"type":25,"tag":84,"props":2922,"children":2923},{"style":97},[2924],{"type":31,"value":2925},"(subs_dict.items()",{"type":25,"tag":84,"props":2927,"children":2928},{"style":91},[2929],{"type":31,"value":429},{"type":25,"tag":84,"props":2931,"children":2932},{"style":97},[2933],{"type":31,"value":2934},"desc_dict.items()",{"type":25,"tag":84,"props":2936,"children":2937},{"style":91},[2938],{"type":31,"value":429},{"type":25,"tag":84,"props":2940,"children":2941},{"style":97},[2942],{"type":31,"value":2943},"subreddits_dict.items()",{"type":25,"tag":84,"props":2945,"children":2946},{"style":91},[2947],{"type":31,"value":429},{"type":25,"tag":84,"props":2949,"children":2950},{"style":97},[2951],{"type":31,"value":2952},"subreddit_name_dict.items()",{"type":25,"tag":84,"props":2954,"children":2955},{"style":91},[2956],{"type":31,"value":429},{"type":25,"tag":84,"props":2958,"children":2959},{"style":97},[2960],{"type":31,"value":2961},"time_dict.items())\n",{"type":25,"tag":84,"props":2963,"children":2965},{"class":86,"line":2964},66,[2966],{"type":25,"tag":84,"props":2967,"children":2968},{"emptyLinePlaceholder":13},[2969],{"type":31,"value":283},{"type":25,"tag":84,"props":2971,"children":2973},{"class":86,"line":2972},67,[2974],{"type":25,"tag":84,"props":2975,"children":2976},{"style":1174},[2977],{"type":31,"value":2978},"    #append the big dictionary to the list that we defined right before the beginning of the loop\n",{"type":25,"tag":84,"props":2980,"children":2982},{"class":86,"line":2981},68,[2983],{"type":25,"tag":84,"props":2984,"children":2985},{"style":97},[2986],{"type":31,"value":2987},"    dict_list.append(dictionary)\n",{"type":25,"tag":84,"props":2989,"children":2991},{"class":86,"line":2990},69,[2992],{"type":25,"tag":84,"props":2993,"children":2994},{"emptyLinePlaceholder":13},[2995],{"type":31,"value":283},{"type":25,"tag":84,"props":2997,"children":2999},{"class":86,"line":2998},70,[3000],{"type":25,"tag":84,"props":3001,"children":3002},{"style":1174},[3003],{"type":31,"value":3004},"    #deconstruct the Beautiful Soup object (this can eat up memory very quickly, so it is very important when processing lots of data)\n",{"type":25,"tag":84,"props":3006,"children":3008},{"class":86,"line":3007},71,[3009],{"type":25,"tag":84,"props":3010,"children":3011},{"style":97},[3012],{"type":31,"value":3013},"    b.decompose()\n",{"type":25,"tag":84,"props":3015,"children":3017},{"class":86,"line":3016},72,[3018],{"type":25,"tag":84,"props":3019,"children":3020},{"emptyLinePlaceholder":13},[3021],{"type":31,"value":283},{"type":25,"tag":84,"props":3023,"children":3025},{"class":86,"line":3024},73,[3026],{"type":25,"tag":84,"props":3027,"children":3028},{"style":1174},[3029],{"type":31,"value":1543},{"type":25,"tag":84,"props":3031,"children":3033},{"class":86,"line":3032},74,[3034],{"type":25,"tag":84,"props":3035,"children":3036},{"style":97},[3037],{"type":31,"value":3038},"    f.close()\n",{"type":25,"tag":34,"props":3040,"children":3041},{},[3042],{"type":31,"value":3043},"Next, let's save the results into a csv file. This let's us load the results quickly without having to scrape everyting again. To do this we can use the pandas library.",{"type":25,"tag":75,"props":3045,"children":3047},{"code":3046,"language":17,"meta":8,"className":78,"style":8},"import pandas as pd\ndf0 = pd.DataFrame(dict_list, index=None)\n",[3048],{"type":25,"tag":58,"props":3049,"children":3050},{"__ignoreMap":8},[3051,3072],{"type":25,"tag":84,"props":3052,"children":3053},{"class":86,"line":87},[3054,3058,3063,3067],{"type":25,"tag":84,"props":3055,"children":3056},{"style":91},[3057],{"type":31,"value":105},{"type":25,"tag":84,"props":3059,"children":3060},{"style":97},[3061],{"type":31,"value":3062}," pandas ",{"type":25,"tag":84,"props":3064,"children":3065},{"style":91},[3066],{"type":31,"value":154},{"type":25,"tag":84,"props":3068,"children":3069},{"style":97},[3070],{"type":31,"value":3071}," pd\n",{"type":25,"tag":84,"props":3073,"children":3074},{"class":86,"line":113},[3075,3080,3084,3089,3094,3098,3102],{"type":25,"tag":84,"props":3076,"children":3077},{"style":97},[3078],{"type":31,"value":3079},"df0 ",{"type":25,"tag":84,"props":3081,"children":3082},{"style":91},[3083],{"type":31,"value":201},{"type":25,"tag":84,"props":3085,"children":3086},{"style":97},[3087],{"type":31,"value":3088}," pd.DataFrame(dict_list, ",{"type":25,"tag":84,"props":3090,"children":3091},{"style":332},[3092],{"type":31,"value":3093},"index",{"type":25,"tag":84,"props":3095,"children":3096},{"style":91},[3097],{"type":31,"value":201},{"type":25,"tag":84,"props":3099,"children":3100},{"style":236},[3101],{"type":31,"value":2288},{"type":25,"tag":84,"props":3103,"children":3104},{"style":97},[3105],{"type":31,"value":225},{"type":25,"tag":34,"props":3107,"children":3108},{},[3109,3111,3117],{"type":31,"value":3110},"At this point, we can go through the ",{"type":25,"tag":58,"props":3112,"children":3114},{"className":3113},[],[3115],{"type":31,"value":3116},"related",{"type":31,"value":3118}," column in the DataFrame and put together a list of all the related subreddits. With this list, we can simply repeat the process over and over again. However, each time we start with a new list of subreddits, we want to make sure that they have not already been collected.",{"type":25,"tag":34,"props":3120,"children":3121},{},[3122],{"type":31,"value":3123},"Next I will read in one DataFrame that represents related subreddits \"three levels deep\" relative to the default subreddits.",{"type":25,"tag":34,"props":3125,"children":3126},{},[3127],{"type":25,"tag":3128,"props":3129,"children":3130},"strong",{},[3131],{"type":31,"value":3132},"Default --> Related --> Related --> Related",{"type":25,"tag":34,"props":3134,"children":3135},{},[3136],{"type":31,"value":3137},"This DataFrame represents the collection of subreddits from all of these \"layers\" of the graph.",{"type":25,"tag":75,"props":3139,"children":3141},{"code":3140,"language":17,"meta":8,"className":78,"style":8},"import pandas as pd\nmaster_df = pd.read_pickle('pickle/master_df.p')\n",[3142],{"type":25,"tag":58,"props":3143,"children":3144},{"__ignoreMap":8},[3145,3164],{"type":25,"tag":84,"props":3146,"children":3147},{"class":86,"line":87},[3148,3152,3156,3160],{"type":25,"tag":84,"props":3149,"children":3150},{"style":91},[3151],{"type":31,"value":105},{"type":25,"tag":84,"props":3153,"children":3154},{"style":97},[3155],{"type":31,"value":3062},{"type":25,"tag":84,"props":3157,"children":3158},{"style":91},[3159],{"type":31,"value":154},{"type":25,"tag":84,"props":3161,"children":3162},{"style":97},[3163],{"type":31,"value":3071},{"type":25,"tag":84,"props":3165,"children":3166},{"class":86,"line":113},[3167,3172,3176,3181,3186],{"type":25,"tag":84,"props":3168,"children":3169},{"style":97},[3170],{"type":31,"value":3171},"master_df ",{"type":25,"tag":84,"props":3173,"children":3174},{"style":91},[3175],{"type":31,"value":201},{"type":25,"tag":84,"props":3177,"children":3178},{"style":97},[3179],{"type":31,"value":3180}," pd.read_pickle(",{"type":25,"tag":84,"props":3182,"children":3183},{"style":217},[3184],{"type":31,"value":3185},"'pickle/master_df.p'",{"type":25,"tag":84,"props":3187,"children":3188},{"style":97},[3189],{"type":31,"value":225},{"type":25,"tag":34,"props":3191,"children":3192},{},[3193],{"type":31,"value":3194},"Now we can do a quick visualization of the growth in number of subreddits since the website's start in 2005.",{"type":25,"tag":75,"props":3196,"children":3198},{"code":3197,"language":17,"meta":8,"className":78,"style":8},"import warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\nmaster_df_ = master_df[master_df.notnull()]\nmaster_df_.date1 = pd.to_datetime(master_df_['date1'])\n\nlist_of_dates = master_df_.date1.sort_values()\n\ncounts = np.arange(0, len(list_of_dates))\n_ = plt.plot(list_of_dates, counts)\n_ = plt.title('Number of subreddits over time')\n_ = plt.xlabel('Date')\n_ = plt.ylabel('Cummulative Count')\nplt.savefig(os.path.expanduser('~/Documents/GitHub/briancaffey.github.io/static/subreddit_graph/subreddits_count.png'))\n",[3199],{"type":25,"tag":58,"props":3200,"children":3201},{"__ignoreMap":8},[3202,3214,3231,3244,3265,3286,3305,3312,3329,3356,3363,3380,3387,3423,3440,3465,3490,3515],{"type":25,"tag":84,"props":3203,"children":3204},{"class":86,"line":87},[3205,3209],{"type":25,"tag":84,"props":3206,"children":3207},{"style":91},[3208],{"type":31,"value":105},{"type":25,"tag":84,"props":3210,"children":3211},{"style":97},[3212],{"type":31,"value":3213}," warnings\n",{"type":25,"tag":84,"props":3215,"children":3216},{"class":86,"line":113},[3217,3222,3227],{"type":25,"tag":84,"props":3218,"children":3219},{"style":97},[3220],{"type":31,"value":3221},"warnings.filterwarnings(",{"type":25,"tag":84,"props":3223,"children":3224},{"style":217},[3225],{"type":31,"value":3226},"'ignore'",{"type":25,"tag":84,"props":3228,"children":3229},{"style":97},[3230],{"type":31,"value":225},{"type":25,"tag":84,"props":3232,"children":3233},{"class":86,"line":126},[3234,3239],{"type":25,"tag":84,"props":3235,"children":3236},{"style":91},[3237],{"type":31,"value":3238},"%",{"type":25,"tag":84,"props":3240,"children":3241},{"style":97},[3242],{"type":31,"value":3243},"matplotlib inline\n",{"type":25,"tag":84,"props":3245,"children":3246},{"class":86,"line":139},[3247,3251,3256,3260],{"type":25,"tag":84,"props":3248,"children":3249},{"style":91},[3250],{"type":31,"value":105},{"type":25,"tag":84,"props":3252,"children":3253},{"style":97},[3254],{"type":31,"value":3255}," matplotlib.pyplot ",{"type":25,"tag":84,"props":3257,"children":3258},{"style":91},[3259],{"type":31,"value":154},{"type":25,"tag":84,"props":3261,"children":3262},{"style":97},[3263],{"type":31,"value":3264}," plt\n",{"type":25,"tag":84,"props":3266,"children":3267},{"class":86,"line":162},[3268,3272,3277,3281],{"type":25,"tag":84,"props":3269,"children":3270},{"style":91},[3271],{"type":31,"value":105},{"type":25,"tag":84,"props":3273,"children":3274},{"style":97},[3275],{"type":31,"value":3276}," seaborn ",{"type":25,"tag":84,"props":3278,"children":3279},{"style":91},[3280],{"type":31,"value":154},{"type":25,"tag":84,"props":3282,"children":3283},{"style":97},[3284],{"type":31,"value":3285}," sns\n",{"type":25,"tag":84,"props":3287,"children":3288},{"class":86,"line":286},[3289,3293,3297,3301],{"type":25,"tag":84,"props":3290,"children":3291},{"style":91},[3292],{"type":31,"value":105},{"type":25,"tag":84,"props":3294,"children":3295},{"style":97},[3296],{"type":31,"value":149},{"type":25,"tag":84,"props":3298,"children":3299},{"style":91},[3300],{"type":31,"value":154},{"type":25,"tag":84,"props":3302,"children":3303},{"style":97},[3304],{"type":31,"value":159},{"type":25,"tag":84,"props":3306,"children":3307},{"class":86,"line":304},[3308],{"type":25,"tag":84,"props":3309,"children":3310},{"emptyLinePlaceholder":13},[3311],{"type":31,"value":283},{"type":25,"tag":84,"props":3313,"children":3314},{"class":86,"line":367},[3315,3320,3324],{"type":25,"tag":84,"props":3316,"children":3317},{"style":97},[3318],{"type":31,"value":3319},"master_df_ ",{"type":25,"tag":84,"props":3321,"children":3322},{"style":91},[3323],{"type":31,"value":201},{"type":25,"tag":84,"props":3325,"children":3326},{"style":97},[3327],{"type":31,"value":3328}," master_df[master_df.notnull()]\n",{"type":25,"tag":84,"props":3330,"children":3331},{"class":86,"line":449},[3332,3337,3341,3346,3351],{"type":25,"tag":84,"props":3333,"children":3334},{"style":97},[3335],{"type":31,"value":3336},"master_df_.date1 ",{"type":25,"tag":84,"props":3338,"children":3339},{"style":91},[3340],{"type":31,"value":201},{"type":25,"tag":84,"props":3342,"children":3343},{"style":97},[3344],{"type":31,"value":3345}," pd.to_datetime(master_df_[",{"type":25,"tag":84,"props":3347,"children":3348},{"style":217},[3349],{"type":31,"value":3350},"'date1'",{"type":25,"tag":84,"props":3352,"children":3353},{"style":97},[3354],{"type":31,"value":3355},"])\n",{"type":25,"tag":84,"props":3357,"children":3358},{"class":86,"line":493},[3359],{"type":25,"tag":84,"props":3360,"children":3361},{"emptyLinePlaceholder":13},[3362],{"type":31,"value":283},{"type":25,"tag":84,"props":3364,"children":3365},{"class":86,"line":501},[3366,3371,3375],{"type":25,"tag":84,"props":3367,"children":3368},{"style":97},[3369],{"type":31,"value":3370},"list_of_dates ",{"type":25,"tag":84,"props":3372,"children":3373},{"style":91},[3374],{"type":31,"value":201},{"type":25,"tag":84,"props":3376,"children":3377},{"style":97},[3378],{"type":31,"value":3379}," master_df_.date1.sort_values()\n",{"type":25,"tag":84,"props":3381,"children":3382},{"class":86,"line":1306},[3383],{"type":25,"tag":84,"props":3384,"children":3385},{"emptyLinePlaceholder":13},[3386],{"type":31,"value":283},{"type":25,"tag":84,"props":3388,"children":3389},{"class":86,"line":1314},[3390,3395,3399,3404,3409,3413,3418],{"type":25,"tag":84,"props":3391,"children":3392},{"style":97},[3393],{"type":31,"value":3394},"counts ",{"type":25,"tag":84,"props":3396,"children":3397},{"style":91},[3398],{"type":31,"value":201},{"type":25,"tag":84,"props":3400,"children":3401},{"style":97},[3402],{"type":31,"value":3403}," np.arange(",{"type":25,"tag":84,"props":3405,"children":3406},{"style":236},[3407],{"type":31,"value":3408},"0",{"type":25,"tag":84,"props":3410,"children":3411},{"style":97},[3412],{"type":31,"value":329},{"type":25,"tag":84,"props":3414,"children":3415},{"style":525},[3416],{"type":31,"value":3417},"len",{"type":25,"tag":84,"props":3419,"children":3420},{"style":97},[3421],{"type":31,"value":3422},"(list_of_dates))\n",{"type":25,"tag":84,"props":3424,"children":3425},{"class":86,"line":1323},[3426,3431,3435],{"type":25,"tag":84,"props":3427,"children":3428},{"style":97},[3429],{"type":31,"value":3430},"_ ",{"type":25,"tag":84,"props":3432,"children":3433},{"style":91},[3434],{"type":31,"value":201},{"type":25,"tag":84,"props":3436,"children":3437},{"style":97},[3438],{"type":31,"value":3439}," plt.plot(list_of_dates, counts)\n",{"type":25,"tag":84,"props":3441,"children":3442},{"class":86,"line":1345},[3443,3447,3451,3456,3461],{"type":25,"tag":84,"props":3444,"children":3445},{"style":97},[3446],{"type":31,"value":3430},{"type":25,"tag":84,"props":3448,"children":3449},{"style":91},[3450],{"type":31,"value":201},{"type":25,"tag":84,"props":3452,"children":3453},{"style":97},[3454],{"type":31,"value":3455}," plt.title(",{"type":25,"tag":84,"props":3457,"children":3458},{"style":217},[3459],{"type":31,"value":3460},"'Number of subreddits over time'",{"type":25,"tag":84,"props":3462,"children":3463},{"style":97},[3464],{"type":31,"value":225},{"type":25,"tag":84,"props":3466,"children":3467},{"class":86,"line":1353},[3468,3472,3476,3481,3486],{"type":25,"tag":84,"props":3469,"children":3470},{"style":97},[3471],{"type":31,"value":3430},{"type":25,"tag":84,"props":3473,"children":3474},{"style":91},[3475],{"type":31,"value":201},{"type":25,"tag":84,"props":3477,"children":3478},{"style":97},[3479],{"type":31,"value":3480}," plt.xlabel(",{"type":25,"tag":84,"props":3482,"children":3483},{"style":217},[3484],{"type":31,"value":3485},"'Date'",{"type":25,"tag":84,"props":3487,"children":3488},{"style":97},[3489],{"type":31,"value":225},{"type":25,"tag":84,"props":3491,"children":3492},{"class":86,"line":1362},[3493,3497,3501,3506,3511],{"type":25,"tag":84,"props":3494,"children":3495},{"style":97},[3496],{"type":31,"value":3430},{"type":25,"tag":84,"props":3498,"children":3499},{"style":91},[3500],{"type":31,"value":201},{"type":25,"tag":84,"props":3502,"children":3503},{"style":97},[3504],{"type":31,"value":3505}," plt.ylabel(",{"type":25,"tag":84,"props":3507,"children":3508},{"style":217},[3509],{"type":31,"value":3510},"'Cummulative Count'",{"type":25,"tag":84,"props":3512,"children":3513},{"style":97},[3514],{"type":31,"value":225},{"type":25,"tag":84,"props":3516,"children":3517},{"class":86,"line":1387},[3518,3523,3528],{"type":25,"tag":84,"props":3519,"children":3520},{"style":97},[3521],{"type":31,"value":3522},"plt.savefig(os.path.expanduser(",{"type":25,"tag":84,"props":3524,"children":3525},{"style":217},[3526],{"type":31,"value":3527},"'~/Documents/GitHub/briancaffey.github.io/static/subreddit_graph/subreddits_count.png'",{"type":25,"tag":84,"props":3529,"children":3530},{"style":97},[3531],{"type":31,"value":1195},{"type":25,"tag":34,"props":3533,"children":3534},{},[3535],{"type":25,"tag":3536,"props":3537,"children":3540},"img",{"alt":3538,"src":3539},"png","/static/subreddit_graph/subreddits_count.png",[],{"type":25,"tag":26,"props":3542,"children":3544},{"id":3543},"setting-up-a-graph-with-networkx",[3545],{"type":31,"value":3546},"Setting up a graph with NetworkX",{"type":25,"tag":34,"props":3548,"children":3549},{},[3550,3552,3559],{"type":31,"value":3551},"Next we can start to look at the collection of reddits and related subreddits as a graph. I will be using a Python package for network and graph analysis called ",{"type":25,"tag":40,"props":3553,"children":3556},{"href":3554,"rel":3555},"https://networkx.github.io",[596],[3557],{"type":31,"value":3558},"NetworkX",{"type":31,"value":3560},".",{"type":25,"tag":75,"props":3562,"children":3564},{"code":3563,"language":17,"meta":8,"className":78,"style":8},"#Let's make sure that we have only unique entries in the dataframe.\nmaster_df_u = master_df_.drop_duplicates('subreddit')\n",[3565],{"type":25,"tag":58,"props":3566,"children":3567},{"__ignoreMap":8},[3568,3576],{"type":25,"tag":84,"props":3569,"children":3570},{"class":86,"line":87},[3571],{"type":25,"tag":84,"props":3572,"children":3573},{"style":1174},[3574],{"type":31,"value":3575},"#Let's make sure that we have only unique entries in the dataframe.\n",{"type":25,"tag":84,"props":3577,"children":3578},{"class":86,"line":113},[3579,3584,3588,3593,3597],{"type":25,"tag":84,"props":3580,"children":3581},{"style":97},[3582],{"type":31,"value":3583},"master_df_u ",{"type":25,"tag":84,"props":3585,"children":3586},{"style":91},[3587],{"type":31,"value":201},{"type":25,"tag":84,"props":3589,"children":3590},{"style":97},[3591],{"type":31,"value":3592}," master_df_.drop_duplicates(",{"type":25,"tag":84,"props":3594,"children":3595},{"style":217},[3596],{"type":31,"value":1996},{"type":25,"tag":84,"props":3598,"children":3599},{"style":97},[3600],{"type":31,"value":225},{"type":25,"tag":75,"props":3602,"children":3604},{"code":3603,"language":17,"meta":8,"className":78,"style":8},"master_df_u = master_df_u.drop(master_df_u.index[master_df_u.subreddit=='/r/track__subreddits_'])\n",[3605],{"type":25,"tag":58,"props":3606,"children":3607},{"__ignoreMap":8},[3608],{"type":25,"tag":84,"props":3609,"children":3610},{"class":86,"line":87},[3611,3615,3619,3624,3629,3634],{"type":25,"tag":84,"props":3612,"children":3613},{"style":97},[3614],{"type":31,"value":3583},{"type":25,"tag":84,"props":3616,"children":3617},{"style":91},[3618],{"type":31,"value":201},{"type":25,"tag":84,"props":3620,"children":3621},{"style":97},[3622],{"type":31,"value":3623}," master_df_u.drop(master_df_u.index[master_df_u.subreddit",{"type":25,"tag":84,"props":3625,"children":3626},{"style":91},[3627],{"type":31,"value":3628},"==",{"type":25,"tag":84,"props":3630,"children":3631},{"style":217},[3632],{"type":31,"value":3633},"'/r/track__subreddits_'",{"type":25,"tag":84,"props":3635,"children":3636},{"style":97},[3637],{"type":31,"value":3355},{"type":25,"tag":75,"props":3639,"children":3641},{"code":3640,"language":17,"meta":8,"className":78,"style":8},"#here we define a dictionary where the keys are subreddits and the values are lists of related subreddits\ngraph = {x:y for x, y in zip(master_df_u.subreddit, master_df_u.related)}\n",[3642],{"type":25,"tag":58,"props":3643,"children":3644},{"__ignoreMap":8},[3645,3653],{"type":25,"tag":84,"props":3646,"children":3647},{"class":86,"line":87},[3648],{"type":25,"tag":84,"props":3649,"children":3650},{"style":1174},[3651],{"type":31,"value":3652},"#here we define a dictionary where the keys are subreddits and the values are lists of related subreddits\n",{"type":25,"tag":84,"props":3654,"children":3655},{"class":86,"line":113},[3656,3661,3665,3670,3674,3679,3683,3688],{"type":25,"tag":84,"props":3657,"children":3658},{"style":97},[3659],{"type":31,"value":3660},"graph ",{"type":25,"tag":84,"props":3662,"children":3663},{"style":91},[3664],{"type":31,"value":201},{"type":25,"tag":84,"props":3666,"children":3667},{"style":97},[3668],{"type":31,"value":3669}," {x:y ",{"type":25,"tag":84,"props":3671,"children":3672},{"style":91},[3673],{"type":31,"value":507},{"type":25,"tag":84,"props":3675,"children":3676},{"style":97},[3677],{"type":31,"value":3678}," x, y ",{"type":25,"tag":84,"props":3680,"children":3681},{"style":91},[3682],{"type":31,"value":517},{"type":25,"tag":84,"props":3684,"children":3685},{"style":525},[3686],{"type":31,"value":3687}," zip",{"type":25,"tag":84,"props":3689,"children":3690},{"style":97},[3691],{"type":31,"value":3692},"(master_df_u.subreddit, master_df_u.related)}\n",{"type":25,"tag":75,"props":3694,"children":3696},{"code":3695,"language":17,"meta":8,"className":78,"style":8},"#NetworkX comes with the python Anaconda distribution\nimport networkx as nx\n",[3697],{"type":25,"tag":58,"props":3698,"children":3699},{"__ignoreMap":8},[3700,3708],{"type":25,"tag":84,"props":3701,"children":3702},{"class":86,"line":87},[3703],{"type":25,"tag":84,"props":3704,"children":3705},{"style":1174},[3706],{"type":31,"value":3707},"#NetworkX comes with the python Anaconda distribution\n",{"type":25,"tag":84,"props":3709,"children":3710},{"class":86,"line":113},[3711,3715,3720,3724],{"type":25,"tag":84,"props":3712,"children":3713},{"style":91},[3714],{"type":31,"value":105},{"type":25,"tag":84,"props":3716,"children":3717},{"style":97},[3718],{"type":31,"value":3719}," networkx ",{"type":25,"tag":84,"props":3721,"children":3722},{"style":91},[3723],{"type":31,"value":154},{"type":25,"tag":84,"props":3725,"children":3726},{"style":97},[3727],{"type":31,"value":3728}," nx\n",{"type":25,"tag":75,"props":3730,"children":3732},{"code":3731,"language":17,"meta":8,"className":78,"style":8},"G=nx.Graph()\nG=nx.from_dict_of_lists(graph)\n#making the graph undirected takes all of the vertices between nodes and makes them bi-directional\nG1 = G.to_undirected()\n",[3733],{"type":25,"tag":58,"props":3734,"children":3735},{"__ignoreMap":8},[3736,3753,3769,3777],{"type":25,"tag":84,"props":3737,"children":3738},{"class":86,"line":87},[3739,3744,3748],{"type":25,"tag":84,"props":3740,"children":3741},{"style":97},[3742],{"type":31,"value":3743},"G",{"type":25,"tag":84,"props":3745,"children":3746},{"style":91},[3747],{"type":31,"value":201},{"type":25,"tag":84,"props":3749,"children":3750},{"style":97},[3751],{"type":31,"value":3752},"nx.Graph()\n",{"type":25,"tag":84,"props":3754,"children":3755},{"class":86,"line":113},[3756,3760,3764],{"type":25,"tag":84,"props":3757,"children":3758},{"style":97},[3759],{"type":31,"value":3743},{"type":25,"tag":84,"props":3761,"children":3762},{"style":91},[3763],{"type":31,"value":201},{"type":25,"tag":84,"props":3765,"children":3766},{"style":97},[3767],{"type":31,"value":3768},"nx.from_dict_of_lists(graph)\n",{"type":25,"tag":84,"props":3770,"children":3771},{"class":86,"line":126},[3772],{"type":25,"tag":84,"props":3773,"children":3774},{"style":1174},[3775],{"type":31,"value":3776},"#making the graph undirected takes all of the vertices between nodes and makes them bi-directional\n",{"type":25,"tag":84,"props":3778,"children":3779},{"class":86,"line":139},[3780,3785,3789],{"type":25,"tag":84,"props":3781,"children":3782},{"style":97},[3783],{"type":31,"value":3784},"G1 ",{"type":25,"tag":84,"props":3786,"children":3787},{"style":91},[3788],{"type":31,"value":201},{"type":25,"tag":84,"props":3790,"children":3791},{"style":97},[3792],{"type":31,"value":3793}," G.to_undirected()\n",{"type":25,"tag":75,"props":3795,"children":3797},{"code":3796,"language":17,"meta":8,"className":78,"style":8},"choice = np.random.choice(master_df_u.subreddit, 2)\nprint choice\n",[3798],{"type":25,"tag":58,"props":3799,"children":3800},{"__ignoreMap":8},[3801,3826],{"type":25,"tag":84,"props":3802,"children":3803},{"class":86,"line":87},[3804,3809,3813,3818,3822],{"type":25,"tag":84,"props":3805,"children":3806},{"style":97},[3807],{"type":31,"value":3808},"choice ",{"type":25,"tag":84,"props":3810,"children":3811},{"style":91},[3812],{"type":31,"value":201},{"type":25,"tag":84,"props":3814,"children":3815},{"style":97},[3816],{"type":31,"value":3817}," np.random.choice(master_df_u.subreddit, ",{"type":25,"tag":84,"props":3819,"children":3820},{"style":236},[3821],{"type":31,"value":1334},{"type":25,"tag":84,"props":3823,"children":3824},{"style":97},[3825],{"type":31,"value":225},{"type":25,"tag":84,"props":3827,"children":3828},{"class":86,"line":113},[3829,3833],{"type":25,"tag":84,"props":3830,"children":3831},{"style":525},[3832],{"type":31,"value":528},{"type":25,"tag":84,"props":3834,"children":3835},{"style":97},[3836],{"type":31,"value":3837}," choice\n",{"type":25,"tag":75,"props":3839,"children":3841},{"code":3840},"['/r/streetboarding' '/r/stephenking']\n",[3842],{"type":25,"tag":58,"props":3843,"children":3844},{"__ignoreMap":8},[3845],{"type":31,"value":3840},{"type":25,"tag":34,"props":3847,"children":3848},{},[3849],{"type":31,"value":3850},"Let's test out some of the functions from NetworkX for graph analysis. First, let's take the two randomly selected nodes defined above and test to see if there exists a path between them:",{"type":25,"tag":75,"props":3852,"children":3854},{"code":3853,"language":17,"meta":8,"className":78,"style":8},"nx.has_path(G1, choice[0], choice[1])\n",[3855],{"type":25,"tag":58,"props":3856,"children":3857},{"__ignoreMap":8},[3858],{"type":25,"tag":84,"props":3859,"children":3860},{"class":86,"line":87},[3861,3866,3870,3875,3880],{"type":25,"tag":84,"props":3862,"children":3863},{"style":97},[3864],{"type":31,"value":3865},"nx.has_path(G1, choice[",{"type":25,"tag":84,"props":3867,"children":3868},{"style":236},[3869],{"type":31,"value":3408},{"type":25,"tag":84,"props":3871,"children":3872},{"style":97},[3873],{"type":31,"value":3874},"], choice[",{"type":25,"tag":84,"props":3876,"children":3877},{"style":236},[3878],{"type":31,"value":3879},"1",{"type":25,"tag":84,"props":3881,"children":3882},{"style":97},[3883],{"type":31,"value":3355},{"type":25,"tag":75,"props":3885,"children":3887},{"code":3886},"True\n",[3888],{"type":25,"tag":58,"props":3889,"children":3890},{"__ignoreMap":8},[3891],{"type":31,"value":3886},{"type":25,"tag":26,"props":3893,"children":3895},{"id":3894},"shortest-path",[3896],{"type":31,"value":3897},"Shortest path",{"type":25,"tag":34,"props":3899,"children":3900},{},[3901],{"type":31,"value":3902},"Now let's see (at least one of) the shortest path that exists between these nodes:",{"type":25,"tag":75,"props":3904,"children":3906},{"code":3905,"language":17,"meta":8,"className":78,"style":8},"nx.shortest_path(G1, choice[0], choice[1])\n",[3907],{"type":25,"tag":58,"props":3908,"children":3909},{"__ignoreMap":8},[3910],{"type":25,"tag":84,"props":3911,"children":3912},{"class":86,"line":87},[3913,3918,3922,3926,3930],{"type":25,"tag":84,"props":3914,"children":3915},{"style":97},[3916],{"type":31,"value":3917},"nx.shortest_path(G1, choice[",{"type":25,"tag":84,"props":3919,"children":3920},{"style":236},[3921],{"type":31,"value":3408},{"type":25,"tag":84,"props":3923,"children":3924},{"style":97},[3925],{"type":31,"value":3874},{"type":25,"tag":84,"props":3927,"children":3928},{"style":236},[3929],{"type":31,"value":3879},{"type":25,"tag":84,"props":3931,"children":3932},{"style":97},[3933],{"type":31,"value":3355},{"type":25,"tag":75,"props":3935,"children":3937},{"code":3936},"['/r/streetboarding',\n '/r/freebord',\n '/r/adrenaline',\n '/r/imaginaryadrenaline',\n '/r/imaginarystephenking',\n '/r/stephenking']\n",[3938],{"type":25,"tag":58,"props":3939,"children":3940},{"__ignoreMap":8},[3941],{"type":31,"value":3936},{"type":25,"tag":34,"props":3943,"children":3944},{},[3945],{"type":31,"value":3946},"Let's write a function that selects two random subreddits and then prints a shortest path if it exists:",{"type":25,"tag":75,"props":3948,"children":3950},{"code":3949,"language":17,"meta":8,"className":78,"style":8},"def short_path():\n    choices = np.random.choice(master_df_u.subreddit, 2)\n    if nx.has_path(G1, choices[0], choices[1]) == True:\n        path = nx.shortest_path(G1, choices[0], choices[1])\n        print choices[0] + ' and ' + choices[1] + ' are joined by: \\n' + str(path)\n    else:\n        print \"No path exists between \" + choices[0] + ' and ' + choices[1]\n",[3951],{"type":25,"tag":58,"props":3952,"children":3953},{"__ignoreMap":8},[3954,3973,3997,4040,4073,4150,4161],{"type":25,"tag":84,"props":3955,"children":3956},{"class":86,"line":87},[3957,3962,3968],{"type":25,"tag":84,"props":3958,"children":3959},{"style":385},[3960],{"type":31,"value":3961},"def",{"type":25,"tag":84,"props":3963,"children":3965},{"style":3964},"--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[3966],{"type":31,"value":3967}," short_path",{"type":25,"tag":84,"props":3969,"children":3970},{"style":97},[3971],{"type":31,"value":3972},"():\n",{"type":25,"tag":84,"props":3974,"children":3975},{"class":86,"line":113},[3976,3981,3985,3989,3993],{"type":25,"tag":84,"props":3977,"children":3978},{"style":97},[3979],{"type":31,"value":3980},"    choices ",{"type":25,"tag":84,"props":3982,"children":3983},{"style":91},[3984],{"type":31,"value":201},{"type":25,"tag":84,"props":3986,"children":3987},{"style":97},[3988],{"type":31,"value":3817},{"type":25,"tag":84,"props":3990,"children":3991},{"style":236},[3992],{"type":31,"value":1334},{"type":25,"tag":84,"props":3994,"children":3995},{"style":97},[3996],{"type":31,"value":225},{"type":25,"tag":84,"props":3998,"children":3999},{"class":86,"line":126},[4000,4004,4009,4013,4018,4022,4027,4031,4036],{"type":25,"tag":84,"props":4001,"children":4002},{"style":91},[4003],{"type":31,"value":2087},{"type":25,"tag":84,"props":4005,"children":4006},{"style":97},[4007],{"type":31,"value":4008}," nx.has_path(G1, choices[",{"type":25,"tag":84,"props":4010,"children":4011},{"style":236},[4012],{"type":31,"value":3408},{"type":25,"tag":84,"props":4014,"children":4015},{"style":97},[4016],{"type":31,"value":4017},"], choices[",{"type":25,"tag":84,"props":4019,"children":4020},{"style":236},[4021],{"type":31,"value":3879},{"type":25,"tag":84,"props":4023,"children":4024},{"style":97},[4025],{"type":31,"value":4026},"]) ",{"type":25,"tag":84,"props":4028,"children":4029},{"style":91},[4030],{"type":31,"value":3628},{"type":25,"tag":84,"props":4032,"children":4033},{"style":236},[4034],{"type":31,"value":4035}," True",{"type":25,"tag":84,"props":4037,"children":4038},{"style":97},[4039],{"type":31,"value":2259},{"type":25,"tag":84,"props":4041,"children":4042},{"class":86,"line":139},[4043,4048,4052,4057,4061,4065,4069],{"type":25,"tag":84,"props":4044,"children":4045},{"style":97},[4046],{"type":31,"value":4047},"        path ",{"type":25,"tag":84,"props":4049,"children":4050},{"style":91},[4051],{"type":31,"value":201},{"type":25,"tag":84,"props":4053,"children":4054},{"style":97},[4055],{"type":31,"value":4056}," nx.shortest_path(G1, choices[",{"type":25,"tag":84,"props":4058,"children":4059},{"style":236},[4060],{"type":31,"value":3408},{"type":25,"tag":84,"props":4062,"children":4063},{"style":97},[4064],{"type":31,"value":4017},{"type":25,"tag":84,"props":4066,"children":4067},{"style":236},[4068],{"type":31,"value":3879},{"type":25,"tag":84,"props":4070,"children":4071},{"style":97},[4072],{"type":31,"value":3355},{"type":25,"tag":84,"props":4074,"children":4075},{"class":86,"line":162},[4076,4081,4086,4090,4095,4099,4104,4108,4112,4116,4120,4124,4129,4133,4137,4141,4145],{"type":25,"tag":84,"props":4077,"children":4078},{"style":525},[4079],{"type":31,"value":4080},"        print",{"type":25,"tag":84,"props":4082,"children":4083},{"style":97},[4084],{"type":31,"value":4085}," choices[",{"type":25,"tag":84,"props":4087,"children":4088},{"style":236},[4089],{"type":31,"value":3408},{"type":25,"tag":84,"props":4091,"children":4092},{"style":97},[4093],{"type":31,"value":4094},"] ",{"type":25,"tag":84,"props":4096,"children":4097},{"style":91},[4098],{"type":31,"value":429},{"type":25,"tag":84,"props":4100,"children":4101},{"style":217},[4102],{"type":31,"value":4103}," ' and '",{"type":25,"tag":84,"props":4105,"children":4106},{"style":91},[4107],{"type":31,"value":244},{"type":25,"tag":84,"props":4109,"children":4110},{"style":97},[4111],{"type":31,"value":4085},{"type":25,"tag":84,"props":4113,"children":4114},{"style":236},[4115],{"type":31,"value":3879},{"type":25,"tag":84,"props":4117,"children":4118},{"style":97},[4119],{"type":31,"value":4094},{"type":25,"tag":84,"props":4121,"children":4122},{"style":91},[4123],{"type":31,"value":429},{"type":25,"tag":84,"props":4125,"children":4126},{"style":217},[4127],{"type":31,"value":4128}," ' are joined by: ",{"type":25,"tag":84,"props":4130,"children":4131},{"style":236},[4132],{"type":31,"value":2467},{"type":25,"tag":84,"props":4134,"children":4135},{"style":217},[4136],{"type":31,"value":2462},{"type":25,"tag":84,"props":4138,"children":4139},{"style":91},[4140],{"type":31,"value":244},{"type":25,"tag":84,"props":4142,"children":4143},{"style":462},[4144],{"type":31,"value":1583},{"type":25,"tag":84,"props":4146,"children":4147},{"style":97},[4148],{"type":31,"value":4149},"(path)\n",{"type":25,"tag":84,"props":4151,"children":4152},{"class":86,"line":286},[4153,4157],{"type":25,"tag":84,"props":4154,"children":4155},{"style":91},[4156],{"type":31,"value":2254},{"type":25,"tag":84,"props":4158,"children":4159},{"style":97},[4160],{"type":31,"value":2259},{"type":25,"tag":84,"props":4162,"children":4163},{"class":86,"line":304},[4164,4168,4173,4177,4181,4185,4189,4193,4197,4201,4205,4209],{"type":25,"tag":84,"props":4165,"children":4166},{"style":525},[4167],{"type":31,"value":4080},{"type":25,"tag":84,"props":4169,"children":4170},{"style":217},[4171],{"type":31,"value":4172}," \"No path exists between \"",{"type":25,"tag":84,"props":4174,"children":4175},{"style":91},[4176],{"type":31,"value":244},{"type":25,"tag":84,"props":4178,"children":4179},{"style":97},[4180],{"type":31,"value":4085},{"type":25,"tag":84,"props":4182,"children":4183},{"style":236},[4184],{"type":31,"value":3408},{"type":25,"tag":84,"props":4186,"children":4187},{"style":97},[4188],{"type":31,"value":4094},{"type":25,"tag":84,"props":4190,"children":4191},{"style":91},[4192],{"type":31,"value":429},{"type":25,"tag":84,"props":4194,"children":4195},{"style":217},[4196],{"type":31,"value":4103},{"type":25,"tag":84,"props":4198,"children":4199},{"style":91},[4200],{"type":31,"value":244},{"type":25,"tag":84,"props":4202,"children":4203},{"style":97},[4204],{"type":31,"value":4085},{"type":25,"tag":84,"props":4206,"children":4207},{"style":236},[4208],{"type":31,"value":3879},{"type":25,"tag":84,"props":4210,"children":4211},{"style":97},[4212],{"type":31,"value":1438},{"type":25,"tag":34,"props":4214,"children":4215},{},[4216,4218,4224],{"type":31,"value":4217},"Here's a collection of results from the ",{"type":25,"tag":58,"props":4219,"children":4221},{"className":4220},[],[4222],{"type":31,"value":4223},"short_path",{"type":31,"value":4225}," function defined above that start to paint a picuture of the broad set of topics covered by reddit.com:",{"type":25,"tag":75,"props":4227,"children":4229},{"code":4228,"language":17,"meta":8,"className":78,"style":8},"short_path()\n",[4230],{"type":25,"tag":58,"props":4231,"children":4232},{"__ignoreMap":8},[4233],{"type":25,"tag":84,"props":4234,"children":4235},{"class":86,"line":87},[4236],{"type":25,"tag":84,"props":4237,"children":4238},{"style":97},[4239],{"type":31,"value":4228},{"type":25,"tag":75,"props":4241,"children":4243},{"code":4242},"/r/personalizationadvice and /r/beautifulfemales are joined by:\n['/r/personalizationadvice', '/r/coloranalysis', '/r/fashion', '/r/redcarpet', '/r/gentlemanboners', '/r/beautifulfemales']\n",[4244],{"type":25,"tag":58,"props":4245,"children":4246},{"__ignoreMap":8},[4247],{"type":31,"value":4242},{"type":25,"tag":75,"props":4249,"children":4250},{"code":4228,"language":17,"meta":8,"className":78,"style":8},[4251],{"type":25,"tag":58,"props":4252,"children":4253},{"__ignoreMap":8},[4254],{"type":25,"tag":84,"props":4255,"children":4256},{"class":86,"line":87},[4257],{"type":25,"tag":84,"props":4258,"children":4259},{"style":97},[4260],{"type":31,"value":4228},{"type":25,"tag":75,"props":4262,"children":4264},{"code":4263},"/r/caffeine and /r/shittyramen are joined by:\n['/r/caffeine', '/r/toast', '/r/cooking', '/r/ramen', '/r/shittyramen']\n",[4265],{"type":25,"tag":58,"props":4266,"children":4267},{"__ignoreMap":8},[4268],{"type":31,"value":4263},{"type":25,"tag":75,"props":4270,"children":4271},{"code":4228,"language":17,"meta":8,"className":78,"style":8},[4272],{"type":25,"tag":58,"props":4273,"children":4274},{"__ignoreMap":8},[4275],{"type":25,"tag":84,"props":4276,"children":4277},{"class":86,"line":87},[4278],{"type":25,"tag":84,"props":4279,"children":4280},{"style":97},[4281],{"type":31,"value":4228},{"type":25,"tag":75,"props":4283,"children":4285},{"code":4284},"/r/watchingcongress and /r/iwantthatonashirt are joined by:\n['/r/watchingcongress', '/r/stand', '/r/snowden', '/r/undelete', '/r/trees', '/r/iwantthatonashirt']\n",[4286],{"type":25,"tag":58,"props":4287,"children":4288},{"__ignoreMap":8},[4289],{"type":31,"value":4284},{"type":25,"tag":75,"props":4291,"children":4292},{"code":4228,"language":17,"meta":8,"className":78,"style":8},[4293],{"type":25,"tag":58,"props":4294,"children":4295},{"__ignoreMap":8},[4296],{"type":25,"tag":84,"props":4297,"children":4298},{"class":86,"line":87},[4299],{"type":25,"tag":84,"props":4300,"children":4301},{"style":97},[4302],{"type":31,"value":4228},{"type":25,"tag":75,"props":4304,"children":4306},{"code":4305},"/r/asksciencediscussion and /r/dogsonhardwoodfloors are joined by:\n['/r/asksciencediscussion', '/r/badscience', '/r/badlinguistics', '/r/animalsbeingjerks', '/r/startledcats', '/r/dogsonhardwoodfloors']\n",[4307],{"type":25,"tag":58,"props":4308,"children":4309},{"__ignoreMap":8},[4310],{"type":31,"value":4305},{"type":25,"tag":75,"props":4312,"children":4313},{"code":4228,"language":17,"meta":8,"className":78,"style":8},[4314],{"type":25,"tag":58,"props":4315,"children":4316},{"__ignoreMap":8},[4317],{"type":25,"tag":84,"props":4318,"children":4319},{"class":86,"line":87},[4320],{"type":25,"tag":84,"props":4321,"children":4322},{"style":97},[4323],{"type":31,"value":4228},{"type":25,"tag":75,"props":4325,"children":4327},{"code":4326},"/r/randommail and /r/mini are joined by:\n['/r/randommail', '/r/spiceexchange', '/r/cameraswapping', '/r/itookapicture', '/r/carporn', '/r/mini']\n",[4328],{"type":25,"tag":58,"props":4329,"children":4330},{"__ignoreMap":8},[4331],{"type":31,"value":4326},{"type":25,"tag":75,"props":4333,"children":4334},{"code":4228,"language":17,"meta":8,"className":78,"style":8},[4335],{"type":25,"tag":58,"props":4336,"children":4337},{"__ignoreMap":8},[4338],{"type":25,"tag":84,"props":4339,"children":4340},{"class":86,"line":87},[4341],{"type":25,"tag":84,"props":4342,"children":4343},{"style":97},[4344],{"type":31,"value":4228},{"type":25,"tag":75,"props":4346,"children":4348},{"code":4347},"/r/catsinsinks and /r/nzmovies are joined by:\n['/r/catsinsinks', '/r/wetcats', '/r/tinysubredditoftheday', '/r/sheep', '/r/nzmetahub', '/r/nzmovies']\n",[4349],{"type":25,"tag":58,"props":4350,"children":4351},{"__ignoreMap":8},[4352],{"type":31,"value":4347},{"type":25,"tag":75,"props":4354,"children":4355},{"code":4228,"language":17,"meta":8,"className":78,"style":8},[4356],{"type":25,"tag":58,"props":4357,"children":4358},{"__ignoreMap":8},[4359],{"type":25,"tag":84,"props":4360,"children":4361},{"class":86,"line":87},[4362],{"type":25,"tag":84,"props":4363,"children":4364},{"style":97},[4365],{"type":31,"value":4228},{"type":25,"tag":75,"props":4367,"children":4369},{"code":4368},"/r/thoriumreactor and /r/sailing are joined by:\n['/r/thoriumreactor', '/r/energy', '/r/spev', '/r/sailing']\n",[4370],{"type":25,"tag":58,"props":4371,"children":4372},{"__ignoreMap":8},[4373],{"type":31,"value":4368},{"type":25,"tag":75,"props":4375,"children":4376},{"code":4228,"language":17,"meta":8,"className":78,"style":8},[4377],{"type":25,"tag":58,"props":4378,"children":4379},{"__ignoreMap":8},[4380],{"type":25,"tag":84,"props":4381,"children":4382},{"class":86,"line":87},[4383],{"type":25,"tag":84,"props":4384,"children":4385},{"style":97},[4386],{"type":31,"value":4228},{"type":25,"tag":75,"props":4388,"children":4390},{"code":4389},"/r/deathnote and /r/vegetarianism are joined by:\n['/r/deathnote', '/r/television', '/r/netflixbestof', '/r/naturefilms', '/r/environment', '/r/vegetarianism']\n",[4391],{"type":25,"tag":58,"props":4392,"children":4393},{"__ignoreMap":8},[4394],{"type":31,"value":4389},{"type":25,"tag":75,"props":4396,"children":4397},{"code":4228,"language":17,"meta":8,"className":78,"style":8},[4398],{"type":25,"tag":58,"props":4399,"children":4400},{"__ignoreMap":8},[4401],{"type":25,"tag":84,"props":4402,"children":4403},{"class":86,"line":87},[4404],{"type":25,"tag":84,"props":4405,"children":4406},{"style":97},[4407],{"type":31,"value":4228},{"type":25,"tag":75,"props":4409,"children":4411},{"code":4410},"/r/mississippir4r and /r/mathematics are joined by:\n['/r/mississippir4r', '/r/mississippi', '/r/prisonreform', '/r/socialscience', '/r/alltech', '/r/mathematics']\n",[4412],{"type":25,"tag":58,"props":4413,"children":4414},{"__ignoreMap":8},[4415],{"type":31,"value":4410},{"type":25,"tag":75,"props":4417,"children":4418},{"code":4228,"language":17,"meta":8,"className":78,"style":8},[4419],{"type":25,"tag":58,"props":4420,"children":4421},{"__ignoreMap":8},[4422],{"type":25,"tag":84,"props":4423,"children":4424},{"class":86,"line":87},[4425],{"type":25,"tag":84,"props":4426,"children":4427},{"style":97},[4428],{"type":31,"value":4228},{"type":25,"tag":75,"props":4430,"children":4432},{"code":4431},"/r/britainsgottalent and /r/irelandbaldwin are joined by:\n['/r/britainsgottalent', '/r/britishtv', '/r/that70sshow', '/r/mila_kunis', '/r/christinaricci', '/r/irelandbaldwin']\n",[4433],{"type":25,"tag":58,"props":4434,"children":4435},{"__ignoreMap":8},[4436],{"type":31,"value":4431},{"type":25,"tag":75,"props":4438,"children":4439},{"code":4228,"language":17,"meta":8,"className":78,"style":8},[4440],{"type":25,"tag":58,"props":4441,"children":4442},{"__ignoreMap":8},[4443],{"type":25,"tag":84,"props":4444,"children":4445},{"class":86,"line":87},[4446],{"type":25,"tag":84,"props":4447,"children":4448},{"style":97},[4449],{"type":31,"value":4228},{"type":25,"tag":75,"props":4451,"children":4453},{"code":4452},"/r/the_donald and /r/ladybusiness are joined by:\n['/r/the_donald', '/r/shitliberalssay', '/r/trollxchromosomes', '/r/ladybusiness']\n",[4454],{"type":25,"tag":58,"props":4455,"children":4456},{"__ignoreMap":8},[4457],{"type":31,"value":4452},{"type":25,"tag":75,"props":4459,"children":4460},{"code":4228,"language":17,"meta":8,"className":78,"style":8},[4461],{"type":25,"tag":58,"props":4462,"children":4463},{"__ignoreMap":8},[4464],{"type":25,"tag":84,"props":4465,"children":4466},{"class":86,"line":87},[4467],{"type":25,"tag":84,"props":4468,"children":4469},{"style":97},[4470],{"type":31,"value":4228},{"type":25,"tag":75,"props":4472,"children":4474},{"code":4473},"/r/selfharm and /r/medlabprofessionals are joined by:\n['/r/selfharm', '/r/adhd', '/r/neuroimaging', '/r/pharmacy', '/r/medlabprofessionals']\n",[4475],{"type":25,"tag":58,"props":4476,"children":4477},{"__ignoreMap":8},[4478],{"type":31,"value":4473},{"type":25,"tag":75,"props":4480,"children":4481},{"code":4228,"language":17,"meta":8,"className":78,"style":8},[4482],{"type":25,"tag":58,"props":4483,"children":4484},{"__ignoreMap":8},[4485],{"type":25,"tag":84,"props":4486,"children":4487},{"class":86,"line":87},[4488],{"type":25,"tag":84,"props":4489,"children":4490},{"style":97},[4491],{"type":31,"value":4228},{"type":25,"tag":75,"props":4493,"children":4495},{"code":4494},"/r/coverart and /r/phillycraftbeer are joined by:\n['/r/coverart', '/r/nostalgia', '/r/upvotedbecausegirl', '/r/wtf', '/r/remindsmeofdf', '/r/beer', '/r/phillycraftbeer']\n",[4496],{"type":25,"tag":58,"props":4497,"children":4498},{"__ignoreMap":8},[4499],{"type":31,"value":4494},{"type":25,"tag":75,"props":4501,"children":4502},{"code":4228,"language":17,"meta":8,"className":78,"style":8},[4503],{"type":25,"tag":58,"props":4504,"children":4505},{"__ignoreMap":8},[4506],{"type":25,"tag":84,"props":4507,"children":4508},{"class":86,"line":87},[4509],{"type":25,"tag":84,"props":4510,"children":4511},{"style":97},[4512],{"type":31,"value":4228},{"type":25,"tag":75,"props":4514,"children":4516},{"code":4515},"/r/hotguyswithlonghair and /r/castles are joined by:\n['/r/hotguyswithlonghair', '/r/majesticmanes', '/r/ladyboners', '/r/imaginaryladyboners', '/r/imaginarycastles', '/r/castles']\n",[4517],{"type":25,"tag":58,"props":4518,"children":4519},{"__ignoreMap":8},[4520],{"type":31,"value":4515},{"type":25,"tag":34,"props":4522,"children":4523},{},[4524,4526,4533,4535,4542],{"type":31,"value":4525},"Taking a look ",{"type":25,"tag":40,"props":4527,"children":4530},{"href":4528,"rel":4529},"http://networkx.readthedocs.io/en/networkx-1.11/_modules/networkx/algorithms/shortest_paths/unweighted.html?highlight=bidirectional_shortest_path",[596],[4531],{"type":31,"value":4532},"under the hood",{"type":31,"value":4534}," of NetworkX and examining the algorith that finds the ",{"type":25,"tag":40,"props":4536,"children":4539},{"href":4537,"rel":4538},"http://networkx.readthedocs.io/en/networkx-1.11/_modules/networkx/algorithms/shortest_paths/generic.html#shortest_path",[596],[4540],{"type":31,"value":4541},"shortest path",{"type":31,"value":4543}," between any two nodes in a graph, we find that it simply boils down to:",{"type":25,"tag":75,"props":4545,"children":4547},{"code":4546},"def shortest_path(G, source=None, target=None, weight=None):\n    paths=nx.bidirectional_shortest_path(G,source,target)\n    return paths\n",[4548],{"type":25,"tag":58,"props":4549,"children":4550},{"__ignoreMap":8},[4551],{"type":31,"value":4546},{"type":25,"tag":34,"props":4553,"children":4554},{},[4555,4557,4563,4565,4571],{"type":31,"value":4556},"You can read more about the ",{"type":25,"tag":58,"props":4558,"children":4560},{"className":4559},[],[4561],{"type":31,"value":4562},"bidirectional_shortest_path",{"type":31,"value":4564}," function ",{"type":25,"tag":40,"props":4566,"children":4568},{"href":4528,"rel":4567},[596],[4569],{"type":31,"value":4570},"here",{"type":31,"value":4572}," in the NetworkX documentation.",{"type":25,"tag":34,"props":4574,"children":4575},{},[4576,4578,4583],{"type":31,"value":4577},"When I was first experimenting with graph algorithms, I had an interesting result using an algorithm intruduced ",{"type":25,"tag":40,"props":4579,"children":4581},{"href":1003,"rel":4580},[596],[4582],{"type":31,"value":4570},{"type":31,"value":4584}," in the Python documentation. Here's the algorithm:",{"type":25,"tag":75,"props":4586,"children":4588},{"code":4587,"language":17,"meta":8,"className":78,"style":8},"def find_path(graph, start, end, path=[]):\n    path = path + [start]\n    if start == end:\n        return path\n    if not graph.has_key(start):\n        return None\n    for node in graph[start]:\n        if node not in path:\n            newpath = find_path(graph, node, end, path)\n            if newpath: return newpath\n    return None\n",[4589],{"type":25,"tag":58,"props":4590,"children":4591},{"__ignoreMap":8},[4592,4650,4676,4697,4710,4727,4739,4761,4788,4805,4828],{"type":25,"tag":84,"props":4593,"children":4594},{"class":86,"line":87},[4595,4599,4604,4608,4614,4618,4623,4627,4632,4636,4641,4645],{"type":25,"tag":84,"props":4596,"children":4597},{"style":385},[4598],{"type":31,"value":3961},{"type":25,"tag":84,"props":4600,"children":4601},{"style":3964},[4602],{"type":31,"value":4603}," find_path",{"type":25,"tag":84,"props":4605,"children":4606},{"style":97},[4607],{"type":31,"value":470},{"type":25,"tag":84,"props":4609,"children":4611},{"style":4610},"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#FD971F;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[4612],{"type":31,"value":4613},"graph",{"type":25,"tag":84,"props":4615,"children":4616},{"style":97},[4617],{"type":31,"value":329},{"type":25,"tag":84,"props":4619,"children":4620},{"style":4610},[4621],{"type":31,"value":4622},"start",{"type":25,"tag":84,"props":4624,"children":4625},{"style":97},[4626],{"type":31,"value":329},{"type":25,"tag":84,"props":4628,"children":4629},{"style":4610},[4630],{"type":31,"value":4631},"end",{"type":25,"tag":84,"props":4633,"children":4634},{"style":97},[4635],{"type":31,"value":329},{"type":25,"tag":84,"props":4637,"children":4638},{"style":4610},[4639],{"type":31,"value":4640},"path",{"type":25,"tag":84,"props":4642,"children":4643},{"style":91},[4644],{"type":31,"value":201},{"type":25,"tag":84,"props":4646,"children":4647},{"style":97},[4648],{"type":31,"value":4649},"[]):\n",{"type":25,"tag":84,"props":4651,"children":4652},{"class":86,"line":113},[4653,4658,4662,4667,4671],{"type":25,"tag":84,"props":4654,"children":4655},{"style":97},[4656],{"type":31,"value":4657},"    path ",{"type":25,"tag":84,"props":4659,"children":4660},{"style":91},[4661],{"type":31,"value":201},{"type":25,"tag":84,"props":4663,"children":4664},{"style":97},[4665],{"type":31,"value":4666}," path ",{"type":25,"tag":84,"props":4668,"children":4669},{"style":91},[4670],{"type":31,"value":429},{"type":25,"tag":84,"props":4672,"children":4673},{"style":97},[4674],{"type":31,"value":4675}," [start]\n",{"type":25,"tag":84,"props":4677,"children":4678},{"class":86,"line":126},[4679,4683,4688,4692],{"type":25,"tag":84,"props":4680,"children":4681},{"style":91},[4682],{"type":31,"value":2087},{"type":25,"tag":84,"props":4684,"children":4685},{"style":97},[4686],{"type":31,"value":4687}," start ",{"type":25,"tag":84,"props":4689,"children":4690},{"style":91},[4691],{"type":31,"value":3628},{"type":25,"tag":84,"props":4693,"children":4694},{"style":97},[4695],{"type":31,"value":4696}," end:\n",{"type":25,"tag":84,"props":4698,"children":4699},{"class":86,"line":139},[4700,4705],{"type":25,"tag":84,"props":4701,"children":4702},{"style":91},[4703],{"type":31,"value":4704},"        return",{"type":25,"tag":84,"props":4706,"children":4707},{"style":97},[4708],{"type":31,"value":4709}," path\n",{"type":25,"tag":84,"props":4711,"children":4712},{"class":86,"line":162},[4713,4717,4722],{"type":25,"tag":84,"props":4714,"children":4715},{"style":91},[4716],{"type":31,"value":2087},{"type":25,"tag":84,"props":4718,"children":4719},{"style":91},[4720],{"type":31,"value":4721}," not",{"type":25,"tag":84,"props":4723,"children":4724},{"style":97},[4725],{"type":31,"value":4726}," graph.has_key(start):\n",{"type":25,"tag":84,"props":4728,"children":4729},{"class":86,"line":286},[4730,4734],{"type":25,"tag":84,"props":4731,"children":4732},{"style":91},[4733],{"type":31,"value":4704},{"type":25,"tag":84,"props":4735,"children":4736},{"style":236},[4737],{"type":31,"value":4738}," None\n",{"type":25,"tag":84,"props":4740,"children":4741},{"class":86,"line":304},[4742,4747,4752,4756],{"type":25,"tag":84,"props":4743,"children":4744},{"style":91},[4745],{"type":31,"value":4746},"    for",{"type":25,"tag":84,"props":4748,"children":4749},{"style":97},[4750],{"type":31,"value":4751}," node ",{"type":25,"tag":84,"props":4753,"children":4754},{"style":91},[4755],{"type":31,"value":517},{"type":25,"tag":84,"props":4757,"children":4758},{"style":97},[4759],{"type":31,"value":4760}," graph[start]:\n",{"type":25,"tag":84,"props":4762,"children":4763},{"class":86,"line":367},[4764,4769,4773,4778,4783],{"type":25,"tag":84,"props":4765,"children":4766},{"style":91},[4767],{"type":31,"value":4768},"        if",{"type":25,"tag":84,"props":4770,"children":4771},{"style":97},[4772],{"type":31,"value":4751},{"type":25,"tag":84,"props":4774,"children":4775},{"style":91},[4776],{"type":31,"value":4777},"not",{"type":25,"tag":84,"props":4779,"children":4780},{"style":91},[4781],{"type":31,"value":4782}," in",{"type":25,"tag":84,"props":4784,"children":4785},{"style":97},[4786],{"type":31,"value":4787}," path:\n",{"type":25,"tag":84,"props":4789,"children":4790},{"class":86,"line":449},[4791,4796,4800],{"type":25,"tag":84,"props":4792,"children":4793},{"style":97},[4794],{"type":31,"value":4795},"            newpath ",{"type":25,"tag":84,"props":4797,"children":4798},{"style":91},[4799],{"type":31,"value":201},{"type":25,"tag":84,"props":4801,"children":4802},{"style":97},[4803],{"type":31,"value":4804}," find_path(graph, node, end, path)\n",{"type":25,"tag":84,"props":4806,"children":4807},{"class":86,"line":493},[4808,4813,4818,4823],{"type":25,"tag":84,"props":4809,"children":4810},{"style":91},[4811],{"type":31,"value":4812},"            if",{"type":25,"tag":84,"props":4814,"children":4815},{"style":97},[4816],{"type":31,"value":4817}," newpath: ",{"type":25,"tag":84,"props":4819,"children":4820},{"style":91},[4821],{"type":31,"value":4822},"return",{"type":25,"tag":84,"props":4824,"children":4825},{"style":97},[4826],{"type":31,"value":4827}," newpath\n",{"type":25,"tag":84,"props":4829,"children":4830},{"class":86,"line":501},[4831,4836],{"type":25,"tag":84,"props":4832,"children":4833},{"style":91},[4834],{"type":31,"value":4835},"    return",{"type":25,"tag":84,"props":4837,"children":4838},{"style":236},[4839],{"type":31,"value":4738},{"type":25,"tag":34,"props":4841,"children":4842},{},[4843],{"type":31,"value":4844},"The above algorthim uses a process called backtracking to exaustively try all possibilities until it returns a solution. It creates an interesting \"random walk\" through groups of related subreddits. Here's the result of calling the above function on our graph (only 2 layers deep) with two random nodes: /r/persianrap and /r/nosleep:",{"type":25,"tag":586,"props":4846,"children":4847},{},[4848],{"type":25,"tag":34,"props":4849,"children":4850},{},[4851],{"type":31,"value":4852},"/r/persianrap /r/middleeasternmusic /r/arabic /r/arabs /r/libyancrisis /r/syriancivilwar /r/yemenicrisis /r/sinaiinsurgency /r/jihadinfocus /r/credibledefense /r/geopolitics /r/forgottennews /r/libyanconflict /r/menaconflicts /r/iran /r/iranianlgbt /r/zoroastrianism /r/kurdistan /r/rojava /r/anarchism /r/imaginarypolitics /r/imaginaryimmortals /r/imaginaryclerics /r/imaginarylakes /r/imaginaryaliens /r/imaginarygnomes /r/imaginaryladyboners /r/imaginaryturtleworlds /r/imaginarysunnydale /r/imaginarydwarves /r/imaginarywizards /r/imaginaryvikings /r/imaginarycolorscapes /r/imaginarysteampunk /r/imaginarytemples /r/imaginaryblueprints /r/comicbookart /r/imaginarytechnology /r/mtgporn /r/imaginaryoldkingdom /r/imaginaryfactories /r/imaginaryfederation /r/imaginarylovers /r/imaginarynarnia /r/imaginarydwellings /r/imaginaryscience /r/imaginarytaverns /r/imaginarybattlefields /r/cityporn /r/japanpics /r/nationalphotosubs /r/austriapics /r/southkoreapics /r/taiwanpics /r/ghanapics /r/kenyapics /r/norwaypics /r/vzlapics /r/perupics /r/antarcticapics /r/greatlakespics /r/lakeporn /r/pornoverlords /r/thingscutinhalfporn /r/manufacturing /r/cnc /r/askengineers /r/sciencesubreddits /r/math /r/simulate /r/cosmology /r/reddittothefuture /r/scifi /r/lost /r/the100books /r/the100 /r/theblacklist /r/nbc /r/dundermifflin /r/sonsofanarchy /r/twentyfour /r/banshee /r/hbo /r/siliconvalleyhbo /r/siliconvalley /r/california /r/tahoe /r/skiing /r/snowshoeing /r/xcountryskiing /r/wintergear /r/skijumping /r/winter /r/bigmountain /r/mountaineering /r/campingandhiking /r/earthporn /r/nature /r/birding /r/invasivespecies /r/zoology /r/entomology /r/rainforest /r/botany /r/wildlife /r/allscience /r/earthscience /r/energy /r/biomass /r/renewablenews /r/syngas /r/climatenews /r/composting /r/vermiculture /r/organicfarming /r/livestock /r/animalwelfare /r/randomactsofpetfood /r/animalreddits /r/cockatiel /r/catpics /r/tortoises /r/whales /r/cetacea /r/lifeaquatic /r/hrw /r/green_peace /r/environmental_policy /r/conservation /r/depthhub /r/indepthsports /r/deeperhubbeta /r/lectures /r/spacepolicy /r/skylon /r/ula /r/isro /r/engineteststands /r/jupiters /r/imaginarystarscapes /r/spacequestions /r/spaceflight /r/moon /r/dione /r/europa /r/oortcloud /r/dwarfplanetceres /r/saturn /r/asteroidbelt /r/mars /r/rhea /r/venus /r/astrophys /r/spacevideos /r/transhuman /r/timereddits /r/virtualreality /r/vive /r/oculus /r/learnvrdev /r/unity3d /r/gamedev /r/crowdfunding /r/crowdsourcing /r/mturk /r/swagbucks /r/beermoney /r/flipping /r/shoplifting /r/thriftstorehauls /r/dvdcollection /r/televisionposterporn /r/concertposterporn /r/movieposterporn /r/lv426 /r/predator /r/arnoldschwarzenegger /r/alanpartridge /r/americandad /r/timanderic /r/homemovies /r/gravityfalls /r/homestarrunner /r/telltale /r/thewalkingdeadgame /r/thewalkingdeadgifs /r/twdnomansland /r/heycarl /r/twdroadtosurvival /r/thewalkingdead /r/zombies /r/guns /r/swissguns /r/opencarry /r/libertarian /r/geolibertarianism /r/basicincome /r/basicincomeactivism /r/mhoc /r/modelaustralia /r/rmtk /r/thenetherlands /r/tokkiefeesboek /r/nujijinactie /r/ik_ihe /r/youirl /r/fite_me_irl /r/2meirl4meirl /r/depression /r/randomactsofcards /r/philately /r/coins /r/coins4sale /r/ancientcoins /r/ancientrome /r/flatblue /r/bestofwritingprompts /r/writingprompts /r/promptoftheday /r/flashfiction /r/keepwriting /r/getmotivated /r/mentors /r/favors /r/recordthis /r/videography /r/animation /r/3dsmax /r/computergraphics /r/cinema4d /r/design /r/ui_design /r/designjobs /r/heavymind /r/wtfart /r/alternativeart /r/imaginaryninjas /r/imaginaryruins /r/isometric /r/imaginaryislands /r/imaginaryverse /r/icandrawthat /r/caricatures /r/imaginaryneweden /r/imaginaryequestria /r/imaginaryaww /r/imaginarycyberpunk /r/chinafuturism /r/scifirealism /r/inegentlemanboners /r/imaginarywtf /r/imaginaryelementals /r/imaginarydinosaurs /r/dinosaurs /r/speculativeevolution /r/hybridanimals /r/photoshopbattles /r/cutouts /r/battleshops /r/graphic_design /r/visualization /r/statistics /r/oncourtanalytics /r/nbaanalytics /r/nba /r/pacers /r/atlantahawks /r/basketball /r/mavericks /r/fcdallas /r/theticket /r/dallasstars /r/bostonbruins /r/patriots /r/tennesseetitans /r/nashvillesounds /r/predators /r/flyers /r/hockeyfandom /r/caps /r/nhl /r/detroitredwings /r/sabres /r/floridapanthers /r/habs /r/montrealimpact /r/alouettes /r/cfl /r/stadiumporn /r/nfl /r/madden /r/eurobowl /r/fantasyfb /r/fantasyfootball /r/49ers /r/footballgamefilm /r/footballstrategy /r/cfb /r/collegebaseball /r/mlbdraft /r/baseball /r/cubs /r/cardinals /r/saintlouisfc /r/stlouisblues /r/stlouis /r/stlouisbiking /r/mobicycling /r/bicycling /r/vintage_bicycles /r/miamibiking /r/fatbike /r/cycling /r/strava /r/phillycycling /r/wheelbuild /r/bikewrench /r/velo /r/bikepolo /r/bicycletouring /r/bicyclingcirclejerk /r/bikecommuting /r/ukbike /r/leedscycling /r/londoncycling /r/fixedgearbicycle /r/cyclingfashion /r/peloton /r/mtb /r/climbingporn /r/adrenaline /r/motocross /r/bmxracing /r/wake /r/snowboardingnoobs /r/freebord /r/snowboarding /r/sledding /r/outdoors /r/soposts /r/cordcutters /r/netflixviavpn /r/hulu /r/firetv /r/netflixbestof /r/raisinghope /r/madmen /r/earthsgottalent /r/bobsburgers /r/fringe /r/louie /r/theoriginals /r/iansomerhalder /r/kat_graham /r/indianaevans /r/janelevy /r/gagegolightly /r/sarahhyland /r/starlets /r/ninadobrev /r/kathrynnewton /r/arielwinter /r/ashleygreene /r/gentlemanboners /r/bandporn /r/musicpics /r/listentomusic /r/listentonew /r/subraddits /r/dtipics /r/damnthatsinteresting /r/interestingasfuck /r/unexpected /r/wtf /r/weird /r/animalsbeingderps /r/animalsbeingconfused /r/humansbeingbros /r/hulpdiensten /r/askle /r/protectandserve /r/good_cop_free_donut /r/bad_cop_follow_up /r/amifreetogo /r/copwatch /r/puppycide /r/underreportednews /r/mediaquotes /r/savedyouaclick /r/news /r/neutralnews /r/ask_politics /r/politicalopinions /r/gunsarecool /r/renewableenergy /r/web_design /r/somebodymakethis /r/somethingimade /r/crafts /r/kidscrafts /r/daddit /r/formulafeeders /r/boobsandbottles /r/csectioncentral /r/predaddit /r/dadbloggers /r/mombloggers /r/cutekids /r/bigfeats /r/scienceparents /r/lv9hrvv /r/sahp /r/tryingforababy /r/waiting_to_try /r/pcos /r/infertility /r/birthparents /r/tfabchartstalkers /r/firsttimettc /r/cautiousbtb /r/ttchealthy /r/xxketo /r/ketoscience /r/ketogains /r/leangains /r/gettingshredded /r/bulkorcut /r/gainit /r/decidingtobebetter /r/zen /r/buddhism /r/astralprojection /r/spirituality /r/hinduism /r/yoga /r/veganfitness /r/posture /r/health /r/ukhealthcare /r/pharmacy /r/nursing /r/doctorswithoutborders /r/humanitarian /r/assistance /r/paranormalhelp /r/paranormal /r/333 /r/askparanormal /r/intelligence /r/blackhat /r/netsec /r/technology /r/newyorkfuturistparty /r/rad_decentralization /r/massachusettsfp /r/opensource /r/alabamafp /r/darknetplan /r/torrents /r/i2p /r/privacy /r/badgovnofreedom /r/censorship /r/governmentoppression /r/descentintotyranny /r/wikileaks /r/dncleaks /r/hillaryforprison /r/the_donald /r/shitredditsays /r/srsmythos /r/srstrees /r/entwives /r/lesbients /r/actuallesbians /r/lesbianromance /r/lesbianerotica /r/l4l /r/dyke /r/ladyladyboners /r/bisexual /r/bisexy /r/biwomen /r/pansexual /r/genderqueer /r/transspace /r/lgbtlibrary /r/lgbtnews /r/dixiequeer /r/lgbt /r/sex /r/helpmecope /r/bpd /r/rapecounseling /r/trueoffmychest /r/suicidewatch /r/bipolarsos /r/bipolar /r/mentalpod /r/adhd /r/hoarding /r/declutter /r/thrifty /r/tinyhouses /r/leanfire /r/lowcar /r/zerowaste /r/simpleliving /r/livingofftheland /r/hunting /r/animaltracking /r/survival /r/vedc /r/4x4 /r/classiccars /r/automotivetraining /r/autodetailing /r/cartalk /r/mercedes_benz /r/motorsports /r/rallycross /r/worldrallycross /r/blancpain /r/nascarhometracks /r/arcaracing /r/stadiumsupertrucks /r/hydroplanes /r/sailing /r/boatbuilding /r/woodworking /r/cottage_industry /r/farriers /r/blacksmith /r/bladesmith /r/knives /r/swissarmyknives /r/switzerland /r/bern /r/sanktgallen /r/liechtenstein /r/erasmus /r/de /r/germanpuns /r/schland /r/rvacka /r/sloensko /r/slovakia /r/belarus /r/andorra /r/europe /r/hungary /r/francophonie /r/thailand /r/vietnam /r/vietnampics /r/travel /r/geography /r/climate /r/drought /r/waterutilities /r/drylands /r/irrigation /r/water /r/onthewaterfront /r/wetlands /r/marinelife /r/ocean /r/seasteading /r/frontier_colonization /r/arcology /r/retrofuturism /r/goldenpath /r/politics /r/moderationtheory /r/wdp /r/outoftheloop /r/wherearetheynow /r/entertainment /r/portlandia /r/themichaeljfoxshow /r/backtothefuture /r/bladerunner /r/filmnoir /r/vintageladyboners /r/classicfilms /r/foreignmovies /r/britishfilms /r/canadianfilm /r/newjerseyfilm /r/newzealandfilm /r/newzealand /r/wellington /r/nzmetahub /r/newzealandhistory /r/scottishhistory /r/scots /r/scottishproblems /r/britishproblems /r/swedishproblems /r/pinsamt /r/sweden /r/svenskpolitik /r/arbetarrorelsen /r/socialism /r/shittydebatecommunism /r/shittysocialscience /r/shittyideasforadmins /r/shittytheoryofreddit /r/shittybuildingporn /r/shittylifeprotips /r/shittyshitredditsays /r/shittyquotesporn /r/shittyama /r/askashittyparent /r/shittyprogramming /r/shittyaskalawyer /r/badlegaladvice /r/badscience /r/badeconomics /r/badhistory /r/historicalrage /r/metarage /r/ragenovels /r/fffffffuuuuuuuuuuuu /r/gaaaaaaayyyyyyyyyyyy /r/lgbteens /r/needafriend /r/rant /r/showerthoughts /r/markmywords /r/calledit /r/futurewhatif /r/sportswhatif /r/alternatehistory /r/maps /r/xkcd /r/kerbalspaceprogram /r/spacesimgames /r/eve /r/scifigaming /r/masseffect /r/imaginarymasseffect /r/imaginaryvampires /r/imaginarytowers /r/imaginarybestof /r/pics /r/spaceporn /r/auroraporn /r/weatherporn /r/sfwpornnetwork /r/fwepp /r/shittyearthporn /r/shittyaskreddit /r/askashittyphilosopher /r/shittyaskhistory /r/shittysuboftheweek /r/shittyaskcooking /r/shittyhub /r/coolguides /r/trendingsubreddits /r/monkslookingatbeer /r/beerporn /r/beerwithaview /r/shittybeerwithaview /r/shittyfoodporn /r/enttreats /r/trees /r/eldertrees /r/vaporents /r/crainn /r/eirhub /r/fairepublicofireland /r/gaeltacht /r/westmeath /r/tipperary /r/limerick /r/kilkenny /r/ireland /r/irejobs /r/resumes /r/careerguidance /r/flatone /r/centralillinois /r/chicubs /r/whitesox /r/minnesotatwins /r/minnesotavikings /r/greenbaypackers /r/jaguars /r/miamidolphins /r/nflroundtable /r/detroitlions /r/forhonor /r/vikingstv /r/hannibaltv /r/thepathhulu /r/batesmotel /r/hannibal /r/hitchcock /r/silentmoviegifs /r/moviestunts /r/bollywoodrealism /r/indiamain /r/indianews /r/asia /r/oldindia /r/explorepakistan /r/churchporn /r/medievalporn /r/castles /r/historyporn /r/thewaywewere /r/1970s /r/classicmovietrailers /r/warmovies /r/moviecritic /r/trailers /r/liveaction /r/animedeals /r/dbz /r/toonami /r/regularshow /r/thelifeandtimesoftim /r/aquajail /r/modern_family /r/supernatural /r/mishacollins /r/jaredpadalecki /r/fandomnatural /r/fangirls /r/trollxgirlgamers /r/trollmedia /r/trollgaming /r/trollmua /r/justtrollxthings /r/trollxmoms /r/trollmeta /r/trollychromosome /r/oney /r/askwomen /r/okcupid /r/relationship_advice /r/help /r/bugs /r/redditdev /r/enhancement /r/yoursub /r/horrorreviewed /r/truecreepy /r/metatruereddit /r/truepolitics /r/truehub /r/truegaming /r/askgames /r/freegamesonandroid /r/androidapps /r/apphookup /r/browsemyreddit /r/findareddit /r/trap /r/naut /r/militaryfinance /r/army /r/militarystories /r/nationalguard /r/uscg /r/usa /r/murica /r/lonestar /r/whataburger /r/fastfood /r/cocacola /r/kelloggs /r/kellawwggs /r/awwducational /r/marinebiologygifs /r/biologygifs /r/chemicalreactiongifs /r/homechemistry /r/holdmybeaker /r/holdmybeer /r/movieoftheday /r/sharknado /r/syfy /r/killjoys /r/theexpanse /r/truedetective /r/boardwalkempire /r/mobcast /r/1920s /r/1960s /r/beatles /r/minimaluminiumalism /r/ghostsrights /r/botsrights /r/totallynotrobots /r/robotics /r/manna /r/singularity /r/futureporn /r/singularitarianism /r/automate /r/darkfuturology /r/controlproblem /r/aiethics /r/ainothuman /r/neuraljokes /r/3amjokes /r/mommajokes /r/antijokes /r/absolutelynotme_irl /r/toomeirlformeirl /r/meirl /r/tree_irl /r/fishpost /r/mod_irl /r/pics_irl /r/teleshits /r/bitstrips /r/stopbullyingcomics /r/animalsbeingjerks /r/surfinganimals /r/unorthocat /r/catsubs /r/stuffoncats /r/catsinbusinessattire /r/catsinsinks /r/catsonkeyboards /r/mechanicalkeyboards /r/hackedgadgets /r/techsupportmacgyver /r/techsupport /r/programming /r/algorithms /r/datamining /r/datasets /r/wordcloud /r/datavizrequests /r/funnycharts /r/mapporn /r/mapmaking /r/worldbuilding /r/scificoncepts /r/apocalypseporn /r/imaginaryjerk /r/braveryjerk /r/circlejerk /r/politicaldiscussion /r/politicalfactchecking /r/moderatepolitics /r/truereddit /r/malelifestyle /r/fitness /r/swimming /r/freediving /r/bikeshop /r/climbing /r/climbharder /r/bouldering /r/climbergirls /r/womenshredders /r/skatergirls /r/girlsurfers /r/kiteboarding /r/longboarding /r/streetboarding /r/letsgosnowboarding /r/spliddit /r/backcountry /r/wjdbbl2 /r/caving /r/nationalparks /r/parkrangers /r/thesca /r/searchandrescue /r/wildernessbackpacking /r/campinggear /r/flashlight /r/camping /r/yellowstone /r/wmnf /r/pacificcresttrail /r/cdt /r/ultralight /r/backpacking /r/travelpartners /r/adventures /r/libraryofshadows /r/shortscarystories /r/shortscarystoriesooc /r/nosleepooc /r/nosleep",{"type":25,"tag":26,"props":4854,"children":4856},{"id":4855},"centrality",[4857],{"type":31,"value":4858},"Centrality",{"type":25,"tag":34,"props":4860,"children":4861},{},[4862,4864,4871],{"type":31,"value":4863},"Centrality is anohter important topic in graph theory. Here's a brief introduction to centrality from ",{"type":25,"tag":40,"props":4865,"children":4868},{"href":4866,"rel":4867},"https://en.wikipedia.org/wiki/Centrality",[596],[4869],{"type":31,"value":4870},"Wikipedia",{"type":31,"value":354},{"type":25,"tag":586,"props":4873,"children":4874},{},[4875],{"type":25,"tag":34,"props":4876,"children":4877},{},[4878],{"type":31,"value":4879},"In graph theory and network analysis, indicators of centrality identify the most important vertices within a graph. Applications include identifying the most influential person(s) in a social network, key infrastructure nodes in the Internet or urban networks, and super-spreaders of disease.",{"type":25,"tag":34,"props":4881,"children":4882},{},[4883,4885,4891],{"type":31,"value":4884},"There are several different methods of measuring centrality in a graph. Here I use ",{"type":25,"tag":58,"props":4886,"children":4888},{"className":4887},[],[4889],{"type":31,"value":4890},"eigenvector_centrality_numpy",{"type":31,"value":4892},", a function included in NetworkX. It takes in a graph and returns a dictionary with graph nodes as keys and node centrality as values.",{"type":25,"tag":75,"props":4894,"children":4896},{"code":4895,"language":17,"meta":8,"className":78,"style":8},"centrality = nx.eigenvector_centrality_numpy(G1)\n",[4897],{"type":25,"tag":58,"props":4898,"children":4899},{"__ignoreMap":8},[4900],{"type":25,"tag":84,"props":4901,"children":4902},{"class":86,"line":87},[4903,4908,4912],{"type":25,"tag":84,"props":4904,"children":4905},{"style":97},[4906],{"type":31,"value":4907},"centrality ",{"type":25,"tag":84,"props":4909,"children":4910},{"style":91},[4911],{"type":31,"value":201},{"type":25,"tag":84,"props":4913,"children":4914},{"style":97},[4915],{"type":31,"value":4916}," nx.eigenvector_centrality_numpy(G1)\n",{"type":25,"tag":34,"props":4918,"children":4919},{},[4920],{"type":31,"value":4921},"Let's see which subreddit has the highest centrality:",{"type":25,"tag":75,"props":4923,"children":4925},{"code":4924,"language":17,"meta":8,"className":78,"style":8},"print max(centrality, key=centrality.get), centrality[max(centrality, key=centrality.get)]\n",[4926],{"type":25,"tag":58,"props":4927,"children":4928},{"__ignoreMap":8},[4929],{"type":25,"tag":84,"props":4930,"children":4931},{"class":86,"line":87},[4932,4936,4941,4946,4951,4955,4960,4965,4969,4973,4977],{"type":25,"tag":84,"props":4933,"children":4934},{"style":525},[4935],{"type":31,"value":528},{"type":25,"tag":84,"props":4937,"children":4938},{"style":525},[4939],{"type":31,"value":4940}," max",{"type":25,"tag":84,"props":4942,"children":4943},{"style":97},[4944],{"type":31,"value":4945},"(centrality, ",{"type":25,"tag":84,"props":4947,"children":4948},{"style":332},[4949],{"type":31,"value":4950},"key",{"type":25,"tag":84,"props":4952,"children":4953},{"style":91},[4954],{"type":31,"value":201},{"type":25,"tag":84,"props":4956,"children":4957},{"style":97},[4958],{"type":31,"value":4959},"centrality.get), centrality[",{"type":25,"tag":84,"props":4961,"children":4962},{"style":525},[4963],{"type":31,"value":4964},"max",{"type":25,"tag":84,"props":4966,"children":4967},{"style":97},[4968],{"type":31,"value":4945},{"type":25,"tag":84,"props":4970,"children":4971},{"style":332},[4972],{"type":31,"value":4950},{"type":25,"tag":84,"props":4974,"children":4975},{"style":91},[4976],{"type":31,"value":201},{"type":25,"tag":84,"props":4978,"children":4979},{"style":97},[4980],{"type":31,"value":4981},"centrality.get)]\n",{"type":25,"tag":75,"props":4983,"children":4985},{"code":4984},"/r/imaginarybattlefields 0.0721530261127\n",[4986],{"type":25,"tag":58,"props":4987,"children":4988},{"__ignoreMap":8},[4989],{"type":31,"value":4984},{"type":25,"tag":75,"props":4991,"children":4993},{"code":4992,"language":17,"meta":8,"className":78,"style":8},"len(centrality) == len(sorted(centrality.values(), reverse=True))\n",[4994],{"type":25,"tag":58,"props":4995,"children":4996},{"__ignoreMap":8},[4997],{"type":25,"tag":84,"props":4998,"children":4999},{"class":86,"line":87},[5000,5004,5009,5013,5018,5022,5027,5032,5037,5041,5046],{"type":25,"tag":84,"props":5001,"children":5002},{"style":525},[5003],{"type":31,"value":3417},{"type":25,"tag":84,"props":5005,"children":5006},{"style":97},[5007],{"type":31,"value":5008},"(centrality) ",{"type":25,"tag":84,"props":5010,"children":5011},{"style":91},[5012],{"type":31,"value":3628},{"type":25,"tag":84,"props":5014,"children":5015},{"style":525},[5016],{"type":31,"value":5017}," len",{"type":25,"tag":84,"props":5019,"children":5020},{"style":97},[5021],{"type":31,"value":470},{"type":25,"tag":84,"props":5023,"children":5024},{"style":525},[5025],{"type":31,"value":5026},"sorted",{"type":25,"tag":84,"props":5028,"children":5029},{"style":97},[5030],{"type":31,"value":5031},"(centrality.values(), ",{"type":25,"tag":84,"props":5033,"children":5034},{"style":332},[5035],{"type":31,"value":5036},"reverse",{"type":25,"tag":84,"props":5038,"children":5039},{"style":91},[5040],{"type":31,"value":201},{"type":25,"tag":84,"props":5042,"children":5043},{"style":236},[5044],{"type":31,"value":5045},"True",{"type":25,"tag":84,"props":5047,"children":5048},{"style":97},[5049],{"type":31,"value":1195},{"type":25,"tag":75,"props":5051,"children":5052},{"code":3886},[5053],{"type":25,"tag":58,"props":5054,"children":5055},{"__ignoreMap":8},[5056],{"type":31,"value":3886},{"type":25,"tag":34,"props":5058,"children":5059},{},[5060],{"type":31,"value":5061},"Since all of the centrality values are unique, we can look up nodes by their centrality values.",{"type":25,"tag":75,"props":5063,"children":5065},{"code":5064,"language":17,"meta":8,"className":78,"style":8},"subr_list = []\nfor node in centrality:\n    subr_list.append((node, centrality[node]))\n\nsorted_subr_list = subr_list.sort(key=lambda x: x[1])\n",[5066],{"type":25,"tag":58,"props":5067,"children":5068},{"__ignoreMap":8},[5069,5085,5105,5113,5120],{"type":25,"tag":84,"props":5070,"children":5071},{"class":86,"line":87},[5072,5077,5081],{"type":25,"tag":84,"props":5073,"children":5074},{"style":97},[5075],{"type":31,"value":5076},"subr_list ",{"type":25,"tag":84,"props":5078,"children":5079},{"style":91},[5080],{"type":31,"value":201},{"type":25,"tag":84,"props":5082,"children":5083},{"style":97},[5084],{"type":31,"value":1745},{"type":25,"tag":84,"props":5086,"children":5087},{"class":86,"line":113},[5088,5092,5096,5100],{"type":25,"tag":84,"props":5089,"children":5090},{"style":91},[5091],{"type":31,"value":507},{"type":25,"tag":84,"props":5093,"children":5094},{"style":97},[5095],{"type":31,"value":4751},{"type":25,"tag":84,"props":5097,"children":5098},{"style":91},[5099],{"type":31,"value":517},{"type":25,"tag":84,"props":5101,"children":5102},{"style":97},[5103],{"type":31,"value":5104}," centrality:\n",{"type":25,"tag":84,"props":5106,"children":5107},{"class":86,"line":126},[5108],{"type":25,"tag":84,"props":5109,"children":5110},{"style":97},[5111],{"type":31,"value":5112},"    subr_list.append((node, centrality[node]))\n",{"type":25,"tag":84,"props":5114,"children":5115},{"class":86,"line":139},[5116],{"type":25,"tag":84,"props":5117,"children":5118},{"emptyLinePlaceholder":13},[5119],{"type":31,"value":283},{"type":25,"tag":84,"props":5121,"children":5122},{"class":86,"line":162},[5123,5128,5132,5137,5141,5145,5150,5155,5160,5164],{"type":25,"tag":84,"props":5124,"children":5125},{"style":97},[5126],{"type":31,"value":5127},"sorted_subr_list ",{"type":25,"tag":84,"props":5129,"children":5130},{"style":91},[5131],{"type":31,"value":201},{"type":25,"tag":84,"props":5133,"children":5134},{"style":97},[5135],{"type":31,"value":5136}," subr_list.sort(",{"type":25,"tag":84,"props":5138,"children":5139},{"style":332},[5140],{"type":31,"value":4950},{"type":25,"tag":84,"props":5142,"children":5143},{"style":91},[5144],{"type":31,"value":201},{"type":25,"tag":84,"props":5146,"children":5147},{"style":385},[5148],{"type":31,"value":5149},"lambda",{"type":25,"tag":84,"props":5151,"children":5152},{"style":4610},[5153],{"type":31,"value":5154}," x",{"type":25,"tag":84,"props":5156,"children":5157},{"style":97},[5158],{"type":31,"value":5159},": x[",{"type":25,"tag":84,"props":5161,"children":5162},{"style":236},[5163],{"type":31,"value":3879},{"type":25,"tag":84,"props":5165,"children":5166},{"style":97},[5167],{"type":31,"value":3355},{"type":25,"tag":75,"props":5169,"children":5171},{"code":5170,"language":17,"meta":8,"className":78,"style":8},"for x in sorted(subr_list, key=lambda x: x[1], reverse=True)[:200]: print x[0],\n",[5172],{"type":25,"tag":58,"props":5173,"children":5174},{"__ignoreMap":8},[5175],{"type":25,"tag":84,"props":5176,"children":5177},{"class":86,"line":87},[5178,5182,5186,5190,5195,5200,5204,5208,5212,5216,5220,5224,5229,5233,5237,5241,5246,5251,5256,5260,5265,5269],{"type":25,"tag":84,"props":5179,"children":5180},{"style":91},[5181],{"type":31,"value":507},{"type":25,"tag":84,"props":5183,"children":5184},{"style":97},[5185],{"type":31,"value":512},{"type":25,"tag":84,"props":5187,"children":5188},{"style":91},[5189],{"type":31,"value":517},{"type":25,"tag":84,"props":5191,"children":5192},{"style":525},[5193],{"type":31,"value":5194}," sorted",{"type":25,"tag":84,"props":5196,"children":5197},{"style":97},[5198],{"type":31,"value":5199},"(subr_list, ",{"type":25,"tag":84,"props":5201,"children":5202},{"style":332},[5203],{"type":31,"value":4950},{"type":25,"tag":84,"props":5205,"children":5206},{"style":91},[5207],{"type":31,"value":201},{"type":25,"tag":84,"props":5209,"children":5210},{"style":385},[5211],{"type":31,"value":5149},{"type":25,"tag":84,"props":5213,"children":5214},{"style":4610},[5215],{"type":31,"value":5154},{"type":25,"tag":84,"props":5217,"children":5218},{"style":97},[5219],{"type":31,"value":5159},{"type":25,"tag":84,"props":5221,"children":5222},{"style":236},[5223],{"type":31,"value":3879},{"type":25,"tag":84,"props":5225,"children":5226},{"style":97},[5227],{"type":31,"value":5228},"], ",{"type":25,"tag":84,"props":5230,"children":5231},{"style":332},[5232],{"type":31,"value":5036},{"type":25,"tag":84,"props":5234,"children":5235},{"style":91},[5236],{"type":31,"value":201},{"type":25,"tag":84,"props":5238,"children":5239},{"style":236},[5240],{"type":31,"value":5045},{"type":25,"tag":84,"props":5242,"children":5243},{"style":97},[5244],{"type":31,"value":5245},")[:",{"type":25,"tag":84,"props":5247,"children":5248},{"style":236},[5249],{"type":31,"value":5250},"200",{"type":25,"tag":84,"props":5252,"children":5253},{"style":97},[5254],{"type":31,"value":5255},"]: ",{"type":25,"tag":84,"props":5257,"children":5258},{"style":525},[5259],{"type":31,"value":528},{"type":25,"tag":84,"props":5261,"children":5262},{"style":97},[5263],{"type":31,"value":5264}," x[",{"type":25,"tag":84,"props":5266,"children":5267},{"style":236},[5268],{"type":31,"value":3408},{"type":25,"tag":84,"props":5270,"children":5271},{"style":97},[5272],{"type":31,"value":5273},"],\n",{"type":25,"tag":75,"props":5275,"children":5277},{"code":5276},"/r/imaginarybattlefields /r/imaginarycityscapes /r/imaginarywastelands /r/imaginarywildlands /r/imaginaryleviathans /r/imaginarydragons /r/imaginarystarscapes /r/imaginarywesteros /r/imaginaryartifacts /r/imaginaryangels /r/imaginarymaps /r/imaginarybehemoths /r/imaginarydemons /r/imaginaryelves /r/imaginarycentaurs /r/imaginaryfuturewar /r/imaginarysoldiers /r/imaginaryhistory /r/imaginaryarmor /r/imaginarystarships /r/imaginarynetwork /r/imaginaryjedi /r/imaginarydinosaurs /r/imaginarysteampunk /r/imaginarycyberpunk /r/imaginaryarchers /r/imaginaryvehicles /r/imaginaryanime /r/imaginaryfallout /r/imaginaryastronauts /r/imaginarymusic /r/imaginaryfactories /r/imaginaryequestria /r/imaginarywarships /r/imaginaryazeroth /r/imaginaryarrakis /r/imaginarydisney /r/imaginarypolitics /r/imaginaryhorrors /r/imaginarywinterscapes /r/imaginaryseascapes /r/imaginarypirates /r/imaginarywarriors /r/imaginarymiddleearth /r/imaginarygallifrey /r/imaginarymechs /r/imaginarypropaganda /r/imaginarymerfolk /r/imaginaryvikings /r/imaginaryundead /r/imaginarybeasts /r/imaginarymutants /r/imaginaryruins /r/imaginarytamriel /r/imaginaryforests /r/imaginaryelementals /r/imaginaryskyscapes /r/imaginarymonuments /r/imaginarywaterfalls /r/imaginaryworlds /r/imaginarywizards /r/imaginaryinteriors /r/imaginaryhogwarts /r/imaginarytowers /r/imaginaryarchitecture /r/imaginaryweaponry /r/imaginarygaming /r/imaginarycastles /r/imaginaryrobotics /r/imaginarybooks /r/imaginarygnomes /r/imaginaryvillages /r/imaginarydeserts /r/imaginarywerewolves /r/imaginarydieselpunk /r/imaginaryvampires /r/imaginaryadrenaline /r/imaginarykanto /r/imaginarynatives /r/imaginaryrivers /r/imaginarytemples /r/imaginaryassassins /r/imaginaryvolcanoes /r/imaginaryclerics /r/imaginaryprisons /r/imaginarygiants /r/imaginarycowboys /r/imaginaryhumans /r/imaginarydwarves /r/imaginarycaves /r/imaginarytrolls /r/imaginarywalls /r/imaginarylakes /r/imaginarywitches /r/imaginaryorcs /r/imaginarycanyons /r/imaginaryasylums /r/imaginaryimmortals /r/imaginaryaliens /r/imaginarynobles /r/imaginaryspirits /r/imaginaryaetherpunk /r/imaginarytrees /r/imaginaryislands /r/imaginaryninjas /r/imaginaryscience /r/imaginarymountains /r/imaginaryknights /r/imaginarygoblins /r/imaginaryfaeries /r/imaginarygotham /r/imaginarycybernetics /r/imaginaryooo /r/imaginaryderelicts /r/imaginaryfood /r/imaginaryworldeaters /r/imaginarymindscapes /r/imaginaryaww /r/imaginarymarvel /r/imaginaryweather /r/imaginarynewnewyork /r/imaginaryspidey /r/imaginaryautumnscapes /r/imaginarywarhammer /r/imaginaryfeels /r/imaginarywitcher /r/imaginaryvessels /r/imaginarytaverns /r/imaginarybestof /r/imaginaryairships /r/imaginaryportals /r/imaginaryfashion /r/imaginarylovers /r/imaginarydc /r/imaginaryanimals /r/imaginaryhellscapes /r/imaginarycolorscapes /r/imaginarymonstergirls /r/imaginaryswamps /r/imaginarymythology /r/imaginaryscholars /r/imaginaryladyboners /r/imaginaryfuturism /r/imaginaryaviation /r/imaginarypathways /r/imaginarygatherings /r/imaginarybodyscapes /r/imaginaryoverwatch /r/imaginarydwellings /r/imaginarystephenking /r/specart /r/inegentlemanboners /r/comicbookart /r/imaginarymasseffect /r/imaginaryhalo /r/imaginaryjerk /r/backgroundart /r/futureporn /r/imaginarywallpapers /r/imaginaryfamilies /r/imaginarylibraries /r/imaginaryturtleworlds /r/imaginarydesigns /r/wallpapers /r/apocalypseporn /r/comicbookporn /r/isometric /r/imaginarybakerst /r/imaginaryverse /r/imaginarysunnydale /r/imaginaryfederation /r/imaginarysanctuary /r/starshipporn /r/imaginarystarcraft /r/imaginaryoldkingdom /r/imaginarynarnia /r/imaginarycybertron /r/gameworlds /r/imaginarycarnage /r/imaginaryboners /r/icandrawthat /r/imaginarycosmere /r/imaginaryaperture /r/armoredwomen /r/imaginarywtf /r/unusualart /r/imaginaryblueprints /r/alternativeart /r/sympatheticmonsters /r/adorabledragons /r/imaginarysummerscapes /r/imaginarygayboners /r/imaginarystash /r/artistoftheday /r/imaginaryglaciers /r/imaginaryhybrids /r/imaginaryadventurers /r/imaginarymetropolis /r/craftsoficeandfire /r/popartnouveau\n",[5278],{"type":25,"tag":58,"props":5279,"children":5280},{"__ignoreMap":8},[5281],{"type":31,"value":5276},{"type":25,"tag":34,"props":5283,"children":5284},{},[5285],{"type":31,"value":5286},"There seems to be a network of \"imaginary\" subreddits that have the highest centrality. The members of this network probably all link to themselves as well as many other subreddits as the \"imaginary\" topics span a wide range content. This network may be drowning out other nodes that would otherwise have a high centrality relative to the rest of the subreddits. It might be interesting to eliminate these nodes from the graph and recalculate centrality. Let's look at the distribution of centrality values:",{"type":25,"tag":75,"props":5288,"children":5290},{"code":5289,"language":17,"meta":8,"className":78,"style":8},"_ = plt.plot(sorted(centrality.values(), reverse=True)[:1000])\n_ = plt.title('Subreddit Centrality (top 1000)')\n_ = plt.xlabel('Rank')\n_ = plt.ylabel('Centrality')\nplt.savefig(os.path.expanduser('~/Documents/GitHub/briancaffey.github.io/img/subreddit_graph/centrality.png'))\n",[5291],{"type":25,"tag":58,"props":5292,"children":5293},{"__ignoreMap":8},[5294,5343,5367,5391,5415],{"type":25,"tag":84,"props":5295,"children":5296},{"class":86,"line":87},[5297,5301,5305,5310,5314,5318,5322,5326,5330,5334,5339],{"type":25,"tag":84,"props":5298,"children":5299},{"style":97},[5300],{"type":31,"value":3430},{"type":25,"tag":84,"props":5302,"children":5303},{"style":91},[5304],{"type":31,"value":201},{"type":25,"tag":84,"props":5306,"children":5307},{"style":97},[5308],{"type":31,"value":5309}," plt.plot(",{"type":25,"tag":84,"props":5311,"children":5312},{"style":525},[5313],{"type":31,"value":5026},{"type":25,"tag":84,"props":5315,"children":5316},{"style":97},[5317],{"type":31,"value":5031},{"type":25,"tag":84,"props":5319,"children":5320},{"style":332},[5321],{"type":31,"value":5036},{"type":25,"tag":84,"props":5323,"children":5324},{"style":91},[5325],{"type":31,"value":201},{"type":25,"tag":84,"props":5327,"children":5328},{"style":236},[5329],{"type":31,"value":5045},{"type":25,"tag":84,"props":5331,"children":5332},{"style":97},[5333],{"type":31,"value":5245},{"type":25,"tag":84,"props":5335,"children":5336},{"style":236},[5337],{"type":31,"value":5338},"1000",{"type":25,"tag":84,"props":5340,"children":5341},{"style":97},[5342],{"type":31,"value":3355},{"type":25,"tag":84,"props":5344,"children":5345},{"class":86,"line":113},[5346,5350,5354,5358,5363],{"type":25,"tag":84,"props":5347,"children":5348},{"style":97},[5349],{"type":31,"value":3430},{"type":25,"tag":84,"props":5351,"children":5352},{"style":91},[5353],{"type":31,"value":201},{"type":25,"tag":84,"props":5355,"children":5356},{"style":97},[5357],{"type":31,"value":3455},{"type":25,"tag":84,"props":5359,"children":5360},{"style":217},[5361],{"type":31,"value":5362},"'Subreddit Centrality (top 1000)'",{"type":25,"tag":84,"props":5364,"children":5365},{"style":97},[5366],{"type":31,"value":225},{"type":25,"tag":84,"props":5368,"children":5369},{"class":86,"line":126},[5370,5374,5378,5382,5387],{"type":25,"tag":84,"props":5371,"children":5372},{"style":97},[5373],{"type":31,"value":3430},{"type":25,"tag":84,"props":5375,"children":5376},{"style":91},[5377],{"type":31,"value":201},{"type":25,"tag":84,"props":5379,"children":5380},{"style":97},[5381],{"type":31,"value":3480},{"type":25,"tag":84,"props":5383,"children":5384},{"style":217},[5385],{"type":31,"value":5386},"'Rank'",{"type":25,"tag":84,"props":5388,"children":5389},{"style":97},[5390],{"type":31,"value":225},{"type":25,"tag":84,"props":5392,"children":5393},{"class":86,"line":139},[5394,5398,5402,5406,5411],{"type":25,"tag":84,"props":5395,"children":5396},{"style":97},[5397],{"type":31,"value":3430},{"type":25,"tag":84,"props":5399,"children":5400},{"style":91},[5401],{"type":31,"value":201},{"type":25,"tag":84,"props":5403,"children":5404},{"style":97},[5405],{"type":31,"value":3505},{"type":25,"tag":84,"props":5407,"children":5408},{"style":217},[5409],{"type":31,"value":5410},"'Centrality'",{"type":25,"tag":84,"props":5412,"children":5413},{"style":97},[5414],{"type":31,"value":225},{"type":25,"tag":84,"props":5416,"children":5417},{"class":86,"line":162},[5418,5422,5427],{"type":25,"tag":84,"props":5419,"children":5420},{"style":97},[5421],{"type":31,"value":3522},{"type":25,"tag":84,"props":5423,"children":5424},{"style":217},[5425],{"type":31,"value":5426},"'~/Documents/GitHub/briancaffey.github.io/img/subreddit_graph/centrality.png'",{"type":25,"tag":84,"props":5428,"children":5429},{"style":97},[5430],{"type":31,"value":1195},{"type":25,"tag":34,"props":5432,"children":5433},{},[5434],{"type":25,"tag":3536,"props":5435,"children":5437},{"alt":3538,"src":5436},"/static/subreddit_graph/centrality.png",[],{"type":25,"tag":26,"props":5439,"children":5441},{"id":5440},"connectedness",[5442],{"type":31,"value":5443},"Connectedness",{"type":25,"tag":34,"props":5445,"children":5446},{},[5447],{"type":31,"value":5448},"Let's take a look at the graph as a whole. One thing I'm not sure of is whether or not the entire graph is connected. This means that any node can be reached from any other node. Since we constructed the graph from 49 unrelated nodes, it is possible that the graph is unconnected. This would mean that one or more of the default subreddits and its subreddits is not connected with the rest of the graph. In searching for the shortest path I did not come across any pairs of nodes that did not have a path between themselves. I wouldn't be surprised if there are a handful of nodes that stand on their own.",{"type":25,"tag":75,"props":5450,"children":5452},{"code":5451,"language":17,"meta":8,"className":78,"style":8},"#size of graph: nodes and edges (or, subreddits and connecting links)\nprint \"Our graph has \" + str(nx.number_of_nodes(G1)) + ' nodes and ' + str(nx.number_of_edges(G1)) + ' edges.'\n",[5453],{"type":25,"tag":58,"props":5454,"children":5455},{"__ignoreMap":8},[5456,5464],{"type":25,"tag":84,"props":5457,"children":5458},{"class":86,"line":87},[5459],{"type":25,"tag":84,"props":5460,"children":5461},{"style":1174},[5462],{"type":31,"value":5463},"#size of graph: nodes and edges (or, subreddits and connecting links)\n",{"type":25,"tag":84,"props":5465,"children":5466},{"class":86,"line":113},[5467,5471,5476,5480,5484,5489,5493,5498,5502,5506,5511,5515],{"type":25,"tag":84,"props":5468,"children":5469},{"style":525},[5470],{"type":31,"value":528},{"type":25,"tag":84,"props":5472,"children":5473},{"style":217},[5474],{"type":31,"value":5475}," \"Our graph has \"",{"type":25,"tag":84,"props":5477,"children":5478},{"style":91},[5479],{"type":31,"value":244},{"type":25,"tag":84,"props":5481,"children":5482},{"style":462},[5483],{"type":31,"value":1583},{"type":25,"tag":84,"props":5485,"children":5486},{"style":97},[5487],{"type":31,"value":5488},"(nx.number_of_nodes(G1)) ",{"type":25,"tag":84,"props":5490,"children":5491},{"style":91},[5492],{"type":31,"value":429},{"type":25,"tag":84,"props":5494,"children":5495},{"style":217},[5496],{"type":31,"value":5497}," ' nodes and '",{"type":25,"tag":84,"props":5499,"children":5500},{"style":91},[5501],{"type":31,"value":244},{"type":25,"tag":84,"props":5503,"children":5504},{"style":462},[5505],{"type":31,"value":1583},{"type":25,"tag":84,"props":5507,"children":5508},{"style":97},[5509],{"type":31,"value":5510},"(nx.number_of_edges(G1)) ",{"type":25,"tag":84,"props":5512,"children":5513},{"style":91},[5514],{"type":31,"value":429},{"type":25,"tag":84,"props":5516,"children":5517},{"style":217},[5518],{"type":31,"value":5519}," ' edges.'\n",{"type":25,"tag":75,"props":5521,"children":5523},{"code":5522},"Our graph has 29854 nodes and 149491 edges.\n",[5524],{"type":25,"tag":58,"props":5525,"children":5526},{"__ignoreMap":8},[5527],{"type":31,"value":5522},{"type":25,"tag":75,"props":5529,"children":5531},{"code":5530,"language":17,"meta":8,"className":78,"style":8},"print \"True of False: our graph is connected... \" + str(nx.is_connected(G1)) + '!'\n",[5532],{"type":25,"tag":58,"props":5533,"children":5534},{"__ignoreMap":8},[5535],{"type":25,"tag":84,"props":5536,"children":5537},{"class":86,"line":87},[5538,5542,5547,5551,5555,5560,5564],{"type":25,"tag":84,"props":5539,"children":5540},{"style":525},[5541],{"type":31,"value":528},{"type":25,"tag":84,"props":5543,"children":5544},{"style":217},[5545],{"type":31,"value":5546}," \"True of False: our graph is connected... \"",{"type":25,"tag":84,"props":5548,"children":5549},{"style":91},[5550],{"type":31,"value":244},{"type":25,"tag":84,"props":5552,"children":5553},{"style":462},[5554],{"type":31,"value":1583},{"type":25,"tag":84,"props":5556,"children":5557},{"style":97},[5558],{"type":31,"value":5559},"(nx.is_connected(G1)) ",{"type":25,"tag":84,"props":5561,"children":5562},{"style":91},[5563],{"type":31,"value":429},{"type":25,"tag":84,"props":5565,"children":5566},{"style":217},[5567],{"type":31,"value":5568}," '!'\n",{"type":25,"tag":75,"props":5570,"children":5572},{"code":5571},"True of False: our graph is connected... False!\n",[5573],{"type":25,"tag":58,"props":5574,"children":5575},{"__ignoreMap":8},[5576],{"type":31,"value":5571},{"type":25,"tag":75,"props":5578,"children":5580},{"code":5579,"language":17,"meta":8,"className":78,"style":8},"Gc = max(nx.connected_component_subgraphs(G1), key=len)\nprint \"The largest connected component subgraph has \" + str(nx.number_of_nodes(Gc)) + \" nodes. \"\n",[5581],{"type":25,"tag":58,"props":5582,"children":5583},{"__ignoreMap":8},[5584,5621],{"type":25,"tag":84,"props":5585,"children":5586},{"class":86,"line":87},[5587,5592,5596,5600,5605,5609,5613,5617],{"type":25,"tag":84,"props":5588,"children":5589},{"style":97},[5590],{"type":31,"value":5591},"Gc ",{"type":25,"tag":84,"props":5593,"children":5594},{"style":91},[5595],{"type":31,"value":201},{"type":25,"tag":84,"props":5597,"children":5598},{"style":525},[5599],{"type":31,"value":4940},{"type":25,"tag":84,"props":5601,"children":5602},{"style":97},[5603],{"type":31,"value":5604},"(nx.connected_component_subgraphs(G1), ",{"type":25,"tag":84,"props":5606,"children":5607},{"style":332},[5608],{"type":31,"value":4950},{"type":25,"tag":84,"props":5610,"children":5611},{"style":91},[5612],{"type":31,"value":201},{"type":25,"tag":84,"props":5614,"children":5615},{"style":525},[5616],{"type":31,"value":3417},{"type":25,"tag":84,"props":5618,"children":5619},{"style":97},[5620],{"type":31,"value":225},{"type":25,"tag":84,"props":5622,"children":5623},{"class":86,"line":113},[5624,5628,5633,5637,5641,5646,5650],{"type":25,"tag":84,"props":5625,"children":5626},{"style":525},[5627],{"type":31,"value":528},{"type":25,"tag":84,"props":5629,"children":5630},{"style":217},[5631],{"type":31,"value":5632}," \"The largest connected component subgraph has \"",{"type":25,"tag":84,"props":5634,"children":5635},{"style":91},[5636],{"type":31,"value":244},{"type":25,"tag":84,"props":5638,"children":5639},{"style":462},[5640],{"type":31,"value":1583},{"type":25,"tag":84,"props":5642,"children":5643},{"style":97},[5644],{"type":31,"value":5645},"(nx.number_of_nodes(Gc)) ",{"type":25,"tag":84,"props":5647,"children":5648},{"style":91},[5649],{"type":31,"value":429},{"type":25,"tag":84,"props":5651,"children":5652},{"style":217},[5653],{"type":31,"value":5654}," \" nodes. \"\n",{"type":25,"tag":75,"props":5656,"children":5658},{"code":5657},"The largest connected component subgraph has 29840 nodes.\n",[5659],{"type":25,"tag":58,"props":5660,"children":5661},{"__ignoreMap":8},[5662],{"type":31,"value":5657},{"type":25,"tag":34,"props":5664,"children":5665},{},[5666],{"type":31,"value":5667},"There are 14 nodes that are not connected to the main connected component. Let's list them.",{"type":25,"tag":75,"props":5669,"children":5671},{"code":5670,"language":17,"meta":8,"className":78,"style":8},"for x in list(set(nx.to_dict_of_lists(G1, nodelist=None).keys()) - set(nx.to_dict_of_lists(Gc, nodelist=None).keys())): print x,\n",[5672],{"type":25,"tag":58,"props":5673,"children":5674},{"__ignoreMap":8},[5675],{"type":25,"tag":84,"props":5676,"children":5677},{"class":86,"line":87},[5678,5682,5686,5690,5694,5698,5702,5707,5712,5716,5720,5725,5729,5734,5739,5743,5747,5751,5756,5760],{"type":25,"tag":84,"props":5679,"children":5680},{"style":91},[5681],{"type":31,"value":507},{"type":25,"tag":84,"props":5683,"children":5684},{"style":97},[5685],{"type":31,"value":512},{"type":25,"tag":84,"props":5687,"children":5688},{"style":91},[5689],{"type":31,"value":517},{"type":25,"tag":84,"props":5691,"children":5692},{"style":462},[5693],{"type":31,"value":465},{"type":25,"tag":84,"props":5695,"children":5696},{"style":97},[5697],{"type":31,"value":470},{"type":25,"tag":84,"props":5699,"children":5700},{"style":462},[5701],{"type":31,"value":475},{"type":25,"tag":84,"props":5703,"children":5704},{"style":97},[5705],{"type":31,"value":5706},"(nx.to_dict_of_lists(G1, ",{"type":25,"tag":84,"props":5708,"children":5709},{"style":332},[5710],{"type":31,"value":5711},"nodelist",{"type":25,"tag":84,"props":5713,"children":5714},{"style":91},[5715],{"type":31,"value":201},{"type":25,"tag":84,"props":5717,"children":5718},{"style":236},[5719],{"type":31,"value":2288},{"type":25,"tag":84,"props":5721,"children":5722},{"style":97},[5723],{"type":31,"value":5724},").keys()) ",{"type":25,"tag":84,"props":5726,"children":5727},{"style":91},[5728],{"type":31,"value":1957},{"type":25,"tag":84,"props":5730,"children":5731},{"style":462},[5732],{"type":31,"value":5733}," set",{"type":25,"tag":84,"props":5735,"children":5736},{"style":97},[5737],{"type":31,"value":5738},"(nx.to_dict_of_lists(Gc, ",{"type":25,"tag":84,"props":5740,"children":5741},{"style":332},[5742],{"type":31,"value":5711},{"type":25,"tag":84,"props":5744,"children":5745},{"style":91},[5746],{"type":31,"value":201},{"type":25,"tag":84,"props":5748,"children":5749},{"style":236},[5750],{"type":31,"value":2288},{"type":25,"tag":84,"props":5752,"children":5753},{"style":97},[5754],{"type":31,"value":5755},").keys())): ",{"type":25,"tag":84,"props":5757,"children":5758},{"style":525},[5759],{"type":31,"value":528},{"type":25,"tag":84,"props":5761,"children":5762},{"style":97},[5763],{"type":31,"value":5764}," x,\n",{"type":25,"tag":75,"props":5766,"children":5768},{"code":5767},"/r/spacediscussions /r/wtfit.gif /r/space. /r/subreddit_graph /r/vidalia /r/listentothis. /r/history. /r/all. /r/ghostdriver /r/personalfinance. /r/toombscounty /r/gaming /r/science /r/books.\n",[5769],{"type":25,"tag":58,"props":5770,"children":5771},{"__ignoreMap":8},[5772],{"type":31,"value":5767},{"type":25,"tag":34,"props":5774,"children":5775},{},[5776],{"type":31,"value":5777},"Some of the large communities on reddit include /r/books, /r/gaming and /r/science. These subreddits list related subreddits on separate wiki pages since there are many related subreddits for each one. They were most likely all captured in the subsequent levels of the graph, but they also did not link back to /r/science. Here's an example:",{"type":25,"tag":75,"props":5779,"children":5781},{"code":5780,"language":17,"meta":8,"className":78,"style":8},"for x in master_df_u.loc[master_df_u.subreddit=='/r/physics'].related: print x\n",[5782],{"type":25,"tag":58,"props":5783,"children":5784},{"__ignoreMap":8},[5785],{"type":25,"tag":84,"props":5786,"children":5787},{"class":86,"line":87},[5788,5792,5796,5800,5805,5809,5814,5819,5823],{"type":25,"tag":84,"props":5789,"children":5790},{"style":91},[5791],{"type":31,"value":507},{"type":25,"tag":84,"props":5793,"children":5794},{"style":97},[5795],{"type":31,"value":512},{"type":25,"tag":84,"props":5797,"children":5798},{"style":91},[5799],{"type":31,"value":517},{"type":25,"tag":84,"props":5801,"children":5802},{"style":97},[5803],{"type":31,"value":5804}," master_df_u.loc[master_df_u.subreddit",{"type":25,"tag":84,"props":5806,"children":5807},{"style":91},[5808],{"type":31,"value":3628},{"type":25,"tag":84,"props":5810,"children":5811},{"style":217},[5812],{"type":31,"value":5813},"'/r/physics'",{"type":25,"tag":84,"props":5815,"children":5816},{"style":97},[5817],{"type":31,"value":5818},"].related: ",{"type":25,"tag":84,"props":5820,"children":5821},{"style":525},[5822],{"type":31,"value":528},{"type":25,"tag":84,"props":5824,"children":5825},{"style":97},[5826],{"type":31,"value":5827}," x\n",{"type":25,"tag":75,"props":5829,"children":5831},{"code":5830},"['/r/physicsjokes', '/r/gradadmissions', '/r/homeworkhelp', '/r/scienceimages', '/r/askacademia', '/r/physicsgifs', '/r/physicsstudents', '/r/gradschool', '/r/askphysics', '/r/physics']\n",[5832],{"type":25,"tag":58,"props":5833,"children":5834},{"__ignoreMap":8},[5835],{"type":31,"value":5830},{"type":25,"tag":34,"props":5837,"children":5838},{},[5839,5841,5848],{"type":31,"value":5840},"I've got some additional ideas to explore in another post on this topic, such as finding cliques and maximual cliques, and doing graph visualizations with D3.js. If you are interested in playing with the data, you can clone ",{"type":25,"tag":40,"props":5842,"children":5845},{"href":5843,"rel":5844},"https://github.com/briancaffey/reddit-graph-analysis",[596],[5846],{"type":31,"value":5847},"my GitHub repo",{"type":31,"value":5849}," and load the pickled DataFrames like this:",{"type":25,"tag":75,"props":5851,"children":5853},{"code":5852,"language":17,"meta":8,"className":78,"style":8},"import pandas as pd\ndf = pd.read_pickle('pickle/master_df.p')\n",[5854],{"type":25,"tag":58,"props":5855,"children":5856},{"__ignoreMap":8},[5857,5876],{"type":25,"tag":84,"props":5858,"children":5859},{"class":86,"line":87},[5860,5864,5868,5872],{"type":25,"tag":84,"props":5861,"children":5862},{"style":91},[5863],{"type":31,"value":105},{"type":25,"tag":84,"props":5865,"children":5866},{"style":97},[5867],{"type":31,"value":3062},{"type":25,"tag":84,"props":5869,"children":5870},{"style":91},[5871],{"type":31,"value":154},{"type":25,"tag":84,"props":5873,"children":5874},{"style":97},[5875],{"type":31,"value":3071},{"type":25,"tag":84,"props":5877,"children":5878},{"class":86,"line":113},[5879,5884,5888,5892,5896],{"type":25,"tag":84,"props":5880,"children":5881},{"style":97},[5882],{"type":31,"value":5883},"df ",{"type":25,"tag":84,"props":5885,"children":5886},{"style":91},[5887],{"type":31,"value":201},{"type":25,"tag":84,"props":5889,"children":5890},{"style":97},[5891],{"type":31,"value":3180},{"type":25,"tag":84,"props":5893,"children":5894},{"style":217},[5895],{"type":31,"value":3185},{"type":25,"tag":84,"props":5897,"children":5898},{"style":97},[5899],{"type":31,"value":225},{"type":25,"tag":5901,"props":5902,"children":5903},"style",{},[5904],{"type":31,"value":5905},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":8,"searchDepth":113,"depth":113,"links":5907},[],"markdown","content:2017:03:03:graph_subreddit.md","content","2017/03/03/graph_subreddit.md","2017/03/03/graph_subreddit","md",1724545414142]